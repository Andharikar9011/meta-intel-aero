From d56d6132b9cd3f8a7fcd9eb3f622a2dc7b6a6c7b Mon Sep 17 00:00:00 2001
From: Huiquan Zhong <huiquan.zhong@intel.com>
Date: Mon, 5 Jan 2015 23:37:00 +0800
Subject: [PATCH 04/10] dma: dw: must initialize dma channel in each
 transaction

CHT enable Autonomous D3 for LPSS DMA. When idle, DMA will power gated
and reset without driver knowledge, So need to initialize in each dma
transaction.

Change-Id: I24027f376b691419b2a1cb6c599f5856425c5a82
Signed-off-by: Huiquan Zhong <huiquan.zhong@intel.com>
---
 drivers/dma/dw/core.c | 9 ---------
 drivers/dma/dw/regs.h | 1 -
 2 files changed, 10 deletions(-)

diff --git a/drivers/dma/dw/core.c b/drivers/dma/dw/core.c
index 7067b6d..eccf8a1 100644
--- a/drivers/dma/dw/core.c
+++ b/drivers/dma/dw/core.c
@@ -134,9 +134,6 @@ static void dwc_initialize(struct dw_dma_chan *dwc)
 	u32 cfghi = DWC_CFGH_FIFO_MODE;
 	u32 cfglo = DWC_CFGL_CH_PRIOR(dwc->priority);

-	if (dwc->initialized == true)
-		return;
-
 	if (dws) {
 		/*
 		 * We need controller-specific data to set up slave
@@ -157,8 +154,6 @@ static void dwc_initialize(struct dw_dma_chan *dwc)
 	/* Enable interrupts */
 	channel_set_bit(dw, MASK.XFER, dwc->mask);
 	channel_set_bit(dw, MASK.ERROR, dwc->mask);
-
-	dwc->initialized = true;
 }

 /*----------------------------------------------------------------------*/
@@ -1117,9 +1112,6 @@ static void dw_dma_off(struct dw_dma *dw)

 	while (dma_readl(dw, CFG) & DW_CFG_DMA_EN)
 		cpu_relax();
-
-	for (i = 0; i < dw->dma.chancnt; i++)
-		dw->chan[i].initialized = false;
 }

 static void dw_dma_on(struct dw_dma *dw)
@@ -1212,7 +1204,6 @@ static void dwc_free_chan_resources(struct dma_chan *chan)
 	spin_lock_irqsave(&dwc->lock, flags);
 	list_splice_init(&dwc->free_list, &list);
 	dwc->descs_allocated = 0;
-	dwc->initialized = false;

 	/* Disable interrupts */
 	channel_clear_bit(dw, MASK.XFER, dwc->mask);
diff --git a/drivers/dma/dw/regs.h b/drivers/dma/dw/regs.h
index 241ff2b..4a20d3b 100644
--- a/drivers/dma/dw/regs.h
+++ b/drivers/dma/dw/regs.h
@@ -225,7 +225,6 @@ struct dw_dma_chan {
 	u8				priority;
 	enum dma_transfer_direction	direction;
 	bool				paused;
-	bool				initialized;

 	/* software emulation of the LLP transfers */
 	struct list_head	*tx_node_active;
-- 
1.9.1

