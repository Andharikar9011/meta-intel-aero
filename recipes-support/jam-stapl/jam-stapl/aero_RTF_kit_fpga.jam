'Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
'Your use of Altera Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Altera Program License 
'Subscription Agreement, the Altera Quartus Prime License Agreement,
'the Altera MegaCore Function License Agreement, or other 
'applicable license agreement, including, without limitation, 
'that your use is for the sole purpose of programming logic 
'devices manufactured by Altera and sold by Altera or its 
'authorized distributors.  Please refer to the applicable 
'agreement for further details.

'Device #1: 10M08SA - aero_rtf_kit_fpga.pof Wed Oct 26 16:42:21 2016


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 16.0";
NOTE "DATE" "2016/10/26";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "aero_rtf_kit_fpga.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "USERCODE" "00088E01";
NOTE "CHECKSUM" "026615A0";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "67";
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
DO_INIT_CONFIGURATION OPTIONAL,
L27;
ACTION BLANKCHECK = L17,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION VERIFY = L18,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
L27;
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 131076;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A173[1] = $
0;
INTEGER A169[21] = 
950272, 64, 288, 1, 1146880, 1425408, 1, 475136, 950272, 3, 671744, 278528, 3, 131072, 147456, 3, 131072, 16384, 0, 16384, 0;
INTEGER A170[1] = 
0;
INTEGER A171[1] = 
2572288;
BOOLEAN V424 = 1;
BOOLEAN A172[2572288] = @
0WE10u@@@@3q6aDm@0yl@@@VFKAIOx@@xb8S2Eu_@3kHES47EX3kW3y0@@@w@zz@
tB@Flz@xw@hx@Vku@nD@@jw@jT@Vjy@fj@@i_@bz@Vim@3Ry@lA@lhp@tAz@iM@@
gs@hwz@fY@Fgv@Vg_@ck@Vfy@JQ@@Zw@le@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@NQ@@FK_@e@rq@9HuX_dGR8E6m4W_@bp@XR5hioA@@@
@M@@@z@u@d001_@@p3181@@@P_@@@zs@@d001_@j@z@@du@@@tT@@l@@v@408m@@
Vg@@@V@_@@_VY@z@@Rw@@@tL@@l@du@G0Cma@@l@dvV@@@0n0OW@FyV@@@5_@@@D
o@@x@3_F703io@@x@7_t@@la@@@VBy@@_Vf@z@@p9RC100@@l@Nv@_@V0000m103
q0W1P0mGC0O460C130MW1U00208102MEm04G0100020010W008u7W4a7S0iLGZ00
02gAm00G018W00wCu14001l0OG406K4W1f0aGy1C44W1X1OGb090028u719AWm0R
FC0NGWHu06iHW1n3aGG16KKm315yZ00W0400180000G01isG28e02G014y0W1AW0
2000000G00000000eKb200hEO0008qO2s000KgI1eKbMQfA500Y0mWB0C85W4g2W
1KV900eqI33mWa0Iu9W4KQf0S7W1hIOWG10W86Ce103ARmWW2IGfb6Gl69WK00ee
YDKQf08qG3LeX20008KX6QeN0OG6064KG200W20000eKG15eW2AG15W80C0eW200
000000e05WIx68400200080000jhL01008W0402801GfG21aW0I80940008W04G0
98000bWO0v930000hO500GG00000000eYAKH5r80Cu203I1m0esA015m00Q5rX0C
8A0600000LK1GBj0000000W000400K2000H4m0YOY84G0H8Y8YG014W000000WPZ
43y@@0200iW5M000000fRX5im2BOX5M000i82036Bn000GY0000y@@0mExiZTs10
00mEsPdTN0OG606CRI200W40000uVxjdzsRFxj7W80CWzs30000000Wzi7W@zFW0
0000W5000008jc1C8T03g7m0nS50n4OmKA90W@@N0000lzsR0000004lvjtUpRlz
ct00G506ij030mV@1mtVpRlz60100lzsRU@jty_R00000uxl@st_3GzA90a0000_
xza06q8W1H2a0lz60_xF000000WN000000e000lyoh306e103ubNUnB008E13020
0mRl1000O5hi201000GqAhSbLMvghk200SbhkwAMP50JlO00085W000__R0OjrMp
Qh1000ODhjswB0C8303yD00a5X100040000uxhltztVjhl60wk900uwhT@rtx_hl
EDc40mzt3Wl@6000000mA000008HG0WLMnAhiQ1W2g0mWO7I000yfF1000eX6q00
m0005I3DqZ6Qe7zq300edUqJFDe100KHZ108WW000UoJ0_rlUw9F1840ufdyqpVv
fd@200000@_hV@zpnQC00010020400mdyqRlvjdUoJ0yctUw9FzqRU200n9O00yq
J0000000D0G8000I130xe1DsPd50AmExe1DqGZm9I000yjl1000eX6q00G0005J3
DqX6Qe3Tq100eZEqH7DY981042000W@zF07gH00Wt0000ysx18C8i16ujtUFyW19
bOW00000yjtytV@vjtU30@zdtUxDlztxmTCW@_3GS2600D00000WY110QeX670CG
3064Km3_@V0000JOY9000000sdO2JCn4cOY9000J41W13_OGN36uxl1eh13020Nx
whlszNVjx10000mzk@_xd_91000A0000y@rNxwhlsrN3G406awW100WhTD0VMiW1
c000000C2C0cOS03U0uWm1I001sHTG6q@@F_700000eoP008Y8C000HSKKB0TC0E
DAXO1ye_e7gF9XIag00VXSi0s4ia7000kWD004M0900082Be58x90X5uNi0O5MGc
000K080000000101000000W087Bn01G0WobUeUB60W00yLb10Iyx0000G0G086Z4
o18Xh0U0WG3GqC9000004010000G020800G0Izo00080jMa00XqgflI8SZ4005K1
800000e8L01000008WAe0800001K1A028000GKI5G00000W2gqja1e2A00000200
G5W000010Wa3C002eYya200000geA0Yy8X74suP39YFmWakIu1X40myj@WG2XRS5
000PE2001ez34ksxG1M20000kj2WG1WAeWns9vXLvK10RUSW2j761300PzwtJ8HV
A0traGe0miUZ4000bS2004KGEBw810IwWSTI00GfQtWX00eL300S6v10WjUE10Gh
600GrsjIepmG00AE100IWR00GyX8nRy08N06_K490WYJv2mGK1E1Tv1ON8FMXS6g
q0013iHpa2ncm00000umE60Tv1Oi0Xcly1gp70NOc0K44WNCH20eA600eNr300HR
wKi06G4C08M0iU1DAe9A0X5G500@na1Oepqe00g2aC03TfAqBJ64BW1__G02BWA0
mzEV5450GL000mus500YX8AI300X5iqdj90_x18P06YBWga1OuHNa00pB7TI200D
PwvDA0WcC000eT0004@hJf2m0000Mo200n2V20Mz@u0a0W02180080102G000Ihr
000W04000000W04000000180007i1000004G004EGE000O87004Wy9006v000vgJ
008CvJo2W100j8DB720kVrSGI8C0I00zNKtS200QXRSE40SMDtZa00WHem8D8LG3
MIs000G000001W00ihh1020067q0m8900WpiF8y18200000000G4yAh1zrP00W00
1000w770EbE1G85000040400000a00000I00W1QD00I000WH2000Wq70000S_pH8
000000yzt082d@S48_zxG40V@D0O_zXG4YV@E0S_x184cVV80nm3000d@V400000
006nRhM5m8E008xsQkMbi0O0QA0mFsH1D5000OlJxsHbA03n5uKeW600qb700iTO
DHbI530005q5004C0OXdV50GHm03SADA6WgO0yqEIfHnGi0O5MmL1FHLCL64yaJb
wR0kd5WmoI0g20mp_8bx43n2WLO1m6yaJ1gQ00GJQ00myM200YfAMo000nKHLQKC
4J5LWLM0YfQcifCmg@3GQK60000eIU3w@t0004GfHP008W0G0109IPGQK9a8b1LE
33Oa3WqgO82gM2dYaa3D8DA3KOe04mbA4100IXYXeD3Xm00GO0ga6b1mgM0IZYXY
uD0W08m9x90W008@U3IZA1G0049IPGQKFKUS2d1OGZn6000004G8LYK9G200exV3
0020L8b1000I0e_0iJL2WH2000YmnV710S_x82mtV600_yt0Xm@l308_@rGXvdF2
0C_zH8Wxl700S@v18WXu000l82WCnF100eje10W3bD8SgM00QA4ELBvcV200uSx2
00tERGCLw63ALfHnGif943d1R0aGNxyu9l08UK6cgNYW1_H753GyevyAq600Ln00
0QgE00eg_Vo7@XGJDWNo2GGzX4bwC08uFZsCA0Wce00WGGA004Fw@1XgLi0O5MGN
nZwnO8yOqn08UqqQEXXYy@10XgVyeuzp2F00Wb58004FQW5p4200WL4300X2bGye
A69A3nZILQK6a8L2nZ_Z410WuHnm_G1Gyej00u_tZG0GyeX80ldEUq@JzNY_@P00
xYROgISwnFnZ_000WQP000z7rIyej000IcB00Gye@7Fw@nZkNZFB1G0000FkTyeT
10028qKd0zB0KYl1HfwA020WuHr2QY3maABr@l10510YM8XuH@FUqs50004TF3P8
YHyeC00_yCUqd10014FA6fxRGye68mY18Uq0pgdXuH9CMUj2nFD0WgpH_Z400WBO
300n2WLO1W1P718sSXO500aUV2S200Ax79eu400mRyw@7fC1O8g0dWgp04LmI9Lm
Gk4C4B0MnZj4z10Wm2M203UQ@@900aqEwVXWas0001ae@@42hs00002TLdmBm9yF
L20200oecXghDGV33m1U94JW100100140W000004004GG020000G00G001800000
10mw@60001OVS3044004G00000IR06aRW16mI0cvLeUiD00G0GO2600400000180
W00G000004WW020010000G0028WMkD0002ujz608W00G0000004W0089TR080020
Was0008e2004vR2p@bGU29asT2v981002Y_@D08H_Na3Cq7O2Z9OmY0UCmG5GIR0
0mR0000004G0H@@6014Gu_V3G0144@l14G01Qxt014G0BEO0014a1uD0GG0HWd68
Yg0Oly42c8XN2I862O0008GB008x06gy762@60x@d04q2W_@p12Q1Gc0C4HGE0W9
010qQ200Wn8I48GCYC3m4g860C4PI0Q4D2086H7100H6306Yi101ZT31008p00m4
000000jcJBdW000a3uD8Y232Ut00G000Of0JUt0320000QD1000241WMW0GaG005
mI40W8Ca0Y2S800e2E2W01F20GKW30ymO10049a11000000GMZ8r5IKt3mo@94A0
K15uKGwi5C0O16GB000Qg100L@x10081k10018nFqb7W0aeACL9wjUfWxO0wo300
mouGM@FarOJytWK@P8aLjoytf4@P8uKN3ar92d30H80Mu_Wjv@I9_pGaiEbuF32L
V02Pz@GMfAn@400g35@F65eBXSr4WK@P8OrMIzdXGMDEn@42PLYp@D04G8500eVu
000Xis2u_@nGMn0S@@O8h9mxf18arb6pBXmzV000mB_10WGMlDnV9Qz7cM4U0eX1
Gg@CCSTKkvH0YKBPe880Z_BqHv600K5300uh600WmIZYO000Hm0WGbDeghbWgO00
0frFSVgIzdXWrH200SEu00WK@Perd42Bhe4@D0ix3mOxH1L1089V6Y50hm2_CnV3
YGWApl40f_pGCLQradJ0u@q2tlB0WcCf_RGS1E100_Mc00Gg@CKw@9fwpGS090G0
X04004W00180000002G000aul1f_R00002G0009_RGg@94EmCHGr20WHkK@JO6HI
IytWK@J8q@GIyF11000X1G20kcmK@Pe@@GIytWK@J8nV3Izd100G0f_RG@o6Sjl1
00000Za0awl100W0k9s000G09In0000aK@D00G0W0000gJ40dEd08a2W4@D000C1
0000a0009_R00a0000Z4000VzA0000uydZG000000uxl1G4E@v8GyxtX80__R0my
x3X84@_T0uyt3G8C@_G0UH4000E@z00ny33O4700aTRxIdme@X8uI18SVFEJw7ef
000eqTZfIkJqau4XJIyF100GF_100YN@V0WiZHnNHIt94l@C08Wrw@tZT1K100Cb
I00WWSTDrV3Az7f4@P8M0i2BuA0WY_X_ZKY@6awF3Ht@J0@C4J@C0040IyFXK@De
ZV3IytW0uDOw73000144f10000Jzt00040f_R0G00001440000010W0a1i400004
00YGvP8CXVIzt0G0105yR04G0W2_D01400208W4YCOwU34G00aul104G0YNt0011
0W000008Waul1HtZKY@6awl1H7cm03Laul1080WIyN200009_RGE4Cy@Z1W0226a
q088W0400000040W02OWV300W0Eml1028W_ttWzbC000018W000Was00W8K500yI
W7nG42GYyl8_RCYWVIvt02@60004ZGs00W90106Hc40XP4I4eHeJ00m4g43W8R0W
mC2D204aD00O2HZ106GJJ00WT31GQf9qgf100G0010000G0OuJ3W000CGX1f@RWb
2400480DzR00W8C818840Q0G5E200KW5HGK07044AmH08Aa11022w80Gc600W3Z5
WPxH208hHg@C4A0K1fNKG1B5a_6130MW1t2Qr08WzJA8p0eu40000NYtNq0aOOSs
AE_l500mEU500oFF1E000Xg757000Qd80J_75r87Wu2w2Ac1GS16SuVH000Qa400
4uV2C100Ay79YQ40n2WLO1W10KDi_Na000OZC008M06Ay79WA20z@d0KD0Wv_H20
BWTi0O5M0iz@d00Gpeu_Z20eP400GOD300rzxKg0C4NG2V@AHhrv000Gbn0006t6
Wv_Z2g6300k@pjwFvrVL00CM200Wd700m1_La8k40Gp3VVF100ZbfgcGwx6yUi10
014Ext00G01084GwNr0mO900uzsgslYQohWkK2G5@90Qx0Ou@GGZc0q@V2X1G2lq
5Wz@J0qs2me@X82y08C0OM@F1GRD0z@72Qo6Wr@D04100ej2WfyIOOV300101000
0012Go_98ib08n@40ZD04sV2niQ00W000201V_dGj@604000010Ex100pgF0jhQ0
00200W80ByR010000H0000QB0004xA000LqeAbhh2g28N8HLjH59wIvgJXhINbMK
LQLikgewgKfgLrGLbhJ5gkEgWnS000Xe200Av@40y6tvzd00Wnyk@UudjDWgf00W
IJF_VFQxU60Wgf000EqD004rw6pv7oEiI4BW1GST0culYTzJeF@PWc3000PISVVd
00000WW09KgqszVfidO8@93Irda_@91gc000q2auzZ20@@l@@NK6100_@@@F0OW6
0C8306Y10Zm0Cm@@p12000@@@@_7G0Mx@dq@tO3o4El7cK_@101000Gbg_@J00SG
G4VQLBWMP@JIk16uvl0ufYV2I8J00OBHEy0020WM30Eo1CCwI0CL1s9LmG87v7vm
@ngeRWFFKFT2VhRGlFay_@3JCdGF0O4DW494WH@@C4WT2b5KHFs9000000jZJpp9
4aZ1jEdm9ZLa2z3JId0400WS0au7Q6wa_12004T@lHWt6K9W4@spGF0Uq@@3004E
G000m7t0000GmD_90000gDR30080aSj1W0082Es00W00v0O0200aS0IuES3Qus00
00GL2O0001000W00G80c5tWOnDOOR3gIs000W0XfbGb0IaLk18002I8m00800H3y
GP1CK9G5XCR0468yt@J8w86wYmZGga8X2Cw@7ZGBmeb26I8WaosJ8q2FISo0hjA0
1vyVlMIqlL8tR1JYUU44m3DqRmt_6yl79PSP0QA2W_@bOmU3kMvXtICOla7MsN50
0100002Q0mWPEbuUsGEmt08008Vhymey6aIG50m9kY7xsJ4E9Lj4G400eqO1OAVO
IhGec7b8_n7QWyXKBUO5ZJ00vMdT03nZjDY100DOA03vXD0m9zi3O82mjH800aT0
3b7_C0iaW_@J00SGIVCOiUb7znOJKov47Z4l69HeZIWK00GGN0mknR4BWDrnMnkM
IaRGBXBC30oNb_@J00SGsJsI4vGoe000q4X000C0ODU3000W10m0060W10C0W7vD
080000m00m0W151a000070030S0060000O00000000O0060m00O0W1210YW0I080
mG80FW30m0030mLz6040010O00C0u00O0020W0218160W1X0O0000WG0U00u00O0
m00m00HRQG216m10O8XW7aSf0aKW1XE_V@@dKxi4dqEMo7Oq@F3giS0Yo5ZxKu9g
iJMApceSj1000fD10WL_heEH6MxdXu6W9WSFoEeB@vA0X77I9DOqZyg0WTM1009e
T00epjGoF6oUwbehU3Ih@1ipA00e_500000H00042020040C00020080402W0041
00184002W0000010100G0002W00G400H80G0YW8W00080001G00020WW0000100W
4204088080G0200GC400W0082005G4004W0eyV3_2814202a8408000X00004000
00C40008G00WW0X00214100GW0020100400H0000Y00W040C00G00000406W0800
010G4004W84080XiKD00200Y0000110G4Y0409408040200W0400W0041EO0_b1W
W3O0014Gm1C00821000040CWW3Ox4132Eu105m017O04082W840841000000K008
u06G2X05Sm300WoG100KEEsu0U000_e7gEs00Wke300aT03XZhIOE85HoO0400m1
y00WEkz_@SoEuJ00Go0500w@t0000JB3PM@@TX5m000G5qyz930CIAt066zFP0m2
Ov6OGMe0tBi1000jT700q@l1000sIr8XAKJ60i1A00G4F200bz@C0oNy_@J00i2G
K@930HP9s0i3RmR00G0HKmC0oBeizJ00i3TCzIROK08u0m3SuXWlDkzV3000y5jh
10400000i1600ukyd10Rm0000Jq00m9xFdQ03007OBeih_@P00u0B00GJ2000040
01010ijj100200104002010W00400XAzD08002020010400201wrs00002001080
02y5W18000040010800402mN09q@l180020G008040020aE510000200100YEWXY
zBQv@D000O3E000ue1Gb@f1Ru000MOG@@f10i09S0pery0aE03z@360m6uq1O8oV
m000u080005G100G00W00WrjBHfp90800G00G00W0W70Ce@V9800800G00W20Gb0
CiCF3vGR0UY6WA1C00000SW4WoeD0002mKx6040001000000XzvD00200W000020
00008klt00G00NpRW000WpxDuTv402000800000Wmez60010Or_44000W3e000Cs
oMpU4Pl19M@0000YSzVOGUC00G0afl1LG@0080aCzVOi@A6asWW@h0000Km@F020
8OyV6000SAA00001000qwK0G9sW000eLvMooIrIQfflIjqQae5wIHwQvhraG9aoX
qrIBfTn98bYqebsfqYoBf59f4zorYbMgLIo9faglriKhNYIIrIQhzbIjq2bgLQIJ
hJPfLbGhqJXMbvBhAH99bZ_AXMfzYJ995fhX1_000Mg5INB00000W3u0CZUQm1S0
0mKuTEk4J@NnNx21W6uk@@400h84Q8gZ@720gKkO3o9RXhgDe80GlVXDyGGsKzSl
PpqRGhy60Wjy8it7kNMQ0200nBR0hr5WyCuioVU00Sz4vGuP4dGoqCinVQxSu40g
Pv0VhRO4m00BW100uYb00GXx6300EHo00Gcl64jCpP4RGYqC4jCmz@R0000UX100
XB@G1zOaCjhnpR00O50000Ve500AN_P0mA0v4pGi1O7sm@@xBA0O7w8Aa8iza180
0WTe100hOSGKOd9j1vBpGSlI7SGrP4pGuoL37O18SPs0mh2U6S2H8RGem9iDh1J5
dGem6aHi1J5R040200104PiQG6n6G004uBW40G004Ry3z@RGin680SW500aE510W
e3UBdu4k@7iCYP8S03gF@g8oD00QNGBv945yO18RGKmZ5WC300RWx@7iCYDutT3o
9sWPXDOUP900100200w1W36rEXQxJ0000IHy60400CdO3EAsWX@berO304EGcJi1
200035caRaD8duDYD6304800000800LHO008qp4IFmW8WBwNS3UREXCqP00G0G6n
6iBy3TaB1100WWaH2sG000uCA000fq2jqerf0WIIq2wfebojqIae4IoH@IPfrkm9
aIXqrwBhRHPBrYqgbMfroIBfLff5jJrdrMgLII9zaBjryLfIYJIbIQffbJlaIagL
wIHhoOf5bIhaoX_bO9hAHB9bYqgnNhKYIBf5fh1jIz2dm1S00Wo9RcG@@WbHC3H8
pGlpIKulJ040MX000GKV0e@@ewsplabDG3u0mkoz_Ne4vHR0_d5Wk68i4vbo8s0@
250JsYTYjC4li1D2HLOb1cAj1Ii50YSWS0m4W1Q3S6n60gW0O2yaJkbX0VP6BW1G
WlC3WLKEkN9wedPi1A008VnhrNQwq509_oGOg9hTl08s09UrVuabD8@Q3YDWP640
0XDiTEn9C@zpPzoGm1WdBj1HVbSy_600_KfX@4YxjQi130nzoMuor17O1ukmqW3i
000J2yVu4w@tWGXV0002mKn68002uVO3w9r00W00G0010W0GyFi1v4RGin904028
gT3MFsWOZD8ZO3MFsWe3O30O3Nq16K@lPv7RGEnC45yOX38HK_B5Wi1000xSF00a
JC3Jy36i16W0aD8zVmAUs00W3G00WcqB000100f8u4UUbXiWD0000Kfm60200OMO
3w@@XFZD0800Ohn6qih4j6RG6n60W00010000007G200X2Znfr6G000AZuDcgcXO
Zz8ZO3mOB0KUw6H0RJ@@C0800ejS3M6_140205TpGdo6Kfh419p30uCgdeDWMd20
An6200WMAtIBLgMf9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBKUfM89
bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9AbaSql
4qAzBSAfK8TD6m700mIj8jQ10WWWP8o_n0E00aJC3H8p6MH0WC3BjvVIycz04RW7
LFtLG@Q9XX18iX7QjDptbR1Gw3GOlFKlfnnBB100mDn000z@RJR5YAPG18o1o10J
06vW7LoVo8ELKr@3hupJfBXOnO18mNXUzfYeb340cRUY6qs@V508ZfZMcgg94gOY
GYxD400m_M100ge@vCYP8Sv4gfCP0200O5000WFX6FlqO500IXbXO3mEiX@3uNKi
3D0HK8Hjj63000CRP3iYn0CHlqPIdG_oC4tRr17aSokCOzs08dO62exvCYDmKQ3G
BZf1310uCu4W3i0000W8Ku4w4AXGXPW008Gem6010GuVO3oOr0004002010W00_5
G22000YD_XdKD8sO3W3i0aJi1z@R60ULmSYP8xIm000ZmG008SW7gFdg8oJWs50G
Bv945yO00BGY2sWI_1BP06WDm0q@FO0W2e_TF10W3Gp2dG@@IW00W0001m306C@S
2rsd0000aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYD630480000080
0@oL008qp4IFmW8WBw1R3UREXWqP00G0G6n6iBy3jPB1100WWa5geV3WD400WBY6
00GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj_owMKsIj8jQfLQjiqIQL
QQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgCMQHfqAfSeV9MogIqIIf8
jQyrAbeqIQHwQGhKlm9S0700eiU00WsND300aBA00WSYPOxHpo8s0_K60DXJLg_X
SkVBXz7oQxCaii1mG10AIkkQ3_9k@DoZs0X@90FXUL9gBbAj77x@G6n6eCR1OgCi
1GNw4ly3DLIIUsGcLF3rrB1010G0407W700q1_0aiCj3Vl1020Wg_D00Y0HEnCqS
U5bd3sfN94tmF2000001i0C0008p1my_ZLmS2D6dp1xae0c18mNgQqlh_@be8g7I
Zs00qF2TbdMum@yfv604000G0000QNlQz4YxDXIs@fjTjk@dX_COe6462NM20SpL
9pFJB0MKRmO1mG200eL83003fQGEn6qbl1XBRGR_AE0DC000FmB00y6j1n6aGtyO
aE@35qdGvvirGn3JYiXW10WKiD002mQR_C4D1RLDiqjt6000u7700GcqCaoW41qN
HKFW5226LAHY000000mgtbdGEn64_VBbxZH6@KTikD0WpK2EmZ43295hn_Zd7167
01EyG7zvaO16ffKNUl6000wNz00Gjq64tx3He8nnaFaoX1rSmGmPB5n33TQaGVFO
CuQ2nUbmut900sW100a4X00WkNU8306w5XXA0K8WN3YLnWQ3Ywby42BuXuo8PiM3
WtX0CRk10001W3i0a0J20G00IB8XmvCuToJUmrWOqCep4C400007O100bOy@m9q@
l1W0080W10m0G48KO300W0CLi120W0_7sWDZD0080040G00804@3RW000efYDuBW
4YQt000G1LXQ040011GUs5fbG4o64wk1XmmG@DO4V7C18OW0080008000Ru000NX
S008kF6oLmWu1c9LA6QMWX6wI8@O3SPW04kw31KyGq1aSTl4nEOGZ6F0BG0005cJ
AXRaw13H7eodoC80020000YR00WyOD80vAAsWXG7Q9R09c_t0O3C00mNEwM9awIU
eEnPwom00W3G00WyX6000100100AmqZI00X0uXR300010030W400mim6a3f472OG
hn60G008ya700400802001mDF10004008000000u0I000021GBl6G2008KO6Ejs0
200GP4p0000aCYPOnT60G0W00002010Gin6y3W1n6dG6n6mMw1O9TC000241y3Z4
dG4m6aV930W008001iLQ5jbRG1xFW0G0eeR6wKsWCDbG002GGov00Fq@9Q3erf0W
IiX000ebojqIbgLQIJ@IPfraGBqJXqrwBh9H98bZqgbMfvYJ895ff5jJr2bNg5II
9zahbbiKhIYJIbIVhjaMlaIagLQMxhIPf5bIhqIZMdQ9hAHBfdYMApNhKYI997zB
1jI@2dIA5INZ1y100iKBIhM0088u4w@tfENOOuy40G0u0S000C41mG@KTCO5Cz00
o9cX8Kzevh72Jzj5uh8KbA0000GG418s092ITOLC30XDyGL894QR8XDKtibXixl1
gR702xzXgUdfmNmgSbXYsPOjSL007m300wbC00Gyogdo9IrA7La3IyFlA2W90100
_IL00eKQIAtvXsbR4DU2GWlOqXDaz@t2M0300OJWnOJR@@L0WYHFQPCIaNhoR730
i1A00uXGKi9e2E10soaJC3V2oGncr5jjJ0400mA000W@VjHVRg5XJi20000G_YeW
pAOj1h0000mghuXa6h00004bbmQ0k@V9mEq000zXDV_Dw7cjM_T2000Oso6myE0O
2BcRtd10mEq00WWbA00ahSW7zV5sW100idnNzdGrtOakF3Dm2JPsrfF018v06oC7
cI_LChs7AwtWWWDmJi0000G000G0jqdGHqK5dl1G64000010008W0400SW5000W4
0G20@7sWEXI0040020800402@3RGem6010GuVO3oOr0004002010W00_5G22000c
As0402001044021000000042021010G0m1M00GYv7NR5jx75020018@atZR00400
0WDS11@GSeH100SDN4340004EG2rdRGp_E1002SKT3SB50qAH2H1pGwoCqnT2P@B
40m24000hk70029kYAHM2XI3mw@90RW1e@VFACH80yk9@kd00m1ePXJe@V9G00G0
0W0u103w@FXfyJ0000IHy60400CdO3EAsWX@bupO304EG200uHq00miy900G0002
1000G08000W00025_XKaD8dO60000aJC3D2R00100G000n6pGy86G00EJG00Gj@6
aJi1ts@G4mvKdl1htbmqnC00808ZO3s5_XfzbeaP3k_@XWaVe@@42IsWS6Uel@4W
D4000EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj_owMKsIj8jQf
LQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgCMQHfqAfSeV9M
ogIqIIf8jQyrAbeqIQHwQGhKlm9S0700eiU0001800f_NKcyLKyV2000GDB00a7J
2H8JL4RO0100mKu1mjgUq7AUn6y3qV5WKA7Ei19SVN0quupP4R0wp0WmULlfI9sA
6O020WfIRW4R1Wub970C1Omq0dHi1WA80coEPOa40HBZHK3030CIQbKR2tlnEtD0
0QVNSlIqrEpO3K00G_Y7Glqf6m0M10WXzJEtM3YD0xm6_FYYRnEq0C9zp00WXX20
04S0uvIpGqN97Cj10WFLwcEXuUV8zSZn6C000mYEmTfJDW1u0B0z@d6SW500ygW@
3dG@@64AC3001000W0CLi120W0_7sWh@D0080040G00804@3RGEn6020WuBW4Ewt
00001n6d00INH0000h7RGq19qc5O00G000sm100CtQ00Gz@cbVi1im00kuFDO120
X3C600GBp300v4pGn_W1RW18T066z7C0W3G000A05000100vi@46gdXmVD0000Kf
m60200OMO3gjNY31CerO3s@NYMZD8ZO30G00W000000W3810WGXneLV38000bHy6
J0p0000aTWD0080GinIaHi1Oi50UVxX8W5A@V60400qMk1B3@0201WLwPeJP3InN
YWav10S6Lzz6GhJ10bO3100GBbRfbALhqac_boIh9XMed2fhrNMJYIGA7fLBjIp5
dGIAIJBQdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBAbMfb6jErIMLY
MIF5jKclMf4bIIEwN2Qb_5EbKAak63u300OfMaMj00GGmibHi1c2F0E_VZCib8dV
U0dc0aJC3bzESz@68XX18s0FMoMYS5YgLQgyyf04sGuXzQGEnL30EWFdO6YNcysb
VUwV300J02000rq00G8zsKvkYqPE02yLYgixjyM3m2O000UBEQP_@ElK0m6e000W
W6004txsXBdGDb93G000h0000y9quvb6h00GEnC4R0sXDyV0@YYTe18YYgpMcXSY
P8u0mZxLwSfDetha3Ns00S@Vv4pG8uI37O18Sv4YoUC0upVTMR020WW8aD8Ku4sc
rWfYJ8KO3o8sWfYD02010W00YCMD8ZO38002y5G20800YD_X_@D8sO340Em200Id
Y00G@@cbki1P1pmz@WbHC3X3OGzvN5Hk10Gx2Q9FXeW7B0P3Y2Ui0aP00O3S@@Wb
Hi1@kRGEn6CBi1pBB10800G00GF0Smes9KRV2000GAYt0W00Wv4RmHn6Cyl4j6R0
Wm1oSYDG000OemaSZi1v4lHinUG00CJG00Ged9aUW1H0Nqlu6ysS2J7p00W0WCYD
ONu7w8N2200019Z4iX000mPK000If5QfHhJ10bae5qJHBbRfb8H9aaZ_boIhTXJ8
b2fhrNMtYoMg5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhvhIb4daAbqIJBdU9b8Lhq
bYMbnIBAbM9b3zBnIMLYMIA5fLZlMf4bMIBIN3Qbw5EX3u000br300qeeP000miF
00aJC3Hib6400W8azeDKQJMs0zT40nv9D4000sVC0XzMTi1I7sh7bz_C010mKfDG
Yj0Gyoa30c0CGRWp8s0G5401_oVK3e20CIgvxa1Gwq7th4TqpCs05WSYP8SvgnA0
04IPoYyL0YDWv_@J8PP6YDWPfmA09qdGO3OZTe1Oizdp8cXW30FNQ3weFvuUD00y
fIZl94tRrO360YxDXszPEr06W3i04XCR0uL1@7EX_@D8Ku700W0CLi120W0_7sWU
ID0080040G00804@3RGEn64RS201W0Qns00001n6dG6n6iUi1H7m60m6kSYP8S0p
o9cXeW7BS09Q9VfOmD000Odx10WSYPecVmWDm04Wi15h3Mzv600S0200qaU10080
0851d000GW_@J8BO30000LAi1W000c5sW_@VupO30200sQi1DxAHhn6aHi10800G
000000m1a00GemUG000AZuD6SdXOZz8ZO3mOB0y__3H0BK@@C0800ejS3M6_1402
0XvpGdo6CUy319@30uCgPtDWMd20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhlic4
bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbMKA
jIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8TD6m700mIj8jQ10WWWPBZO322c
jCYP0h80mCn9dsB3n6WTO3O7sh1v4ND0u0_SYP8UPoRN_vf@D00C18000KJ300Lk
3S6nC4uR2LPtRn@6W5m000yMSqo@7tRf9IpGSlL7kS2rKcC0100i2000mdGZdNQi
2009_oGi1O7sm@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIEcU30mz@bJC3XWBDS
W5WmbJ8Axn0WF@r_l18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrWCYDW
008mN090W008su7w@tWOZDG0u0B008TA200z@RM6nCaJi1t@3M6nC4EW1rdVL4v6
00jBeby4Y2Ui0aD8AO3Ivlha1O00O3S@@W100e0K00mlx6aJi1p2RmyoI0020040
0q307C@S2rsd0000aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYDs320
0ZP4dGEn641CIFORmRp9CTC30020o8sWTXVeDR980004aCIm62000dH1008bMeb6
jE50KIYMGF5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_is
IjIIAfdSfjclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbIKQ
9j8TDeLgNu4EW300KMF00GVsc100Kqb00GEnC4nMQG000C5U0q7Ap0400IMs0S_E
0nv9D400WqbP8eoan2004RWq00WUKF00aS03nD8To1C4tGr0WHc2RNNcP00b@d0c
P6Wvv160k7Ke1G7q0s000gX300q@@d0mZX2B0sW5_F4Y@3iu@WGs300G7S10Wn_T
Dj0385Q0CqVif5a0G000OY200000080WG04Ge@@7001G80W0e@V300G10220e@@7
W022Kue152OmxXF0004pm00GX0600086w00Gv@_100us000G@@6000m4g00GP@N1
WM8CQ0qw@F10WDQly3600OGk300X30NmM@76s@1eX700W3m300rrZDEW700qbEnd
@G3w37Wk100W4Zxr00200HEuDc0400qbE1z3C000gu1J000m2m00WF_DEp03WHI0
CmVoP6mGK3CZDG18g1cx@F1vBE097mGOpIdSG25RpSi16mxk18iXg9AB0qDanXep
00000D680Ze@C00WTG300XDOG6ML30sX600CCK00WW3yEwBf10000G00400m6O00
0yf20Zz@C000CH300vzd0O00Ww_V60u0Ro1C4tFO00WN98000000004002007m20
0002001W00G0010W0Gd49W0080010W0G0080W00G000080040G008040020G004z
@R0W008080040G0_28100040020G004y5W17gQ00010W0G0080S0B008T518wWtw
@t0O370z@360imWm1Wh@@400MWaMON0000J6m0sTF0p_360qQ__@J00O3S8ZW100
QIl00000000280000S040000040080G666q_F30W000100z0m1VHcGRa90000f@N
30200U8W1L2OG@@I800800G00Wm1I000FY600cQC100200080000001000400000
G00001VKo0000eM7D00G0mM76W00002000008000W0v1O00100G000000Go3m00W
00pMQ010Wn88D8qJ30500S5v3b78H5160810e@V60040KVy3VPQmT164F93H5O00
0WWB5UuaW4w@d12000l1aG@@9iSW1G000YNEX_@D00G8GE3ICuP2m62000dH100A
bMfb6jE50KIYMGF5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADje
Tg_isIjIIAfdSfjclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_
QbIKQ9j8TjeLwNu4EW300CWF00Gf@c100c2U00GUC90S008OkqW000aF03nvbC40
00sVC0n6WTOlL7sWqv@dGYjC4lCvJo8Hyo630GdEdO62yruSYD8OKZnRn0qaT2HB
@Vqoe6tRrO3K00G_Y3002e1Mc1000mdG185M6cdFv4OP8s0i3Ru@8AY5xG3mOxFd
HC3170UW3X7tR2rqdSuo60Wx@BSPiJft0u0B0nnd6SW500upV@3dmu@64Ay300G0
cAs010G0@3RGFf6004002080040Y@XD8dO3YDE1W0G05xRmwn64Ri1P4Rmwn64TW
PP4dGEnC4EWPim002cQi8oD0MW000qkWeWPB0P3gv7CO3C0v4pG@@W10S0200G1e
000800851d000GW_@J8BO30000LAi1W000c5sW_@VupO30200sQi1DxAHhn6aHi1
0800G000000m1a00GemUG000AZuDc0cXOZz8ZO3o9cX8WHg@V60400qMk1B3@020
1WsiPeJP36F_XWa@10S6rDt6GhJ10bO3100GBbRfb8LBqac_boIh9XMed2fhrNMJ
YIGA7fLBjIp5dGIAIJBQdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBA
bMfb6jErIMLYMIF5jKclMf4bIIEwN2Qbw5EbKAak6br300OfMaMD00GGm9K@nOP4
R05l4W8ah3h80GmG9Zpt1O5y4YDmWqbDEPP6YD0xmU9lYV62xbP9s20RydGyoR30
c0CUP9QTdsCYD8du42yz@0VBDQPc10RW6jCpz@d00oNymbz6h00Go16qHPofpR0M
1000uTtXDKTwo9KaDpO5000GZ16QkqO7Q0IocXW3gEdO62E0xelUEeq4m6C000_K
9kNi3NcXKmPEZO3IEWX_@1BfN3E3s0u0B0000825EXkRJ8KO680024Ai1G004_7s
WCMD00010W0G0080WV1aW000WOZVu9L3YDs0u0B0v4RGq1lbJi1p@3M6n64E0SH1
pG3vT5Wi10mkx3GcjSYDeOTmqKl000000002OEn6CBS2z@@000WWIXDu103EVtWw
tPupO3U0m00800G000U0uWZ@VerO300Gu0I000FH3GemdSZS2v4Z1100eOZz8ZO6
m1K041CI3udmYn9iwS27BR0201WTXV8CV90W004aCI00R8o9sWEXD00KI2jGF5QL
kbia4bWKEwhKBjcBEXaKakM_QTBKUfM8TjqIwMMoIjADQfTAzjsIQLIAHlSfPjlA
baSIAfIBDQTwbeaKjaUAQfCBjGfQbaSql4MQL9qAfK8TD_ogIKgF03yYJu0S00W1
_0GGmr5Xi1Pzt50W0aCYJ00SaN4iIZL408nN6YD0xzmhuN_n2xbA0yTiX4ZTYjC4
lCvxu8Hyo63000rq00GEnC4uxmv4RGme630UBEa_4YM_@ebHDktg10RWcJi120W0
IxDP00000mdGJXbXuvJE1M6YD0xm6_FYYO10xG7skqP4pGm1W7uWtnzcGDz97ki1
00Wxz7004kCs200022sWuuD30u0B00m7@100@3Rmyf64Ay3LNRGem680W00G0800
40WfIDOgO3_7s04000J5RGin9ahK2n6d0408TA200h7RGq1fbHS2v4pGu0Z10BC8
OgnY8t00W58000jL00045CR18RGE@T10i1EdO6Y1VC0100e0A00020CBi1JvcGWd
9a2S2b2Rmim6q@l4V6R0050WA1OeqN6Q7s0y4D0v4R00000u090P4RGemRaHy6d1
RGindW3e08dO6Y06fhJVuKP3M6_10G08jP@0400WZ5O88PXo8s004000GhJ10bO3
200WMbR9B9LBebc_ArIhHYMeB5fhblMJ2bGA7INBjas5dWKAIZMQdIBAlaMaaIqB
NBMQfM99daIg_MpIjU9A9LBfjsNArIBgDs0MQL9qAzKeLP_ogIKIIvelIeLAluKI
IHwQeSF00WbQXqr0GGm9qgvO0400W3u0005lC2vw00h8q7Qo0WptFvEXO3IeTvXJ
McXO3m60inIGsIZDM000zKVytIdQ03nD8D00WHC100nDCC0OcP00WPC000gdtuG3
CWx11Ge1G7U2p1DmSu9d7L3v000cXF00q@FmMQ70M@F1qYD0X@ZA0oGlu24ILL1G
@@pGLL18RWS000cgT008SX70WggcAGBn5O00ggg03Q9k03o6m60000OX60YY8vm5
K99262N0cS7O8D2O000F0H008e23YvWXy9u9w2pCHF0qaH2XY8KH7f10GGBk09Yv
0ce8IeAYPegggsDmC000L5B004uY4HHWQ@@6W2i0ek@CH1M00WAxPW@Cp9WX85u4
0OZPa26akZ100W@zF00q@l1P0a00_@@M0O8R73g2mW408e709KLL0q30600RC100
MOK0089dP23QcW3C0nm3GBF9KS03j1b00_@@_WC8013o4wXK4Ieu79IGmW2YO0ZO
000IHaO476600W_i6W83GkKVW10H87o0X00WRiE00aI03n8GOA1C4Z0Xu0H06kLw
x@D00OZ600OVd300ncoc1T7WOJ@Fgr@@IFD0007W700YDLw_@J00TfJs1CqUl1Xm
FST@C0G00Co13aOB04v0v0W907z7O000B03000LG0CvVom890oDWX9@J6BW1Gk1C
4r0p0WDG3yNQi1A008VnZxNwK3O0h00G@@6KPZk0000x@t0UtD0n68nh@3JKM0ee
X4YDWPD680zDaGO3It@l1O7Q0c_@P00mmG1002E0y07O8whapko00mdAjfa00O3c
m5b6Rm0000Bw89bEr06W3i0CMVQm1M00mh2k3d18002w@t0G0040W00G080040G0
08000040020800404001080020200100000000010W002001WuB03000010W0040
0nN09Ked1000200108002020W00INH0000010GYEuD0WDSH7OGu0in230OAyqW58
04EW456kK4J6000ipz00Gw0CKXEOm6O00WMpdOrOLJP00m1800GJw500W00WSFb1
00000002q@V20080U0m000G00W000100y0W1n@@000GW31Cu103c8K2001002000
00y8Q00001002000000EW40026m00200W000000W0008OQ33seq0200GbOP00W0W
4DC01000400000G0B5amwX600009h030020yJW14000_zm000G0000E0500WnM0u
Ph7w@dXX1C0200Gv16q@V20021U@@10G007ZL1W00WQ4C8Yn7G080ah9356Omg0F
CMf1B7OG@@F00400009Gd2FaRG2z@R00uCgtpCWMd20An6200WMAtIBLgMf9DzBb
bMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA9E9LAzjsIQz
IAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8TD6m700mIj8
jQ100000E07002S9DW300c2F06@Fji1O0h80mep9p_Z18s0i3R8ymUD8Nyg107md
JC3nBJUxoFNli10W90100WQQ00e0VWp8cX0VJeAxUB6r0i0600WtYZM_@uUBDQPc
ZxjYmbJecoa1800WL0000_4QyyIZL0085M6YD0xm6_FWVHnEq04HHrPBpGEnC4S0
unzATkq6qxLonqR00k@lSYP84SfX3i04kS2HPF60yvls@D010GG4o64AS2RpQmKn
94Ai1P4RmKn601W00G00H6h6aHi14001_2810400n6@G@@64Ri1207O100fJH00e
@Vpo8cXSYDu_Vmo8cXm1Ce_yhY8t00eT1jadGKmZ5Wi1H1RGA@TbC0300RWx@7C0
005W200_TtWSYDOMO3cNM20G00W00WU0uWvdJes_4000WK4l10100p9sWZYDOuV9
QDs00X3av4RGemdSZi1v4lHinUG00OCZu4o9sW8WHw1R3UREXfZP00G0G6n6iBy3
jPB1100WWaH2sG000uCA000fq2jqerf0WIIq2wfebojqIae4IoH@IPfrkm9aIXqr
wBhRHPBrYqgbMfroIBfLff5jJrdrMgLII9zaBjryLfIYJIbIQffbJlaIagLwIHho
Of5bIhaoX_bO9hAHB9bYqgnNhKYIBf5fh1jIz2dm1S00Wow100wpsC00WYk400o9
cX8sI3200Wfm3W_GP6W00Goo6Wpt18EFfX000akC3XzoSi1I7sh7bz_C010mKfDG
Yj0Gyoa30c0CoTWp8sWSYP8mt@ZQWp0VPEQP6YxDXEwP6RW2GEnC4kSrO500YC7u
GAJWtT3Gi1IKg@m9BRGry64R0pQCG0IeFXm6aEdu46R@vCYP8u0mpbsWEwJEkN30
0VgquR2nzMDsW1WuUJeTVcJDW1u0B0H8p60ULm@XJe@V325_10080J5RW008W@XD
edK3002001040020n@m6aJi1n6d0G08WMiD000GGin9aHi1h7RGq1i10iXBdO627
miSYP8Aun27GYMoNA6S3000svU008dO6gv7CO3C018RGrhc10S0200qaU1008008
51d000GW_@J8BO30000LAi1W000c5sW_@VupO30200sQi1DxAHhn6aHi10800G00
0000m1a00GemUG000AZuD6SdXOZz8ZO3o9cX8WHg@V60400qMk1B3@0201WmyPeJ
P36F_XWa@10S6rix6GhJ10bO3100GBbRfbALhqac_boIh9XMed2fhrNMJYIGA7fL
BjIp5dGIAIJBQdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBAbMfb6jE
rIMLYMIF5jKclMf4bIIEwN2Qb_5EbKAak63u300OfMaMj00GGmibHi1c2F06wFji
1O0h80GBn9dsB3n6WTO3O7sh1v4ND0u0_SYP8UPoRN_vf@D00C18000KJ300Fk3S
6nC4uR2zqtRn@6W5m000yMSqo@7tRfHBpSSlL4kS2rKcC0100i2000mdGZdNQi20
0fmoGi1O7sm@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIEcU30mz@bJC3XWBDSW5
WmbJ8Axn0WF@r_l18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrWCYDW00
8mN090W008su7w@tWOZDG0u0B008TA200z@RM6nCaJi1t@3M6nC4EW1rdVL4v600
jBeby4Y2Ui0aD8AO3Ivlha1O00O3S@@W100e0K00mlx6aJi1p2RmyoI00200400q
307C@S2rsd0000aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYDs3200Z
P4dGEn641CIFORmRp9CTC30020o8sWTXVeDR980004aCIm62000dH1008bMeb6jE
50KIYMGF5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_isIj
IIAfdSfjclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbIKQ9j
8TDeLgNu4EW300KMF00GVsc100Kqb00GEnC4nMQG000C5U0q7Ap0400IMs0S_E0n
v9D400WqbPeIQZ100CY9008sWX10ZC100CBDe4YC0vG6_@hz0100CZP008MYX3DW
10uUGX60T8BC7qWDjEzG@@1Y1y000WWRW@wwnz18p06IMOo86KnRa1GN4Vs@F600
Wkv300aL43LO4R@@60WFpEo0OottoabO8o0a3Pu@O9_F8Z@Z_GT0m6BX_BDsO100
qJzz@V20qSaU0ye@VC000IOC00e@VLw2O30SwCz@lHF09mhr18k160mdxbsQ2008
0w0mW@hmmdxzTG09iTA3000W0mlpvtv0uBhDy@S0ifL2T0OG@@OuzRUtD00GF0U4
tW7_7S0w@730K0MdGRmrNLSuw300W2W1004606Q520g48XG4aGhG0G@@d000GAhM
9w1u1000HO5002tuaEAofd2Owe8dyAamCin200uEm200r_@SY8C4bo@nDyVmDkco
7jnsP0r00WOY_FAbmJvCjjtbOw@Sy@@@xV_PF203I0WW80G8408220a010AW003G
u@@7_l@Y@t@u@yJ_@_b@hlv@vV_F_e@VVw@sh_Vzh@JFx@pt_lyk@7@x@m3@@xn@
xky@jF@Fxq@lUz@gR@Vwt@ZE_@dd@lvw@N__@ap@@uz@Bk@@X@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@z60;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V414 = 0;
INTEGER V415 = 0;
INTEGER V416 = 0;
INTEGER V417 = 0;
INTEGER V418 = 0;
INTEGER V419 = 0;
BOOLEAN V209 = 0;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
BOOLEAN V422 = 0;
BOOLEAN V423 = 0;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN V204 = 0;
BOOLEAN V146 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
ENDDATA;
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
PROCEDURE DO_FORCE_SRAM_DOWNLOAD USES TEMP_DATA;
V344 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_ICB USES TEMP_DATA;
V422 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM1 USES TEMP_DATA;
V423 = 1;
ENDPROC;
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L248,
L1188, L1198, L1161, L1164, L1167, L1172, L1177, L1150, L1155, L1152, L1175, L1176, L1189, L1220,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
IF (V42 == 0) THEN CALL L1188;
IF (V42 != 0 || V2 == 0) THEN GOTO L1149;
V91 = 1;
CALL L1220;
IF (V42 != 0) THEN GOTO L1149;
IF ((V422 || V214 || V423 || V210) && (V102 || V103)) THEN CALL L1198;
IF (V214 && V423 && V210) THEN PRINT "Warning: No active flag for MAX 10 devices";
IF (V214 && V423 && V210) THEN GOTO L1149;
IF ((V42 == 0) && V102) THEN CALL L1161;
IF ((V42 == 0) && V100) THEN CALL L248;
V419 = 0;
IF ((V42 == 0) && V103) THEN CALL L1167;
V419 = 4;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V214) THEN CALL L1150;
V419 = 5;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V423) THEN CALL L1150;
V419 = 6;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V210) THEN CALL L1150;
V419 = -1;
IF ((V42 == 0) && V103) THEN CALL L1167;
IF ((V42 == 0) && V103 && !V422 && !V214 && !V423 && !V210) THEN CALL L1177;
V91 = 0;
CALL L1188;
L1149:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
FOR i = 0 TO V1;
IF (A171[i] != 0) THEN V4 = 131072;
NEXT i;
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
IF (V228 || V204) THEN GOTO L1178;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V199 = V199 + A59[i] - 1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V203 = 1;
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L1178;
BOOLEAN V420[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V420[(V199 - 1)..0], CAPTURE V420[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN GOTO L1186;
GOTO L1180;
L1186:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1185;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1182;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1183;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1184;
L1185:
IF (V420[V201 + 1]) THEN V420[V201 + 2] = V420[V201];
V420[V201 + 1] = 0;
V420[V201] = 0;
GOTO L1181;
L1184:
V420[V201] = 0;
V420[V201 + 1] = 1;
V420[V201 + 2] = 0;
GOTO L1181;
L1183:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 0;
GOTO L1181;
L1182:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 1;
GOTO L1181;
L1181:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L1179;
L1180:
V420[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L1179:
NEXT i;
DRSCAN V199, V420[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L1178:
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
IF (V228 == 0) THEN WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
IF (V228 == 1) THEN WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L1175, L1176
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
CALL L1175;
IF (V42 == 0 && V228 && V344) THEN CALL L1176;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L1220 USES DEVICE_DATA, TEMP_DATA, L1223;
FOR i = 0 to V1;
IF ((A17[i] & 131072) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 131072) == 0 ||
(A17[j] & 4) == 0) THEN GOTO L1221;
A17[j] = A17[j] & ~8;
CALL L1223;
A17[j] = A17[j] | 8;
L1221:
IF (V42 != 0) THEN j = V1;
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1188 USES DEVICE_DATA, TEMP_DATA, L107, L101;
CALL L107;
V4 = 131072;
V3 = 0;
CALL L101;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
IF ((A17[i] & 131072) != 0 && A171[i] == 0) THEN A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
PROCEDURE L1189 USES DEVICE_DATA, TEMP_DATA, L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k] = 1;
IF (A171[V414] != 0) THEN A57[k] = 1;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN A57[k] = 0;
k = k + 1;
NEXT V414;
A18[9..0] = $307;
CALL L458;
STATE IDLE;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
IF (V40 == 0) THEN V42 = 10;
ENDPROC;
PROCEDURE L1198 USES DEVICE_DATA, TEMP_DATA, L458, L1188, L1152;
k = 0;
FOR V415 = 1 TO 5;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 && A169[V416 + 2] == 2 && A169[V416 + 1] > 0) THEN k = k + 1;
NEXT V414;
NEXT V415;
IF (k == 0) THEN PRINT "Warning: ignore CFM1 flag";
IF (k == 0 && V214 && V210) THEN V423 = 1;
IF (k == 0 && V214 && V210) THEN GOTO L1169;
IF (k != 0 && V214 && V423 && V210) THEN GOTO L1169;
IF (k == 0) THEN V423 = 0;
IF (!V422 && !V214 && !V423 && !V210) THEN GOTO L1169;
IF (V424 == 0) THEN PRINT "Warning: Bad POF detected. Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V424 == 0) THEN V422 = 0;
IF (V424 == 0) THEN V214 = 0;
IF (V424 == 0) THEN V423 = 0;
IF (V424 == 0) THEN V210 = 0;
IF (V424 == 0) THEN GOTO L1169;
PRINT "Check Max 10 FPGA backup data ...";
CALL L1188;
V415 = 6;
V418 = 2;
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1200;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1199;
L1200:
A57[k] = 0;
k = k + 1;
L1199:
NEXT V414;
FOR i = 0 TO (128 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1201;
V416 = (V414 * 21) + 20;
j = A170[V414] + A169[V416] + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1202;
L1201:
k = k + 1;
L1202:
NEXT V414;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 1 CYCLES, IDLE;
IF (V40 == 0) THEN PRINT "Warning: Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V40 == 0) THEN V422 = 0;
IF (V40 == 0) THEN V214 = 0;
IF (V40 == 0) THEN V423 = 0;
IF (V40 == 0) THEN V210 = 0;
IF (V40 == 0) THEN i = 128;
NEXT i;
L1169:
ENDPROC;
PROCEDURE L1161 USES DEVICE_DATA, TEMP_DATA, L458, L1150, L1188, L1189;
CALL L1188;
IF (V422 == 0 && V214 == 0 && V423 == 0 && V210 == 0) THEN GOTO L1163;
V419 = 10;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 11;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 12;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1162;
L1163:
PRINT "full-chip erasing Max 10 FPGA device(s) ...";
A18[9..0] = $203;
CALL L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN k = k + 1;
IF (A171[V414] != 0 && (A17[V414] & 8) == 0) THEN k = k + 23;
NEXT V414;
DRSCAN k, A29[k-1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
CALL L1189;
IF (V42 != 0 && V228) THEN print "Warning: Real-time ISP background programming is enabled. Ensure Max 10 device(s) is in usermode if you enable this feature";
L1162:
ENDPROC;
PROCEDURE L1164 USES DEVICE_DATA, TEMP_DATA, L458, L850;
IF (V419 == 10) THEN PRINT "erasing Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 11) THEN PRINT "erasing Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 12) THEN PRINT "erasing Max 10 FPGA UFM block at sector ", V415, " ...";
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1166;
i = V415;
CALL L850;
FOR i = 2 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
A31[k+22..k+3] = $FFFFE;
k = k + 20;
GOTO L1165;
L1166:
A31[k] = 0;
k = k + 1;
L1165:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, 350000 USEC, IDLE;
ENDPROC;
PROCEDURE L1167 USES DEVICE_DATA, TEMP_DATA, L1172, L1150, L1188, L1189, L1161;
CALL L1188;
IF (V419 == -1) THEN GOTO L1171;
V419 = 7;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 8;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 9;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1168;
L1171:
IF (V422 || V214 || V423 || V210) THEN GOTO L1168;
PRINT "programming Max 10 FPGA DSM block ...";
V415 = 0;
V418 = 0;
CALL L1172;
CALL L1189;
IF (V42 == 0) THEN GOTO L1168;
CALL L1161;
V42 = 10;
L1168:
ENDPROC;
PROCEDURE L1177 USES DEVICE_DATA, TEMP_DATA, L458, L1152, L1188, L1189, L1161;
CALL L1188;
V415 = 6;
V418 = 0;
L1195:
CALL L1152;
A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k+31..k] = $6C48A50F; 
IF (A171[V414] != 0) THEN k = k + 32;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN k = k + 1;
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
CALL L1189;
IF (V42 != 0 || V418 == 1) THEN GOTO L1196;
V418 = V418 + 1;
GOTO L1195;
L1196:
IF V42 == 0 THEN GOTO L1228;
CALL L1161;
V42 = 10;
L1228:
ENDPROC;
PROCEDURE L1150 USES DEVICE_DATA, TEMP_DATA, L1188, L1164, L1172, L1155;
FOR V415 = 1 TO 5;
CALL L1188;
V417 = 0;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
i = 0;
IF (V419 == 1 || V419 == 4 || V419 == 7 || V419 == 10) THEN i = 1;
IF (V419 == 2 || V419 == 5 || V419 == 8 || V419 == 11) THEN i = 2;
IF (V419 == 3 || V419 == 6 || V419 == 9 || V419 == 12) THEN i = 3;
IF (A171[V414] != 0 &&
A169[V416 + 2] == i &&
A169[V416 + 1] > 0) THEN i = 4;
IF (i != 4 && A171[V414] != 0) THEN A17[V414] = A17[V414] | 8;
IF (i == 4 && A169[V416 + 1] > V417) THEN V417 = A169[V416 + 1];
NEXT V414;
IF (V417 == 0) THEN GOTO L1151;
FOR V418 = 0 TO (V417 - 16384) STEP 16384;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 &&
(A17[V414] & 8) == 0 &&
V418 >= A169[V416 + 1]) THEN A17[V414] = A17[V414] | 8;
NEXT V414;
IF (V419 == 1 || V419 == 2 || V419 == 3 ||
V419 == 4 || V419 == 5 || V419 == 6) THEN CALL L1155;
IF (V419 == 7 || V419 == 8 || V419 == 9) THEN CALL L1172;
IF (V419 == 10 || V419 == 11 || V419 == 12) THEN CALL L1164;
IF (V42 != 0 || V419 == 10 || V419 == 11 || V419 == 12) THEN V418 = V417;
NEXT V418;
L1151:
IF (V42 != 0) THEN V415 = 5;
NEXT V415;
ENDPROC;
PROCEDURE L1152 USES DEVICE_DATA, TEMP_DATA, L458, L850;
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1154;
V416 = (V414 * 21) + (V415 * 3);
IF (V415 == 6 && V418 == 1) THEN i = A169[V416] + A169[V416 + 1];
IF (V415 == 6 && V418 == 2) THEN i = A169[V416 + 2];
IF (V415 == 6 && V418 != 0) THEN GOTO L1194;
i = A169[V416] + V418;
L1194:
i = i >> 5;
CALL L850;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
GOTO L1153;
L1154:
A31[k] = 0;
k = k + 1;
L1153:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
ENDPROC;
PROCEDURE L1172 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 7 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 8 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 9 && V418 == 0) THEN PRINT "programming Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $2F4;
IF (V415 == 0) THEN A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
FOR i = 0 TO (16384 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1173;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1174;
L1173:
A31[k] = 0;
k = k + 1;
L1174:
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
NEXT i;
ENDPROC;
PROCEDURE L1155 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 1 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 2 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 3 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA UFM block at sector ", V415, " ...";
IF (V419 == 4 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 5 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 6 && V418 == 0) THEN PRINT "verifying Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1157;
A31[k+31..k] = $FFFFFFFF;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1156;
L1157:
A31[k] = 0;
A57[k] = 0;
k = k + 1;
L1156:
NEXT V414;
FOR i = 0 TO (16384 - 32) STEP 32;
IF V74 == 1 THEN GOTO L1158;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1159;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1160;
L1159:
k = k + 1;
L1160:
NEXT V414;
L1158:
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 3 CYCLES, IDLE;
IF (V40 == 0 && (V419 == 1 || V419 == 2 || V419 == 3)) THEN V42 = 9;
IF (V40 == 0 && (V419 == 4 || V419 == 5 || V419 == 6)) THEN V42 = 11;
IF (V42 != 0) THEN i = 16384;
NEXT i;
ENDPROC;
PROCEDURE L1175 USES TEMP_DATA, L1188, L458;
CALL L1188;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT IDLE, 1 CYCLES, 100000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L1176 USES TEMP_DATA, L458;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
, L1150
;
V74 = 1;
V419 = 1;
IF ((V4 == 131072) && !V214 && V42 == 0) THEN CALL L1150;
V419 = 2;
IF ((V4 == 131072) && !V423 && V42 == 0) THEN CALL L1150;
V419 = 3;
IF ((V4 == 131072) && !V210 && V42 == 0) THEN CALL L1150;
IF (V103) THEN V74 = 0;
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF (V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
IF (V4 == 131072) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC 510C;
