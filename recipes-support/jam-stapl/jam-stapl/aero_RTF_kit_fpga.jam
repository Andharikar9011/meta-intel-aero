'Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
'Your use of Altera Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Altera Program License 
'Subscription Agreement, the Altera Quartus Prime License Agreement,
'the Altera MegaCore Function License Agreement, or other 
'applicable license agreement, including, without limitation, 
'that your use is for the sole purpose of programming logic 
'devices manufactured by Altera and sold by Altera or its 
'authorized distributors.  Please refer to the applicable 
'agreement for further details.

'Device #1: 10M08SA - aerofc_fpga.pof Mon Oct 24 11:44:36 2016


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 16.0";
NOTE "DATE" "2016/10/24";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "aerofc_fpga.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "USERCODE" "00089072";
NOTE "CHECKSUM" "026615AD";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "67";
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
DO_INIT_CONFIGURATION OPTIONAL,
L27;
ACTION BLANKCHECK = L17,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION VERIFY = L18,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
L27;
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 131076;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A173[1] = $
0;
INTEGER A169[21] = 
950272, 64, 288, 1, 1146880, 1425408, 1, 475136, 950272, 3, 671744, 278528, 3, 131072, 147456, 3, 131072, 16384, 0, 16384, 0;
INTEGER A170[1] = 
0;
INTEGER A171[1] = 
2572288;
BOOLEAN V424 = 1;
BOOLEAN A172[2572288] = @
0WE10u@@@@3q6aDm@0yl@@@VFKAIOx@@xb8S2Eu_@3kHES47EX3kW3y0@@@w@zz@
tB@Flz@xw@hx@Vku@nD@@jw@jT@Vjy@fj@@i_@bz@Vim@3Ry@lA@lhp@tAz@iM@@
gs@hwz@fY@Fgv@Vg_@ck@Vfy@JQ@@Zw@le@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@NQ@@FK_@e@rq@9HuX_dGR8E6m4W_@bp@XR5hioA@@@
@M@@@z@u@71W1E@@@z@Q@72W1Ux@@z@v@d2W1Ex@@z@f@t@l1_v@@z@F@x@@F930
3y@a@x@@tm@@@lh_@V@Fn@90GGA06Oc@@t@3yVC06um@@t@Nyl@@V4@@@@Eu@@z@
8@x@@tn@@@lF_@V@lr@12OWb_@V@FMks700o1mW_@Pm@@30000W4088204210YW0
09G0W28eB000190GGo1600280100020W00G00d0a00o3kj2Qyi03gAm04G01zCy0
28004G018W00w1mWY0CeA03k2uXV0I8A060004KAm333a00sUuA8mOD03s8mWu1O
8M062Ae804008W00G0100002G040GD56W02Auw03K014WW2801000000arACGfb2
GC198K288cWDKQf0eqIBLfb2000eKbMQfN0OG606eK00u036KArN200ADC03I28X
d0IOI03cb8104A0HCaG83C4KG220002sm00GA05Li10AjK04Qe2DqG10008qG3z2
03o0m0XMA05TaW20000KAe05KG1AeW20G1j2032ym0W2A0T3420004000G0000qU
h0200G02804W020bY42G21aW0I8000G028W0aG0WHGC00oJ60000ioA0zPO0008L
fYAgG5W000ge2LKJ5gecQA068rKRDe06000j2LKH5geYAK10r90C0g00000000WA
g0ebM0000000G000200A100W82m0HCX8280H4H4Y8W04G000000W10000000W@@7
W000Bim2000008TBOX5Mm2BiW500G5064MI2I4000m@@30xiZTsP70000sPdTN0O
G606mk@1esa4a0000W@jdzsRFxjtU0OlzL0OGy96mUx1m@@3800000O100000a60
04EW1D0O0Bim2MKMEn4amLA6000_t@1000ysRU300000GujtUpRlzctU300ysx80
CORX4000_pV0_stUxDl1800ujtysxlvjtV300000V@jl@s@vLI00W4000m@81CWt
0uTe09000000UxD0ytV0000000l000000G100Uv5lyoh50Ae203YJm00008000lv
D0000hiYL040000HMPrLioghSrL00WhkoLNP5h00WgNC00f0200uRV3WrisQhPD0
041W1N0O00isQMRztPHa00G0000mtk__xT@rNxQ0qrc00Whl_UNV@zk_Q0MZ91tV
F0__R0000000h00000W4110MPbL70CG306mAhiYL00Gi39upF1000e1Dq00W100A
K3Ded6QGFzq300e7zqJFQe10JqO000801100yqJ0yxlUoJF1G80u9FzqJ@wfd_50
0000@wtV@rd0000000000G00W00200uJFzctUx9Fz40UxjdyqJFvjd04dW1y60Fl
0m0Q008000I560wG3DqXEwe1DqH7weZ6qG3DYJ8100mt_6000W6QG300000KCDqG
3QeX6qG300W6Q45W15vO0021000m@_7WGiD00mR0000Uxz0464s03ysRl7UmWaIC
G00000_sR_xl@ysRl1W@_pRlzct_xTuE6mV@18E132Am0530015WHp56000cm4J0
00000iFn4cOY9Cn4J000c82036ynWk6CmtV3GN36040ksrNVjxl_Qt30000WxT@z
tFzJ2000K0000u@hlsrNVjhl6W80C8r13000NxQ0_iO13C100000O4O0Cnu06y0m
1X3a00melwWCe@@VyF00000Gbp00G4HO000YueeM0wO0SQK2n2uHzHFKVI2b8L10
_2vO1i9O9F000S1R008i0I000G4MGBGsJ02BmlO1mAiWC100e0G0000000202000
00001GEMY12W00bBzGzMC0010uhA30aut1000W0W0GC69a3G2N1y00X6WePI0000
08020000W040G00W0awb100G0Qj8102fLJVbGu6900Ae2G00000GHg0200000G0L
G1G00002e2K04G000WeaAW0000005KfR93G5K00000400WA0100020097O004G5v
9500000KHL04vH2F8inp6I4VW19Tbm3290WvR@1X42tuA000oS4002Gx78SjtX2i
40000SR50X20LG1ZjJo3hof20syu05QFC2600owrldGY_K0kh9XG1WPz69000Av4
008eWSMqH20aq1vwa00WIrk1310Gh600uCo300RzS20WMD00WgjRbGdXX00KS200
a0t00Wu3HYtu1Gk0Cyf8I005do5WXe2S2wo3mkGUi2vCKf1026OZc95YDX10000m
XTC0wo3mO12DVv3KdF0kmC1e880lOY40GLC00Glg700YsqfO1CW8O0Gi0Oz2QKGJ
K02BWA00_Z93mGdfH10K58P06wILeNcC8M03yzX04M0L0WxT_A8A0Wg000WnjB00
43HKa6002BOfFRJ0yt3Go0C4N0L93mmZk810cNEwa400QoqpRK00DP000Gx0008_
NdI5W1000ia500Y5_40iw@n1810142G00G0204W000aMh1000180000000180000
002G000EO3000008W008SWS000mGE0080vJ00Co100oLd00GOoda50300QHQME40
S@gvWaGO0a00wlekv400q2tuS80uiQk79100ZGXHQGgW6iai100W000002010ONN
30400CEe1WHI000dPVGu3G400000000W8uLM3whp000102000qFE0SAT2WGA0000
80800000810000a0003qQ00a0000Z40000fF0000uydZG000000uxl1G4E@v8Gyx
tX80__R0myx3X84@_T0uyt3G8C@_G0YX7000E@@80000000CYtMjAWHS00GsjrSj
AP1m0qK0WViZ2QA000mUdsjZAL06YBmfG1D00eBF00OxmQYAbA6000AeB008O0m2
F@A0WYW16uKQKC0Ln0ufTaIZYXO1mAiWh2UYgOgC8u9dArt0SFB0Xbb0K50WdzHA
t96Y50hm2WDu9d2Kr00Wcq00Wvj4004JLia100YfYgqeO8cAg0hi04JrCPJPWL@7
WqeC0000Gby6q@l1008WIZo00G01W020IaoWqeI8HA3gS66m870fLnG4Kj4E5997
QGQK6emG18WBL8200a253HR62X10Wm0K9DA3WLj0a6535nR001GWJsJ0010G_z6a
6L2W008IaoWqeUeyu4E3mW6ZD000008WGg4fIW400Gt@60040gGA3000a0Gz1Odg
40Z40004XZ@E20uytH4Wl@C00yvl12X@V70Gy@hX2pFV40OyxZG0tVF00u_p3G03
n100UH40PYV200GRH3007ARGuKj00qK8SgMoD@400mvs500kTsWOgqD6KgIZYXOJ
J86E3s08XksvnJU1GyeCCLl413yZEA6WuHpvLeD00gY100qKT00GLz@aF_3XcQ0l
a5WWw39ArP0GmV6jPK00DH100XWK008Uq@32LhO1mAiWkY7rZnGuneZ1GyefrS23
5v@302L@uHnxd5U000BBG008Uq0Bc94000h860025AXuHLCIK6Y7bgqeC8Hg4Y7z
79200nZYXzX2WuHR10mzl7X0WuH3H0UFTye@dwl4z@p00s5tmKbuqZVY7z1000ro
000Y7z@uH@FUqjRyP9000000szZ7jB00G0XcwafB5WGJf5010GiyQPDl0OIbbw@t
0ZA80Xuh50100e9300OOwY7rL008000MP100ZZG008UKi50004TF3P8YHyeC00_y
CUqd10014FA6fxRGye68mY18Uq0pgdXuHtRzT30000OTO084VaI58XGyV8P062nd
A0WgpH_Z400WBO300n2WLO1W1P718sSXO500aUV2S200Ax79eu400mRyw@VctHh0
00aOce94LWJGrP0YAmcO129N26Y50hunMY_00GO1B1W1Fj@@400IQ7zlGGIR00W0
Iq@V2XLR0000XkgJu5u4oE910100PKpGrr6elX1u0l4Y9m00W00W020G00000200
28801000080080W040000W00OzV300W0iFk1022002800000fD03oDm03O90pyAK
Fs600808C130020000W040G008000002GG010W0000080014GBt60001ysU304G0
080000002G00aakD040010GIR0004K100YyDXv@I8FX4IxEXy4a0001H@@60a8@B
o16w3CXn4COH0F6Oe28fD00uD00000028We@V3W028S@l18W02Y@t028W0jzRW02
8W57C0W02o0y6088W8mJ34HL0iNU21JamB19431C0004e500aT03L_33XV3Wz@J0
2Q1G@@v01j08J06Y8870m4W00QD100mO492486Hc1O2L4306YC90DY6104ZeZ00W
8Z103Hs0WWnkX000aP00O200000WMpfbJG000o1y64HX11lR008000iKW9lRW110
000jc00001Y0GBG08I80W2O920G46I0H1E400K171GWW7108Am10UOi000Y4oW00
000008hHaw29gx1Ov@4250gW2SA8Ts260i03e5000Dr00Wg@z000a0t00W0aQi@@
AoKYXecS2wo3G0IK5og4nOwKY@C00iCEar@3PDs4@D8rV62PLhC@TAnV62Err0PT
Ymv0GqhW5kFOR_lKY@C49hJ9_pWGr7WGMrI000G8hHbul10maF3PLkqoL9n@4Izt
WmpFHlQ0Gg@C4iQBf_pG8h6duV2XiAnv@6028a200qFS00WGMR1S@@O8hO0k@VCa
r4uzq04oAIjcMHY@6000aIq00GifQ5oA6b4WHaig8hT1OWJXw@@1ClA0f_pGqPrD
jEFoAP0YQBDe880Z_Z40GLiK@P8M0dIzdXO1mAS@b2BGYwz520T6Ng@C4tU2f_BK
Y@9awl1Xp65100WayP8M0i2BuJ0WcqH88nx_2100SKj00GOP94JbM9MKK@@Cu@q0
8SVjIytWK@DeYU6g_J808wPvypGe@gagF3n1OGg@600W0ArV30014aCh1fvQmMy6
aul1f_pGu0p41LBWHE0IztWP4F1VU2Gg@CCwV89_RGb_64609kcG0IzdX_@39nV3
IzFX4@D8rV60G000001W000I6p902008nV3Izt00400PVR0020n4fO00W0Gg@602
02000eEY00WK@D00001f0000W0G00000m400008Pvv48100069000__A0000mvlZ
W000000upV3G4S_x8Wu@N3H0_yt0mut7XG8_@r0mzd7W8C_zH0yY8000S@v1008c
@MIyt0Pt60xIdG@@U0002Mf00Gu_UyY9F9_RWIt5WOgaROD9EHua4@J00zyJyw@d
ul1HnNHIt94l@C2OD0w@tZT1K10JLIGkn20KTEqVaIydXO1mAi0jWY_0CwFI009j
JzdXex5AWV6YfV6W0029_dGg@6y9l10W00W02040l1VoR0020WW8D0002m1n6080
00W0200004000G0220000G00G0n0M20000XGvV8CXV8W40qnl1@xR0400X@zD010
G0020000W04001wMt01000020000002G009rV3Q3m0W024K100YkV90WasHtdmqV
9CmW41yR0000W0_D8n@70000aul1vGamJy6008W044GGg@6G014uJI34G01q@l10
4G0Jyt001409_RGg@6008W04000aq6004HLl44IC4XauF3HyJO41@00erCrV30YH
aP00O2W0WX8J2GmCY42q8w800C1LY1GaD08O6H3102P600cWen003er400OdX00W
2KJe893080G4uf10W00Izt010000G0000qQcwl1240YQwt0G46I04410D0K17100
AmI48Am102Y2u80Y4oW0011F208h100uGn200rsZ4ar0WK@P8K0e2IleW2MA8zD2
60i03eDnV32O@480009_R00S1Wuz@C096ANzap@z00xyQ@@900qS8q@e00QE000q
MY00ma@E100K3v00GS1Q100GXP00GS16auVH0Wcaw@F10Wg91_Z400GK6100n2WL
O1W1L318kIa00sa5Bm37_N4000qq4J000WA300Ww_Ho2O3Gi0O5M0iz@d0qC2Wv_
Z2Q61004kvu_ZAL06YB8XlVVOQQU00g6300Oqs00GOpHnO00mzV2GCsH16B100mx
HtsLagV5qyG0UVF1mO90fgcmhg6yUi1G010Ext04G0021400000G01WXb00WtR3W
Llh8lV9000wYI008dV3000GpE008gbGe900akV2X14200mBw2009zd0R10W_@z00
04HUX9460C000ePD004DJ8HxR00002100qi200coBXN_D0101000001200jyR000
8CB1009_R00006s000zxdGlU60200ysV30000bql1vyRW00tU00miq700QNr0010
0G400004000048rV30j5000Yl200G5QKLPrLXg0aBIegsKX4TLMrfuAfhg5gAT5M
NLgSLggogQKborL1LNdAmOE00WGg2vN5lnD0xzd0OC7WoxF108WAJ100bcE0p@lH
Rts0LJ100SqTtyU4FV8xmA10GrK000YM700QhlY9SJ8c9R8JY0yVEIv@dWW01WGf
CxUVdoUY10WYPn_7IPydaza1q240ctFA@@@@_NKZY0mW4088204210YW0m074000
_@V@@FWxt@JU_RqlP2@w3Jvz6ioVE00W0000ec9I2000EMnrcz_qwn@bm1100Wd@
wfYV_H8J000WQ100YSW100G0j6CSa3L0WHNAg2iJgWXGEuFoX@ZLvsAaJO_u7_Mt
WU0Ues9IcOEXU0m8Q09I8OZ_@J80x4ABeYUiJ0000000eTu000bORGGE6i9A3HTA
HAqFC9T200102ZMY_2OeJw70W00iMw61UdGb0FyR@3z0uH@@C0000174000ynD00
008002w@F1010GTWRGRs60080O6R3W008a3W10W00o1WXknD8SS30404q_G2400X
g@sWOnJ040GGLo9G004ePW7g4W120000W00Y6mWO4C8Q06kytWD@DeIWA2Ps00Wm
02700U@tWeZOeB2FAheY4Ame@@A2j0ZMAO8X0IARFXGBy8n930mQh6ap@TD9QOLa
00v_j@V9_ctWhLUuj43sBHYdzFv@U3G00GS3o3ftRmziaCXe1V8QmkWCidl1f481
00OUy200nZHEE82WeZs60046P10Wi3O8UiGodqZSA99GFCQj4ZW0a8PWPm1n00Wh
D88Fi100uazP2P7OG5WOZ3218x066FKqPKR100mFr10WG7J0900GVCLiUb7znOJK
ovyeB3FTXH@@IW3I1001TnknU4BmCzu_mjMIiPc1ViJIPx64kWD00WMSA004pP2f
jRm1yC4vGHH0@Ga3yaTG2HE03Ee000aVf000C0W10K@l1030m0060030Ce403008
0000m00m0G806q@l1m10O0W30W1000030000000030W1060030O0068408Qts000
20X0y00u00O0m093a0G0030W10E0030G00800094030W1042W194OG80CaGW1C00
6YsC1m00C0m10I8u10aSf95OGeZ@t@@9rEBH9jZby16z@p00giyeSBjI@SE1tW4W
DWs01mA@Xis@3nD0s_s81WHnS0z42FUZIQm88PK100iZL00G2j3GdRXaVyazq@Gl
NL00sP500Kl50000W800021020020600010080202G00410W082002G0000W0010
0G0002G00G40WG8080YG4W000400W0G00010GG000W000G220208404080100862
00G004100382002Gb@RmN09082102I4204000H0000200000A40008800WGWG00X
04100GG001W00040W80000Y00G040600800000203G080001082002G84040100O
L0300H000WW0082X02W4404040100G0200G004000sP500mlC17m0608WW3UG800
00G0G100417m6000YW3U0005Gm1982G4204Y0000000A017mW08XmW3aGPK0muuO
30EW700WFq10WSnGjUVOiqs0aT03XZhorOySg_R00G0007m300wmj00m_@saTWeI
6K0M@F1C180DrnZ200W_@344i0600G9e200DxrL@@f100OYG00G@@6000O1O00mf
@sypN5pQLNc1CGSk1eV88lyD7QV70z@d0s05WSbii@@SIDm0Yy80Zz@C008VY300
z@R000Wrd_J6008AM00WO3mEi1l500i_tUo00Wy4400aIN2W600gf@P0CCA170UW
3F4zbA7yNA_K1WH_J0Rm0m4zFdQW10BQ06s@vK3O000W3O10WOKNAf_Do6m0nQC0
00G00804qUj100080040W008080020G00800004001080040200104002020W0z@
R04001080040200104002000010W002001WV1aGT_600200104002010W00INH0_
9sWe3OO3LaouV3O37000Sq2lFD0WDS000B2sFD000M010027OC0eryf3mGa2Z1O0
08T06gy7Cu0400W2e000800G0OEz4wadXIdD0001002004004F0SG@@IG00G00W0
0050WA1OOPU6oXs0y4D0L2O00000u090bHR0004WfsD0800020000002jvRW0400
01000400000GSVl10W00kct01000dtRmtx904000G000000XHxD0020mgz980000
7G1006SsZGy8oU3Ii_10004vw@mWyO00W08JV3YP@10G08t@@mO@LCNl11@N1000
eW@V040Gmu@C000uKK00002000erf0WIi1100GhojabbgbqIJVbQfr8HBqbYqroN
h9XI8b3fhbMIxYJGA5fHBjJf5bNIBII9wbh5BjKhaaJI9LVhPfMl4bagbqMxBbQf
5ALhqacMdoIhAXMfd2jApNMLYIIA7zL2jIx5dIIAIN33y100iKBakM0000007m1O
6zqW3u00WfmxSS9oASZrsv10DmT@@900MH8qGK7@F40KfSn6aJs2NLRGH0WU@2Ru
XWifwvUpcsrWPtD00RvHOlFSliq0400YNs0MhB0vPmP@@y00uw9oXmp8E1Tf309y
BtE7E1WQMEmtY661I0m2O000kO900Kukn00WJaC00avh1HDmMSlc1Za08inax@t0
000y23002N_X2wn8PQNZdt00mA0000_GB00Kkyp0WL0o9cXO3mEiX@JTNK0mEqHK
8HOx93G000xG300MnuWemEJQ3oNcXuUbEuWgp8cXmbh6Em2Guoi1WN5yCu4YGsWG
XJORM3cAEXGXD8ZO3cAs080400208oOrWCYDW008mN090W008su7w@tWOZDG0u0B
008TA200H7yMEn9S@FOP4pGu06KV_LHaR00qkWMoJ8Aun2GsWeW7B0P600s0t@FO
P4Rmlx6aJi1p2RmyoI00200400q30744U2rsd0000aYuD0800OEn6SKi13@BHhn6
08SWCdO340006AC9t8RGEnR4RC608G00000G00gYm00Ged9aUW1H0NKNw6ysS2Pe
p00W0WCYDONu7sLN2200019Z4iX000mPK000If5QfHhJ10bae5qJHBbRfb8H9aaZ
_boIhTXJ8b2fhrNMtYoMg5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhvhIb4daAbqIJ
BdU9b8LhqbYMbnIBAbM9b3zBnIMLYMIA5fLZlMf4bMIBIN3Qbw5EX3u000bJsCX_
@1BZO6YGcXUdbemVd080i2100We_0G@@HrjdV9BRW6m1WTbxzlG9oZs0yFB0TDGO
9oBbHi1_5A0ci5x4RP8UP3Q4YgmA3CLQ3aOB04v0v0W903q6uCYD0K11m4u9dSB3
1_oCM03W0VP60heSSlIqHFpO3K00G_YNhlqqfB0IybXmKJMxU1Gi1Iyg@m9BRG_r
64R0pC8002ROxSYJO_xdpwbXW30FNQ3Y_AvuzD00yfI3@94tRrO360Yxbjmbh3Em
2mTXf17O100c4u@m9q@l1X2@0004WfYDG004m@m6qJg10010W002001WuVO3o9sW
OZJ0804GKx6iUi1n6RG6n6iUi1H7m60m6ke3Ce_VpoFsWSYP8Aun27GYeyNA0P30
00svU008dO6cu7CO3C018RGw@WLyi1007W000DfN000200IHm9yyA3P1R0000eIX
D0400mim6q@@3V6R0G00mMZDePN9QDsWCYD001002000000EW400256ZJhDW000K
6nRCLD3n6xH6n6WnM0eyqDY0sc_@P0G00GRv6iCy38040AwcXEbDeIN92Ic70mPK
FHR0jE50KYD4000jKkbMgKjIJQwNABjc4QXUAakMVPD9A1fSaMjqADNS29f8DjeT
gMeyIjGIAfdSjiabQLISIgKwRjbqwbKYKjIpQVLABjeKQbMQqwKBPL9Q9zKqIP_Q
bIKA9veV9eLwNuKIfGwQCWF00WbQHQr20011pGazZ1S008dO6YGcDiY00P6MQp@a
uDx18s0FgUkhW_rI233GO3FqQRclBt2Wq7WmUVeUJZZNM200WRY100w@tcsA4LoW
2Ga3a30c0Co1Fga@aHSgeg@7MnddIN2nYn2GWl2zwJ5HB780Cty4Dej@@A0G6J7j
CLLJ8Kn4X4tR800Wzj200KH@pP4pGuo9KJPo0400mA0000V2DUUfnA00a2B3n6WT
O3@7mleO7Q0YeGYQRD6000Oso6O5Z1OYUfpaEXybP8ktg3E8vaTPmwj1GEnC4Gtp
P4RWfq6WM6J3620mPm907O10000Hem9q9K2X2p010GWGXD020Wm@m6ang1008004
020010yBW440004Ry3FfQGin607O18dO3w@tC0ygWv4pGsbW1006XX00Gu0FKVEL
Had0jB0WMoJ8Aun00MW45i1by3Mo0C0RW1e@Vm005GzxU2007Wc5EX_@b0100100
2W70CO_v4gjF100085nR0G00mSYDueO36_NYMZD0Gu0PEn64Ay9t8RGEnR4RC608
G00000G00_bh00Ged9aUW1H0Nq3s6ysS21fp00W0WCYDONu7QpM2200019BKH@60
R8000N4D00WKQXMQqwK0G99Q1zKqIvMQ9IK29veVfiqQNu4IfGwQzbrjeibQHQrI
hqQPfbqgqqYsfwpQBrA9faUobsQ_gK9n9fI9jqqofNI9IrATfeLPiqYIfLIvG@Ii
aLbebaIHQruhLAHfbqYqrWMfUXJu0E00GPz000jlQ6008NK000v4pmsZcbHi1yfC
0ApBsm_z8PP3Onh0CUOonzRGUq68vZ0u9qhAHTfKfR9ZO3iXz048Dghw330EAqub
VefIQFms3020W080E0F00W_s18LvIpt@XXlzegV30GPGdJC3vINQq1RaHi1ypV0A
nkq3s9Xk11GWlKreVNHBV20k0fEplzEV6ogt00igwnzAH1x25tELp@7oNeLWDG10
0tcPcypKFl15qRsJoICdi72000GPR0auB3z@R0120Wsy39LV9QslHoyB0llcGi19
aq0CfdhLL3OSTT2dNZ1630WIRJ8iX400024dV5zJmsskCCkxCIqH0oacXkvVeH3I
2gdXiwTwVy7Ys8aC7I0000Wfe6WSYPeIeYguNH00GmQ200_PtWW32f2iINZ_10aG
Q1EyG7zmKU6OXR8ntr9yc@6vzc0Tc3WAVJ8kt7gQpZAtC8102o79XStAww@4gGXX
tQDeDbJ28nWrlD00i13000B6000vpbG306a1039zyGJ0Fa603TpvKtBIqS06Dn8X
0YGu_@JW0u0R2C9K1Z1v5mG@@gyWh1VuQmOwCqPI2080000Em200omo00m@m6CVg
1X2d010108002v4RGem680W00G08mwV6000GOgO3010G00220110mKn68201uBW4
w@t05001000040200X0Oac00mwn6ami1XkdGuByKTG2TPyGz168000CZO38Dc0au
q3z5EJd2CKCG2DBamDz90Ru000VZJ@@FKhX4z96IU3Iad13Jud00m24000Mw7002
P4ZQFU8G2LYiW11000aPV0oZDX0aPefYS22XXgAIumv440s0300QYe00GF99KIYJ
5PmW008WCYDWHI200G00W00WBycG7l9CkR20200A5sWPXDe@V9_Cs00AG0G80G40
W0K1r3000800G0800201N0GEn600000EG2000GeGXVW108mUl900148ZuDA6tW5t
D0004GinCSLi1n6p0EW200yILBfl1100W8Wt8_J600040010uSR900G0Sgi15i@0
080aCYV0200GaeI0W00K000GGoj4OV200WFb4000W0000QTA0e4RG000qgSBPPfQ
9jqqNfMQDIq2Tf8TjyrQIe4IvGwQfbqku4aIHQqIxKQHvbqYaKYUvQnIBrA9vaKI
rtQMgrBH9fQ9jr_IfMQXIrADffrfiqgIeLwfGhoybLbeaaoHVbGhqUnfaaYqrm0V
000Br2fh5WWWJeqqeY6XXMnI0EW300WXeW_rwuy70maObJC3LTvHEiFa5xRBmNHg
UO0Wj78s09gkroufnOz_A009c5sm3LXaGclX4s0Xx@B1018000000u9t2xzXKNj9
a7OYY2fqY91W00Gyo6Ojo0OAxa7_@10qbEHE8K2r940s3LEKt9zL0W0O2W00WC56
W4z0604lTWlOaNWe5Xl10O1C000I2600AftO00m9I600IutWeb3Sv@bo8s0Oa40j
URJHbP200_Xc00GuoFKGl4X7cGs6h6Fl10WL0000_h6008U_Pg5bJ0mA00000n70
0KT2gn6e2000TV000r3zC0O5000WeO1002h9s_@z00i3D00G@GDJebdRhwV3i3D0
0eSph7_ssz39JQ3WDp0qdlDvBBA0O3600Wzo100swFXUlh8zRjYIvA0eBn97mGV_
mKilYfeZ1SW500qhifwRW040Wmy0J083Iq@6W01888O3810I0G10yCO3YksWfYDG
004m@m6G000080020G0080400208oOr0000GJ5RmN090W008su400800X0G8jV34
20X0W00G0u0B00WBl200TozGNqK1002001SYY10004002001o9sWcgkg@v4K7Q0K
VV2X3O000802400rp7b018004000Wj1w0mWSYD81v7Aj_XU@5A0P3KNq0q@l41QR
GrppaxV50WElI@F10WDmn_7Ij@@000Ud900mlx6aJi1p2RGBkI00200400q307Ku
V2rsd0000aYuD0800OEn6SKi13@BHhn608SW400mZe10WPvJ00W00042000W0G00
001004Ay3t8RGEnR4di1n6dG6n60040e823800d98008fV3o9sWRxV82uMg@NYtc
JOwO60040aHi1x2@mp_IG00088v7onDXWan8dX7AzF1O3100Wpe000aIBqIZMd20
A9HBedYMAtIBHYI897zBbbMx2dGA5INhlik5bjKBIhMQbMBBjaMbcMqELVMRfM99
bqJkqMpNbA9E9LAfbcMEzIAHgMfB5jAZbMKAjIA7wNYbig4jaKAIh6VjI9AjaMak
6qArBS27m100Ah700G020Gg@5bs@3no@0000Kp200vnaG4oK5n66G000C5U0i8h7
zXwHmSM21000wl2GSe07sG5klB0YSqcFSpCZO3GV604shwDLAnMn03G00CLQ3aOB
04lCv0W903c6uCYD0K11mKs9dSB31_oCM0300WHIhaQJAbG200000QVNSlIqrEpO
3K00G_Y7Glqf6m0M10WXzJEtM3YD0xm6_FYYRnEq0C9zp00WXX2004S0uvIpGqN9
@Pf10WFLUrCXuUV8zSZn6C000mYEmTfJDW1u0B0z@d6SW500ygW@3dG@@64AC300
1000W0CLi120W0_7sWZvD0080040G00804@3RGEn6020WuBW4Ewt00001n6d00IN
H0000h7RGq19qc5O00G000sm100CtQ00Gz@cbVi1im00kuFDO120X3C600GBp300
v4pG3@W1RW18T06M@7C0W3G000A05000100f8u4cudXmVD0000Kfm60200OMO3ox
NY31CerO3QsLYMZD8ZO30G00W000000W3810WGXneLV38000bHy6J0p0000aTWD0
080GinIaHi1Oi50UVxX8W5A@V60400qMk1B3@0201WLwPeJP3g_NYWav10S6Lzz6
GhJ10bO3100GBbRfbALhqac_boIh9XMed2fhrNMJYIGA7fLBjIp5dGIAIJBQdg5A
lKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBAbMfb6jErIMLYMIF5jKclMf4b
IIEwN2Qb_5EbKAak63u300OfMaMj00GGmibHi1c2F0E_VZCib8dVU0dc0aJC3bzE
Sz@68XX18s0FMoMYS5YgLQgyyf04sGuXzQGEnL30EWFdO6YNcysbVUwV300J0200
0rq00G8zsKvkYqPE02yLYgixjyM3m2O000UBEQP_@ElK0m6e000WW6004txsXBdG
Db93G000h0000y9quvb6h00GEnC4R0sXDyV0@YYTe18YYgpMcXSYP8u0mZxLwSfD
etha3Ns00S@Vv4pG8uI37O18Sv4YoUC0upVTMR020WW8aD8Ku4scrWfYJ8KO3o8s
WfYD02010W00YCMD8ZO38002y5G20800YD_X_@D8sO340Em200IdY00G@@cbki1P
1pmz@WbHC3X3OGzvN5Hk10Gx2Q9FXeW7B0P3Y2Ui0aP00O3S@@WbHi1@kRGEn6CB
i1pBB10800G00GF0Smes9KRV2000GAYt0W00Wv4RmHn6Cyl4j6R0Wm1oSYDG000O
emaSZi1v4lHinUG00CJG00Ged9aUW1H0Nqlu6ysS2J7p00W0WCYDONu7w8N22000
19Z4iX000mPK000If5QfHhJ10bae5qJHBbRfb8H9aaZ_boIhTXJ8b2fhrNMtYoMg
5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhvhIb4daAbqIJBdU9b8LhqbYMbnIBAbM9b
3zBnIMLYMIA5fLZlMf4bMIBIN3Qbw5EX3u000br300qeeP000miF00aJC3Hib640
0W8azeDKQJMs0zT40nv9D4000sVC0XzMTi1I7sh7bz_C010mKfDGYj0Gyoa30c0C
GRWp8s0G5401_oVK3e20CIgvxa1Gwq7th4TqpCs05WSYP8SvgnA004IPoYyL0YDW
v_@J8PP6YDWPfmA09qdGO3OZTe1Oizdp8cXW30FNQ3weFvuUD00yfIZl94tRrO36
0YxDXszPEr06W3i04XCR0uL1@7EX_@D8Ku700W0CLi120W0_7sWUID0080040G00
804@3RGEn64RS201W0Qns00001n6dG6n6iUi1H7m60m6kSYP8S0po9cXeW7BS09Q
9VfOmD000Odx10WSYPecVmWDm04Wi15h3Mzv600S0200qaU100800851d000GW_@
J8BO30000LAi1W000c5sW_@VupO30200sQi1DxAHhn6aHi10800G000000m1a00G
emUG000AZuD6SdXOZz8ZO3mOB0y__3H0BK@@C0800ejS3M6_14020XvpGdo6CUy3
19@30uCgPtDWMd20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBE
XaKacMqELBKUfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4j
aUAQfCVjI9AbaSql4qAzBSAfK8TD6m700mIj8jQ10WWWPBZO322cjCYP0h80mCn9
dsB3n6WTO3O7sh1v4ND0u0_SYP8UPoRN_vf@D00C18000KJ300Lk3S6nC4uR2LPt
Rn@6W5m000yMSqo@7tRf9IpGSlL7kS2rKcC0100i2000mdGZdNQi2009_oGi1O7s
m@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIEcU30mz@bJC3XWBDSW5WmbJ8Axn0W
F@r_l18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrWCYDW008mN090W008
su7w@tWOZDG0u0B008TA200z@RM6nCaJi1t@3M6nC4EW1rdVL4v600jBeby4Y2Ui
0aD8AO3Ivlha1O00O3S@@W100e0K00mlx6aJi1p2RmyoI00200400q307C@S2rsd
0000aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYDs3200ZP4dGEn641C
IFORmRp9CTC30020o8sWTXVeDR980004aCIm62000dH1008bMeb6jE50KIYMGF5j
KkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_isIjIIAfdSfjcl
ALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbIKQ9j8TDeLgNu4E
W300KMF00GVsc100Kqb00GEnC4nMQG000C5U0q7Ap0400IMs0S_E0nv9D400WqbP
8eoan2004RWq00WUKF00aS03nD8To1C4tGr0WHc2RNNcP00b@d0cP6Wvv160k7Ke
1G7q0s000gX300q@@d0mZX2B0sW5_F4Y@3iu@WGs300G7S10Wn_TDj0385Q0CqVi
f5a0G000OY200000080WG04Ge@@7001G80W0e@V300G10220e@@7W022Kue152Om
xXF0004pm00GX0600086w00Gv@_100us000G@@6000m4g00GP@N1WM8CQ0qw@F10
WDQly3600OGk300X30NmM@76s@1eX700W3m300rrZDEW700qbEnd@G3w37Wk100W
4Zxr00200HEuDc0400qbE1z3C000gu1J000m2m00WF_DEp03WHI0CmVoP6mGK3CZ
DG18g1cx@F1vBE097mGOpIdSG25RpSi16mxk18iXg9AB0qDanXep00000D680Ze@
C00WTG300XDOG6ML30sX600CCK00WW3yEwBf10000G00400m6O000yf20Zz@C000
CH300vzd0O00Ww_V60u0Ro1C4tFO00WN98000000004002007m200002001W00G0
010W0Gd49W0080010W0G0080W00G000080040G008040020G004z@R0W00808004
0G0_28100040020G004y5W17gQ00010W0G0080S0B008T518wWtw@t0O370z@360
imWm1Wh@@400MWaMON0000J6m0sTF0p_360qQ__@J00O3S8ZW100QIl000000002
80000S040000040080G666q_F30W000100z0m1VHcGRa90000f@N30200U8W1L2O
G@@I800800G00Wm1I000FY600cQC100200080000001000400000G00001VKo000
0eM7D00G0mM76W00002000008000W0v1O00100G000000Go3m00W00pMQ010Wn88
D8qJ30500S5v3b78H5160810e@V60040KVy3VPQmT164F93H5O000WWB5UuaW4w@
d12000l1aG@@9iSW1G000YNEX_@D00G8GE3ICuP2m62000dH100AbMfb6jE50KIY
MGF5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_isIjIIAfd
SfjclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbIKQ9j8TjeL
wNu4EW300CWF00Gf@c100c2U00GUC90S008OkqW000aF03nvbC4000sVC0n6WTOl
L7sWqv@dGYjC4lCvJo8Hyo630GdEdO62yruSYD8OKZnRn0qaT2HB@Vqoe6tRrO3K
00G_Y3002e1Mc1000mdG185M6cdFv4OP8s0i3Ru@8AY5xG3mOxFdHC3170UW3X7t
R2rqdSuo60Wx@BSPiJft0u0B0nnd6SW500upV@3dmu@64Ay300G0cAs010G0@3RG
Ff6004002080040Y@XD8dO3YDE1W0G05xRmwn64Ri1P4Rmwn64TWPP4dGEnC4EWP
im002cQi8oD0MW000qkWeWPB0P3gv7CO3C0v4pG@@W10S0200G1e000800851d00
0GW_@J8BO30000LAi1W000c5sW_@VupO30200sQi1DxAHhn6aHi10800G000000m
1a00GemUG000AZuDc0cXOZz8ZO3o9cX8WHg@V60400qMk1B3@0201WsiPeJP36F_
XWa@10S6rDt6GhJ10bO3100GBbRfb8LBqac_boIh9XMed2fhrNMJYIGA7fLBjIp5
dGIAIJBQdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBAbMfb6jErIMLY
MIF5jKclMf4bIIEwN2Qbw5EbKAak6br300OfMaMD00GGm9K@nOP4R05l4W8ah3h8
0GmG9Zpt1O5y4YDmWqbDEPP6YD0xmU9lYV62xbP9s20RydGyoR30c0CUP9QTdsCY
D8du42yz@0VBDQPc10RW6jCpz@d00oNymbz6h00Go16qHPofpR0M1000uTtXDKTw
o9KaDpO5000GZ16QkqO7Q0IocXW3gEdO62E0xelUEeq4m6C000_K9kNi3NcXKmPE
ZO3IEWX_@1BfN3E3s0u0B0000825EXkRJ8KO680024Ai1G004_7sWCMD00010W0G
0080WV1aW000WOZVu9L3YDs0u0B0v4RGq1lbJi1p@3M6n64E0SH1pG3vT5Wi10mk
x3GcjSYDeOTmqKl000000002OEn6CBS2z@@000WWIXDu103EVtWwtPupO3U0m008
00G000U0uWZ@VerO300Gu0I000FH3GemdSZS2v4Z1100eOZz8ZO6m1K041CI3udm
Yn9iwS27BR0201WTXV8CV90W004aCI00R8o9sWEXD00KI2jGF5QLkbia4bWKEwhK
BjcBEXaKakM_QTBKUfM8TjqIwMMoIjADQfTAzjsIQLIAHlSfPjlAbaSIAfIBDQTw
beaKjaUAQfCBjGfQbaSql4MQL9qAfK8TD_ogIKgF03yYJu0S00W1_0GGmr5Xi1Pz
t50W0aCYJ00SaN4iIZL408nN6YD0xzmhuN_n2xbA0yTiX4ZTYjC4lCvxu8Hyo630
00rq00GEnC4uxmv4RGme630UBEa_4YM_@ebHDktg10RWcJi120W0IxDP00000mdG
JXbXuvJE1M6YD0xm6_FYYO10xG7skqP4pGm1W7uWtnzcGDz97ki100Wxz7004kCs
200022sWuuD30u0B00m7@100@3Rmyf64Ay3LNRGem680W00G080040WfIDOgO3_7
s04000J5RGin9ahK2n6d0408TA200h7RGq1fbHS2v4pGu0Z10BC8OgnY8t00W580
00jL00045CR18RGE@T10i1EdO6Y1VC0100e0A00020CBi1JvcGWd9a2S2b2Rmim6
q@l4V6R0050WA1OeqN6Q7s0y4D0v4R00000u090P4RGemRaHy6d1RGindW3e08dO
6Y06fhJVuKP3M6_10G08jP@0400WZ5O88PXo8s004000GhJ10bO3200WMbR9B9LB
ebc_ArIhHYMeB5fhblMJ2bGA7INBjas5dWKAIZMQdIBAlaMaaIqBNBMQfM99daIg
_MpIjU9A9LBfjsNArIBgDs0MQL9qAzKeLP_ogIKIIvelIeLAluKIIHwQeSF00WbQ
Xqr0GGm9qgvO0400W3u0005lC2vw00h8q7Qo0WptFvEXO3IeTvXJMcXO3m60inIG
sIZDM000zKVytIdQ03nD8D00WHC100nDCC0OcP00WPC000gdtuG3CWx11Ge1G7U2
p1DmSu9d7L3v000cXF00q@FmMQ70M@F1qYD0X@ZA0oGlu24ILL1G@@pGLL18RWS0
00cgT008SX70WggcAGBn5O00ggg03Q9k03o6m60000OX60YY8vm5K99262N0cS7O
8D2O000F0H008e23YvWXy9u9w2pCHF0qaH2XY8KH7f10GGBk09Yv0ce8IeAYPegg
gsDmC000L5B004uY4HHWQ@@6W2i0ek@CH1M00WAxPW@Cp9WX85u40OZPa26akZ10
0W@zF00q@l1P0a00_@@M0O8R73g2mW408e709KLL0q30600RC100MOK0089dP23Q
cW3C0nm3GBF9KS03j1b00_@@_WC8013o4wXK4Ieu79IGmW2YO0ZO000IHaO47660
0W_i6W83GkKVW10H87o0X00WRiE00aI03n8GOA1C4Z0Xu0H06kLwx@D00OZ600OV
d300ncoc1T7WOJ@Fgr@@IFD0007W700YDLw_@J00TfJs1CqUl1XmFST@C0G00Co1
3aOB04v0v0W907z7O000B03000LG0CvVom890oDWX9@J6BW1Gk1C4r0p0WDG3yNQ
i1A008VnZxNwK3O0h00G@@6KPZk0000x@t0UtD0n68nh@3JKM0eeX4YDWPD680zD
aGO3It@l1O7Q0c_@P00mmG1002E0y07O8whapko00mdAjfa00O3cm5b6Rm0000Bw
89bEr06W3i0CMVQm1M00mh2k3d18002w@t0G0040W00G080040G0080000400208
00404001080020200100000000010W002001WuB03000010W00400nN09Ked1000
200108002020W00INH0000010GYEuD0WDSH7OGu0in230OAyqW5804EW456kK4J6
000ipz00Gw0CKXEOm6O00WMpdOrOLJP00m1800GJw500W00WSFb100000002q@V2
0080U0m000G00W000100y0W1n@@000GW31Cu103c8K200100200000y8Q0000100
2000000EW40026m00200W000000W0008OQ33seq0200GbOP00W0W4DC010004000
00G0B5amwX600009h030020yJW14000_zm000G0000E0500WnM0uPh7w@dXX1C02
00Gv16q@V20021U@@10G007ZL1W00WQ4C8Yn7G080ah9356Omg0FCMf1B7OG@@F0
0400009Gd2FaRG2z@R00uCgtpCWMd20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhl
ic4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbb
MKAjIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8TD6m700mIj8jQ100000E070
02S9DW300c2F06@Fji1O0h80mep9p_Z18s0i3R8ymUD8Nyg107mdJC3nBJUxoFNl
i10W90100WQQ00e0VWp8cX0VJeAxUB6r0i0600WtYZM_@uUBDQPcZxjYmbJecoa1
800WL0000_4QyyIZL0085M6YD0xm6_FWVHnEq04HHrPBpGEnC4S0unzATkq6qxLo
nqR00k@lSYP84SfX3i04kS2HPF60yvls@D010GG4o64AS2RpQmKn94Ai1P4RmKn6
01W00G00H6h6aHi14001_2810400n6@G@@64Ri1207O100fJH00e@Vpo8cXSYDu_
Vmo8cXm1Ce_yhY8t00eT1jadGKmZ5Wi1H1RGA@TbC0300RWx@7C0005W200_TtWS
YDOMO3cNM20G00W00WU0uWvdJes_4000WK4l10100p9sWZYDOuV9QDs00X3av4RG
emdSZi1v4lHinUG00OCZu4o9sW8WHw1R3UREXfZP00G0G6n6iBy3jPB1100WWaH2
sG000uCA000fq2jqerf0WIIq2wfebojqIae4IoH@IPfrkm9aIXqrwBhRHPBrYqgb
MfroIBfLff5jJrdrMgLII9zaBjryLfIYJIbIQffbJlaIagLwIHhoOf5bIhaoX_bO
9hAHB9bYqgnNhKYIBf5fh1jIz2dm1S00Wow100wpsC00WYk400o9cX8sI3200Wfm
3W_GP6W00Goo6Wpt18EFfX000akC3XzoSi1I7sh7bz_C010mKfDGYj0Gyoa30c0C
oTWp8sWSYP8mt@ZQWp0VPEQP6YxDXEwP6RW2GEnC4kSrO500YC7uGAJWtT3Gi1IK
g@m9BRGry64R0pQCG0IeFXm6aEdu46R@vCYP8u0mpbsWEwJEkN300VgquR2nzMDs
W1WuUJeTVcJDW1u0B0H8p60ULm@XJe@V325_10080J5RW008W@XDedK300200104
0020n@m6aJi1n6d0G08WMiD000GGin9aHi1h7RGq1i10iXBdO627miSYP8Aun27G
YMoNA6S3000svU008dO6gv7CO3C018RGrhc10S0200qaU100800851d000GW_@J8
BO30000LAi1W000c5sW_@VupO30200sQi1DxAHhn6aHi10800G000000m1a00Gem
UG000AZuD6SdXOZz8ZO3o9cX8WHg@V60400qMk1B3@0201WmyPeJP36F_XWa@10S
6rix6GhJ10bO3100GBbRfbALhqac_boIh9XMed2fhrNMJYIGA7fLBjIp5dGIAIJB
Qdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBAbMfb6jErIMLYMIF5jKc
lMf4bIIEwN2Qb_5EbKAak63u300OfMaMj00GGmibHi1c2F06wFji1O0h80GBn9ds
B3n6WTO3O7sh1v4ND0u0_SYP8UPoRN_vf@D00C18000KJ300Fk3S6nC4uR2zqtRn
@6W5m000yMSqo@7tRfHBpSSlL4kS2rKcC0100i2000mdGZdNQi200fmoGi1O7sm@
1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIEcU30mz@bJC3XWBDSW5WmbJ8Axn0WF@
r_l18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrWCYDW008mN090W008su
7w@tWOZDG0u0B008TA200z@RM6nCaJi1t@3M6nC4EW1rdVL4v600jBeby4Y2Ui0a
D8AO3Ivlha1O00O3S@@W100e0K00mlx6aJi1p2RmyoI00200400q307C@S2rsd00
00aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYDs3200ZP4dGEn641CIF
ORmRp9CTC30020o8sWTXVeDR980004aCIm62000dH1008bMeb6jE50KIYMGF5jKk
bMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_isIjIIAfdSfjclAL
ISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbIKQ9j8TDeLgNu4EW3
00KMF00GVsc100Kqb00GEnC4nMQG000C5U0q7Ap0400IMs0S_E0nv9D400WqbPeI
QZ100CY9008sWX10ZC100CBDe4YC0vG6_@hz0100CZP008MYX3DW10uUGX60T8BC
7qWDjEzG@@1Y1y000WWRW@wwnz18p06IMOo86KnRa1GN4Vs@F600Wkv300aL43LO
4R@@60WFpEo0OottoabO8o0a3Pu@O9_F8Z@Z_GT0m6BX_BDsO100qJzz@V20qSaU
0ye@VC000IOC00e@VLw2O30SwCz@lHF09mhr18k160mdxbsQ20080w0mW@hmmdxz
TG09iTA3000W0mlpvtv0uBhDy@S0ifL2T0OG@@OuzRUtD00GF0U4tW7_7S0w@730
K0MdGRmrNLSuw300W2W1004606Q520g48XG4aGhG0G@@d000GAhM9w1u1000HO50
02tuaEAofd2Owe8dyAamCin200uEm200r_@SY8C4bo@nDyVmDkco7jnsP0r00WOY
_FAbmJvCjjtbOw@Sy@@@xV_PF203I0WW80G8408220a010AW003Gu@@7_l@Y@t@u
@yJ_@_b@hlv@vV_F_e@VVw@sh_Vzh@JFx@pt_lyk@7@x@m3@@xn@xky@jF@Fxq@l
Uz@gR@Vwt@ZE_@dd@lvw@N__@ap@@uz@Bk@@X@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@z60;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V414 = 0;
INTEGER V415 = 0;
INTEGER V416 = 0;
INTEGER V417 = 0;
INTEGER V418 = 0;
INTEGER V419 = 0;
BOOLEAN V209 = 0;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
BOOLEAN V422 = 0;
BOOLEAN V423 = 0;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN V204 = 0;
BOOLEAN V146 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
ENDDATA;
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
PROCEDURE DO_FORCE_SRAM_DOWNLOAD USES TEMP_DATA;
V344 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_ICB USES TEMP_DATA;
V422 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM1 USES TEMP_DATA;
V423 = 1;
ENDPROC;
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L248,
L1188, L1198, L1161, L1164, L1167, L1172, L1177, L1150, L1155, L1152, L1175, L1176, L1189, L1220,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
IF (V42 == 0) THEN CALL L1188;
IF (V42 != 0 || V2 == 0) THEN GOTO L1149;
V91 = 1;
CALL L1220;
IF (V42 != 0) THEN GOTO L1149;
IF ((V422 || V214 || V423 || V210) && (V102 || V103)) THEN CALL L1198;
IF (V214 && V423 && V210) THEN PRINT "Warning: No active flag for MAX 10 devices";
IF (V214 && V423 && V210) THEN GOTO L1149;
IF ((V42 == 0) && V102) THEN CALL L1161;
IF ((V42 == 0) && V100) THEN CALL L248;
V419 = 0;
IF ((V42 == 0) && V103) THEN CALL L1167;
V419 = 4;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V214) THEN CALL L1150;
V419 = 5;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V423) THEN CALL L1150;
V419 = 6;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V210) THEN CALL L1150;
V419 = -1;
IF ((V42 == 0) && V103) THEN CALL L1167;
IF ((V42 == 0) && V103 && !V422 && !V214 && !V423 && !V210) THEN CALL L1177;
V91 = 0;
CALL L1188;
L1149:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
FOR i = 0 TO V1;
IF (A171[i] != 0) THEN V4 = 131072;
NEXT i;
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
IF (V228 || V204) THEN GOTO L1178;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V199 = V199 + A59[i] - 1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V203 = 1;
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L1178;
BOOLEAN V420[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V420[(V199 - 1)..0], CAPTURE V420[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN GOTO L1186;
GOTO L1180;
L1186:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1185;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1182;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1183;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1184;
L1185:
IF (V420[V201 + 1]) THEN V420[V201 + 2] = V420[V201];
V420[V201 + 1] = 0;
V420[V201] = 0;
GOTO L1181;
L1184:
V420[V201] = 0;
V420[V201 + 1] = 1;
V420[V201 + 2] = 0;
GOTO L1181;
L1183:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 0;
GOTO L1181;
L1182:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 1;
GOTO L1181;
L1181:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L1179;
L1180:
V420[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L1179:
NEXT i;
DRSCAN V199, V420[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L1178:
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
IF (V228 == 0) THEN WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
IF (V228 == 1) THEN WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L1175, L1176
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
CALL L1175;
IF (V42 == 0 && V228 && V344) THEN CALL L1176;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L1220 USES DEVICE_DATA, TEMP_DATA, L1223;
FOR i = 0 to V1;
IF ((A17[i] & 131072) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 131072) == 0 ||
(A17[j] & 4) == 0) THEN GOTO L1221;
A17[j] = A17[j] & ~8;
CALL L1223;
A17[j] = A17[j] | 8;
L1221:
IF (V42 != 0) THEN j = V1;
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1188 USES DEVICE_DATA, TEMP_DATA, L107, L101;
CALL L107;
V4 = 131072;
V3 = 0;
CALL L101;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
IF ((A17[i] & 131072) != 0 && A171[i] == 0) THEN A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
PROCEDURE L1189 USES DEVICE_DATA, TEMP_DATA, L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k] = 1;
IF (A171[V414] != 0) THEN A57[k] = 1;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN A57[k] = 0;
k = k + 1;
NEXT V414;
A18[9..0] = $307;
CALL L458;
STATE IDLE;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
IF (V40 == 0) THEN V42 = 10;
ENDPROC;
PROCEDURE L1198 USES DEVICE_DATA, TEMP_DATA, L458, L1188, L1152;
k = 0;
FOR V415 = 1 TO 5;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 && A169[V416 + 2] == 2 && A169[V416 + 1] > 0) THEN k = k + 1;
NEXT V414;
NEXT V415;
IF (k == 0) THEN PRINT "Warning: ignore CFM1 flag";
IF (k == 0 && V214 && V210) THEN V423 = 1;
IF (k == 0 && V214 && V210) THEN GOTO L1169;
IF (k != 0 && V214 && V423 && V210) THEN GOTO L1169;
IF (k == 0) THEN V423 = 0;
IF (!V422 && !V214 && !V423 && !V210) THEN GOTO L1169;
IF (V424 == 0) THEN PRINT "Warning: Bad POF detected. Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V424 == 0) THEN V422 = 0;
IF (V424 == 0) THEN V214 = 0;
IF (V424 == 0) THEN V423 = 0;
IF (V424 == 0) THEN V210 = 0;
IF (V424 == 0) THEN GOTO L1169;
PRINT "Check Max 10 FPGA backup data ...";
CALL L1188;
V415 = 6;
V418 = 2;
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1200;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1199;
L1200:
A57[k] = 0;
k = k + 1;
L1199:
NEXT V414;
FOR i = 0 TO (128 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1201;
V416 = (V414 * 21) + 20;
j = A170[V414] + A169[V416] + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1202;
L1201:
k = k + 1;
L1202:
NEXT V414;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 1 CYCLES, IDLE;
IF (V40 == 0) THEN PRINT "Warning: Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V40 == 0) THEN V422 = 0;
IF (V40 == 0) THEN V214 = 0;
IF (V40 == 0) THEN V423 = 0;
IF (V40 == 0) THEN V210 = 0;
IF (V40 == 0) THEN i = 128;
NEXT i;
L1169:
ENDPROC;
PROCEDURE L1161 USES DEVICE_DATA, TEMP_DATA, L458, L1150, L1188, L1189;
CALL L1188;
IF (V422 == 0 && V214 == 0 && V423 == 0 && V210 == 0) THEN GOTO L1163;
V419 = 10;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 11;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 12;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1162;
L1163:
PRINT "full-chip erasing Max 10 FPGA device(s) ...";
A18[9..0] = $203;
CALL L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN k = k + 1;
IF (A171[V414] != 0 && (A17[V414] & 8) == 0) THEN k = k + 23;
NEXT V414;
DRSCAN k, A29[k-1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
CALL L1189;
IF (V42 != 0 && V228) THEN print "Warning: Real-time ISP background programming is enabled. Ensure Max 10 device(s) is in usermode if you enable this feature";
L1162:
ENDPROC;
PROCEDURE L1164 USES DEVICE_DATA, TEMP_DATA, L458, L850;
IF (V419 == 10) THEN PRINT "erasing Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 11) THEN PRINT "erasing Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 12) THEN PRINT "erasing Max 10 FPGA UFM block at sector ", V415, " ...";
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1166;
i = V415;
CALL L850;
FOR i = 2 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
A31[k+22..k+3] = $FFFFE;
k = k + 20;
GOTO L1165;
L1166:
A31[k] = 0;
k = k + 1;
L1165:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, 350000 USEC, IDLE;
ENDPROC;
PROCEDURE L1167 USES DEVICE_DATA, TEMP_DATA, L1172, L1150, L1188, L1189, L1161;
CALL L1188;
IF (V419 == -1) THEN GOTO L1171;
V419 = 7;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 8;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 9;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1168;
L1171:
IF (V422 || V214 || V423 || V210) THEN GOTO L1168;
PRINT "programming Max 10 FPGA DSM block ...";
V415 = 0;
V418 = 0;
CALL L1172;
CALL L1189;
IF (V42 == 0) THEN GOTO L1168;
CALL L1161;
V42 = 10;
L1168:
ENDPROC;
PROCEDURE L1177 USES DEVICE_DATA, TEMP_DATA, L458, L1152, L1188, L1189, L1161;
CALL L1188;
V415 = 6;
V418 = 0;
L1195:
CALL L1152;
A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k+31..k] = $6C48A50F; 
IF (A171[V414] != 0) THEN k = k + 32;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN k = k + 1;
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
CALL L1189;
IF (V42 != 0 || V418 == 1) THEN GOTO L1196;
V418 = V418 + 1;
GOTO L1195;
L1196:
IF V42 == 0 THEN GOTO L1228;
CALL L1161;
V42 = 10;
L1228:
ENDPROC;
PROCEDURE L1150 USES DEVICE_DATA, TEMP_DATA, L1188, L1164, L1172, L1155;
FOR V415 = 1 TO 5;
CALL L1188;
V417 = 0;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
i = 0;
IF (V419 == 1 || V419 == 4 || V419 == 7 || V419 == 10) THEN i = 1;
IF (V419 == 2 || V419 == 5 || V419 == 8 || V419 == 11) THEN i = 2;
IF (V419 == 3 || V419 == 6 || V419 == 9 || V419 == 12) THEN i = 3;
IF (A171[V414] != 0 &&
A169[V416 + 2] == i &&
A169[V416 + 1] > 0) THEN i = 4;
IF (i != 4 && A171[V414] != 0) THEN A17[V414] = A17[V414] | 8;
IF (i == 4 && A169[V416 + 1] > V417) THEN V417 = A169[V416 + 1];
NEXT V414;
IF (V417 == 0) THEN GOTO L1151;
FOR V418 = 0 TO (V417 - 16384) STEP 16384;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 &&
(A17[V414] & 8) == 0 &&
V418 >= A169[V416 + 1]) THEN A17[V414] = A17[V414] | 8;
NEXT V414;
IF (V419 == 1 || V419 == 2 || V419 == 3 ||
V419 == 4 || V419 == 5 || V419 == 6) THEN CALL L1155;
IF (V419 == 7 || V419 == 8 || V419 == 9) THEN CALL L1172;
IF (V419 == 10 || V419 == 11 || V419 == 12) THEN CALL L1164;
IF (V42 != 0 || V419 == 10 || V419 == 11 || V419 == 12) THEN V418 = V417;
NEXT V418;
L1151:
IF (V42 != 0) THEN V415 = 5;
NEXT V415;
ENDPROC;
PROCEDURE L1152 USES DEVICE_DATA, TEMP_DATA, L458, L850;
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1154;
V416 = (V414 * 21) + (V415 * 3);
IF (V415 == 6 && V418 == 1) THEN i = A169[V416] + A169[V416 + 1];
IF (V415 == 6 && V418 == 2) THEN i = A169[V416 + 2];
IF (V415 == 6 && V418 != 0) THEN GOTO L1194;
i = A169[V416] + V418;
L1194:
i = i >> 5;
CALL L850;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
GOTO L1153;
L1154:
A31[k] = 0;
k = k + 1;
L1153:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
ENDPROC;
PROCEDURE L1172 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 7 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 8 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 9 && V418 == 0) THEN PRINT "programming Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $2F4;
IF (V415 == 0) THEN A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
FOR i = 0 TO (16384 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1173;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1174;
L1173:
A31[k] = 0;
k = k + 1;
L1174:
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
NEXT i;
ENDPROC;
PROCEDURE L1155 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 1 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 2 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 3 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA UFM block at sector ", V415, " ...";
IF (V419 == 4 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 5 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 6 && V418 == 0) THEN PRINT "verifying Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1157;
A31[k+31..k] = $FFFFFFFF;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1156;
L1157:
A31[k] = 0;
A57[k] = 0;
k = k + 1;
L1156:
NEXT V414;
FOR i = 0 TO (16384 - 32) STEP 32;
IF V74 == 1 THEN GOTO L1158;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1159;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1160;
L1159:
k = k + 1;
L1160:
NEXT V414;
L1158:
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 3 CYCLES, IDLE;
IF (V40 == 0 && (V419 == 1 || V419 == 2 || V419 == 3)) THEN V42 = 9;
IF (V40 == 0 && (V419 == 4 || V419 == 5 || V419 == 6)) THEN V42 = 11;
IF (V42 != 0) THEN i = 16384;
NEXT i;
ENDPROC;
PROCEDURE L1175 USES TEMP_DATA, L1188, L458;
CALL L1188;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT IDLE, 1 CYCLES, 100000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L1176 USES TEMP_DATA, L458;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
, L1150
;
V74 = 1;
V419 = 1;
IF ((V4 == 131072) && !V214 && V42 == 0) THEN CALL L1150;
V419 = 2;
IF ((V4 == 131072) && !V423 && V42 == 0) THEN CALL L1150;
V419 = 3;
IF ((V4 == 131072) && !V210 && V42 == 0) THEN CALL L1150;
IF (V103) THEN V74 = 0;
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF (V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
IF (V4 == 131072) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC 1F38;
