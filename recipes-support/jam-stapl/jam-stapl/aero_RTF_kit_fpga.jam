'Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
'Your use of Altera Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Altera Program License 
'Subscription Agreement, the Altera Quartus Prime License Agreement,
'the Altera MegaCore Function License Agreement, or other 
'applicable license agreement, including, without limitation, 
'that your use is for the sole purpose of programming logic 
'devices manufactured by Altera and sold by Altera or its 
'authorized distributors.  Please refer to the applicable 
'agreement for further details.

'Device #1: 10M08SA - aero_rtf_kit_fpga.pof Thu Oct 27 17:42:54 2016


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 16.0";
NOTE "DATE" "2016/10/27";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "aero_rtf_kit_fpga.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "USERCODE" "00087DCB";
NOTE "CHECKSUM" "0266275E";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "67";
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
DO_INIT_CONFIGURATION OPTIONAL,
L27;
ACTION BLANKCHECK = L17,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION VERIFY = L18,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
L27;
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 131076;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A173[1] = $
0;
INTEGER A169[21] = 
950272, 64, 288, 1, 1146880, 1425408, 1, 475136, 950272, 3, 671744, 278528, 3, 131072, 147456, 3, 131072, 16384, 0, 16384, 0;
INTEGER A170[1] = 
0;
INTEGER A171[1] = 
2572288;
BOOLEAN V424 = 1;
BOOLEAN A172[2572288] = @
0WE10u@@@@3q6aDm@0yl@@@VFKAIOx@@xb8S2Eu_@3kHES47EX3kW3y0@@@w@zz@
tB@Flz@xw@hx@Vku@nD@@jw@jT@Vjy@fj@@i_@bz@Vim@3Ry@lA@lhp@tAz@iM@@
gs@hwz@fY@Fgv@Vg_@ck@Vfy@JQ@@Zw@le@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@NQ@@FK_@e@rq@9HuX_dGR8E6m4W_@bp@XR5hioA@@@
@M@@@z@w@x@@7t@@@lt@@V@F_@P0OWt_@V@V_@H0OWt@@V@@w@_@@@y@@@xt@@t@
t_l@@@K@@@@_v@@z@a@x@@tq@@@lZ@@V@Fv@_@@1I0W0@@@@cv@@z@0@x@@Fo@@@
l3@@V@Vm@f0OWB_@V@Fp@_@@Ly@@@xX@@t@Bzl@@V3@@@@sw@@z@OeHJ00m@@@lT
_@@_@Pm@@30000W4088204210YW009G0W28eB000190GGo1600280100020W00G0
0d0a00o3kX22Sh06E0O04000L5O028WWU6U0140028W04G00z0OGH06K5W1N1ymF
0945030002A5uX_1I004uL54Oi6W1R4OGy0C4B0315K402004G008W0000018020
ec23G015STW1AW02GG14W0000000oQ56eqI18cW44A144Jm6AjK0KQfbgqI1000K
gIBjqB0C8303KA00SW13AbwB100b66W191amJ09C9W1pIa0025W86I8a162A8110
001RO0085WYAs00bMA02DKX6Qe00004QeXU1W1P0OWGB5WYEIG10000A5KW2Ae05
KG10eWM1W11UO0G15Wk121000200080000QlL0100801402G01WIH218X0IG0940
008014G0I80m88600v930000MP500GG00000000e2LKH5g00G406S1W100LKXAgj
6K0300WM32m0e20gH1aGV060WMQ10000000100800e4000Y8034n4Y8W04H4H8Y0
2G01000000600000000_@V0200im2B00000WqjW5MO1Bim2M000L0OGO998H0000
@@F0ipEsPdT0000OdTsT1W1P0O0x_7WQJIG20000_tUsRlzitUx1WzsN1W1ndO0x
j70@@FW00000W500000GQ00Gu06q0W1im2BOHCN5JG2NfO000uV@7000mRlvD000
000XtUxDlzsRUxD00mRlZ0mWj5I000uF@1uRVxjty6W00WtUpRl@ctU@D00000yz
t__R@dN9100I0000@Z4m0U3WtX2a000000ujt0mV@1000000y2000000500ubNyo
BlM0eWA0C8E13000W000yct0000ioAM1G00004PbLNnAhkoLN100kwANTbLi200g
Un00a2800WlzD0MpQhjcr00G406S1W10mQhPjrVd5H20010000VxwxltzNVjh1GN
R200k_wxTzztxwh1ODc4S@z0uxl1000000i200000I440ObLMT0m0D0O0hioAM10
0nEaWF@4000W6qG300600eGDqWUQe1zqJF00WUqJFzeX60CHJ20200ufd0utVzad
U2WG0mJUwfd_rJFzB00000_rl@_hF10Wc0C00040G000VwftysRFvfd0mRlzadUw
9lz4Wu4CWt0uv506G302100GAm0O7QenEsP7DenExOdTqW6QeHu49000_st0000q
G3Q00800WYfX6wG3DqXEw000qH7weZ6n4a0021000m@_70LO400mR0000Uxz0464
s03ysRl7UmWaICG00000_sR_xl@ysRl1W@_pRlzct_xTuE6mV@18E130W600000G
nW00DqGZ306e1032Au1@@F000W9Cn4000000xJCX9cO2JCn400W9Y0mW1VCeh13y
zt0qrW101WhTzrNx_hlsz00000uUtV@zJ@a000050000_@whTzrNxwh18203ITm0
00mrk6WFBMm0J0000006160JCEW1F0SGu090W0xeE83w@@7@300000KvC004H460
0W8EAg5WE60d6bGi0UKVq3rdaG9IL0WlGEM0R2Mo3000Nm6002BW40004X5q2az4
Wm2yBM0i2B8J000A04000000W0W0000000G0aXdOW080GuJFKl530G00_go009_T
000080804ZH2v0amL0F0Ge18Qc4000002W00000801040080fUP0004WMBI0WGQr
qN94kH20W2g0400000KaAW0000004G5K04000W0g050140008Af2800000G1LwMo
0K1500000100e2G000W00Go16001KHUI100000LK50HUam32RyiX4n7OGIN9yWG2
0O_sVG8XmDk200WC710W0q_12NxTe0B10000tM1Ge0G5KmOxaymgSg0WDFEGXs3Z
W10WiUzx9aeF5WxQI8K0OMlH200WIE1002A8d5Ta009TGkE900eKjRmG00qg100E
Zy00mMFd00eL300eQxM9qPO8005d0009mD008_GauDU0aB03VAY40GnfS1O8g0dW
ky0iBa7hGE3LQ0WW1sePIXOJO00000SO73Wky0CMWGpN_0rv3WBCJ0A22mBc810K
5300qhw10WeDTAM0382604B0MlW65q45Wm2e20W@Oo0CqPQK00L1I6WXkK5wb93Y
5m0VV80X5G50uUdl2Y20eA000OSx200nG45f10Wm2Mwps40@z0aC03n5GLo0CyeB
I0WvbZE910WcCzy650GJ6000qE000Y@rfK1O0000BP10WOXF10h_VS0I0G0X0400
4W0018000frQ000G02000000G0200000W0400W3s00000028002787000Ca3002G
_400ZS00WSr9004cy9P1m00WMacb310tlQE8946090W_BgRE100jmDE720EhcxHI
00m8KOa6aAe1B9R00080000W0G00srr00100Z3Q0Oa400mPs74_0410000000082
UbrW_wC00G0W0000zZ30dId08a2000020200000I00000900m0j6009000m81000
Gw30000E@v84000000__R04XpVE24@_T82Wl@60C@_G82nlV70E@z042plF4WOu1
00Wp@F20000000ZujLh2O4700aTRDNhIM0C0D50u7xeWc2000itfTxeI5WXu2SAK
G300wo300sEiceIfY100W2w200260impl20e8OW1Eb653GLC0UQ7fqeO8M0i2Bug
WdeAcA32UofIzD0tp2GOP90L10uPVaoTYXO1mAi0O3Uof0LD00e9D00OUB100nK5
BP00WOgeADA6YfYAmAB0nKDJsK6Or@18DA30000K9l1z@R0002eqeC004G08W0W4
fC8Dg4IaoWAdX1Co1GQLC41LBXJHIoX6a6b1ACK02uI5Y000fGnGqcXGO008C0LI
Zo0OLB0fHnGHy60G04Okz40G00aVl1fHb0800Y4fC8Dg7AFEXp0CenO30000028a
AHg48100qzl1001WAao000090KV0sfA1m81000HuulZ00E@T41uxF300V_RWGu@t
104@@Qemyp7106@_84mzt300k@y04mGS00WN41Gcud000qMq00mXo64ELB00D52d
gbSpF100SkT10WRdD8cATZ1bgqeO8sq4YXpWD0IehTUyaN04FA3JrBHm0@eZY18U
qSU5Q30WgO000DL700KL@FvZ@Gef6mBP18e_GYIT604ydHR650GJK00G88500Y7z
@WGrAM0i2BehuHzOC4UCwO04FQQDdmGH_@0WGrFUKy_PX700mo2400Y7DmYP2100
mAY10WGXI8UK5Z4bXuHfADA3IaAXuH@HY00GyeOOVe08UqM00S@xH808UqG4WtJ7
Fw@f_BH@@C0WTnDCL9EzuduHV000GjC00W_ZQ9UqM0009p5008Uq@Z7z@uHthndb
08000W7tEUqk00014QgJW_50AntWeKT5010GyeQ1Dn1OIbbw@t0WY00HBaGye@7F
Qx2000YkdXC4n8UK600VU6Fwp00W0Y75ZqzD8UK34On04FQWPrpGye46BlMXud60
Grv8@H200m5i10WO1mAi0mWiZ04RkGi200IlF1E100bzZ4KS200uDUz@ZKc0C4LW
JGrP0YAOfaAO8N26Y50hunMY_00GO1B1W1Fj@@400IQ7zlGGIR00W0Iq@V2XLR00
00XkgJu5u4_dA10100PKpGrr6elX1u0l4Y9m00W00W020G000002002880100008
0080W040000W00OzV300W0iFk1022002800000fD03oDm03O90pyAKFs600808C1
30020000W040G008000002GG010W0000080014GBt60001ysU304G0080000002G
00aakD040010GIR0004K100YyDXv@I8FX4IxEXy4a0001H@@60a8@Bo16w3CXn4C
OH0F6Oe28fD00uD00000028We@V3W028S@l18W02Y@t028W0jzRW028W57C0W02o
0y6088W8mJ34HL0iNU21JamB19431C0004e500aT03L_33XV3Wz@J02Q1G@@v01j
08J06Y8870m4W00QD100mO492486Hc1O2L4306YC90DY6104ZeZ00W8Z103Hs0WW
nkX000aP00O200000WMpfbJG000o1y64HX11lR008000iKW9lRW110000jc00001
Y0GBG08I80W2O920G46I0H1E400K171GWW7108Am10UOi000Y4oW00000008hHaw
29gx1Ov@4250gW2SA8Ts260i03e5000Dr00Wg@z000a0t00W0au7wo3G0IK5cg4z
MlKmTC0Tv100OPS8h@7oQi9_RGg@C4ogMP_xKY@C4Sgh1ow4Xp1W840BSVmsyVf4
@P8IMdIyd1XgF0Xi_V8hKbuV200rXY@7Z2qbGkQ2Gg@C4iQBf_pG8h6duV2XiAnv
@6028a200qFS00WGMR1S@@O8hO0k@VCar4uzq04owIZvbGu_F000u5@00G8htcul
4j_3JB2F0qm08rV66kEAty80HgbCK44WH@5weS300gY100yL300GOfHHC00W8O0G
eo6KrrIGLC00Wqw7kFLf_pGmw8100E7S00Gg@CqwJ2XbLKY@60sz1OizeWg00aaF
3n2WLO1Vcul1H8GbvN2WK@P8cAjQop90yVQXxt50GJcK@D8k0d000VBJ008rV6Az
@aKzP8EW408WG02002G0W0400000018000IytWK@D00001800W4@D8r@427Oc8eQ
10m8Ng@9CZ899_RGg@94wV89_dW000Wm0810NJOg@Cq@V89_RGg@9aul1f_p0008
WK@DeVP3kst00000WHI0Izt000G0t4R0008W4fO0000Ig@60080G0000r92WJdJ0
4I1GY@6000c00000I00W4@D00I000WH200WlU50000S_pH8000000yzt082d@S48
_zxG40V@D0O_zXG4YV@E0S_x184cVV80l82000d@U0WO_X1CY300okjTfJOq@G4S
f04kl7d9z3qK000KwknK9t9QISYm99_d000e7@000nh@F0Gsneuh8fx4YtV604mQ
z@xnk0g000cI900GGkkcwl1b_ZKY@C4B0MX5S50GH@G@HAnV3IzdXex@9WV6YfV6
00209_dGg@6qnl19_RG0y6CzZ100W02Yq0000Wf_R0002WK@D08000W0220000W0
0G0o0M20000200HeyC4cmFf_R08W0W2_D0280G1@6W0200104G2H6CTl12800Iyt
00280nhR0WW00G000004GIytWexHAnV3IztWe3JOWXAIyt0040G9_B1000W4@D87
26_@n0G0113IQ044G0200000020G01Cml100G07ut0014G@xRm_I6000W04G000G
IR00G4g200U9mZO8218H_N4@D6HmFfyR0XV3000YH8R00m4W00Z8J2WmC292q8q9
00O2LY1GaD0GO6X6102o600CXen003ef900mkX08jq4Qrq00080W0000080Cyf1G
0006emWq@DmI120024Wc_D00G46a04420D0e27100AmY88AW30225u8045oW0011
T408J300mXn2miz810ar8rV6250gWqBAeWb2IVZW10BmWR1jQ04mE6@XRmNhF05d
000ooIy_Y6WqCBuaGOjI000KKp00G_v9m1008Kzeu000Gx41OoV6YoDXAPh8ItA2
dv10000UBQ0YBWd4Rae@@7WYP000vx9mVa000q89008m@4O200aUm9J@7Yol6WO1
s8q@S0We65Mm3rrTI1PU000iAXm4000eoG000400memXiZ09KUJ0Y5WXFcP8Xx7k
Me508NTz@d00GrWu_H200iGGOC4BW4PIpm86aC@V2oHP02BGk1ByuO3C2HtWMlJ0
00WMw49a2o9lP4Ig06OIm0OR3XW000S9F3kEH0YBGYlVVerQUWgn0006tkNyAY6@
XyGQ10eQC00mhCsDud_7co0ZPpV8Uj40008SmM2000OO900WsO1u3zA0140000WO
8T6000YBJ00028W0040Wy0C8Lr4014G028W00028000190040280000KW00I188W
000G020Zb00WOIk8X0tIuEW4218Xt@D006mTYQ6000200GRtIxF028WuHC3Y@F10
OIx0004AVrWm0U0010mL06KC030OdPIQp0000000QRx1uXSuV020000ajiq@J8C0
6sZ@XLzD008000MHbq@J00GRztyX00pOiZ_400qM5r63ngP0W00000GW9xd004Dq
4@J00mOJzR9avl1000801W0Kql10080gzt0002000W00kz00WQwjTL300005wl1W
0000W0000W80000DB0004V500WAQegorf2L14NaeAjfY4wgSrInLfLLBgIwAMdgK
TbKLrAregogh2LjELmmS000XK1Gd_CiYp6000rf6004oV2C700UE2ZY@V02eQA00
eAL300ls@mg6LioJ894c0000Lc200cnO0ooNYlyLP7sAWgf000QevTV9QZuXm2W1
0ev0008vydCuu@4swFXbQJ8R4CYJ23000Ru1002bQZeZsu0fG0020aKb1OuK0Yiw
X0XD8Nt4_qeYeXDOyf7QaC1hbE0vFnGR0FaKS2lXzGSJU0100G0eQ200G5X000nK
1JGtXu@@@dLG300_@V@@@@B0KG50Aa205H1yW@vWW41C0W04m@DdaxV5f@xH97ay
6mDz@l1008000mcq400w@t00007hu_m9HUCOKBFaoGh0jyPGBl@l1E8000u2JDfX
nAy94T66BgcG4QOqk6357eLSnIa1k100W1i5004v0300W0kk7ZCtauUgDUfoZe3q
gePCm1100WKJvWgGghGb43wAt1O000WmD008a36gdWaoEWP4O3YFehawDe103os_
14001PZO00wN_Tnc9qXI100@81008M5CgO0c2nC8k1p2I@a0rJ074000cAYAaVOY
I9G00000G0816F0020y_@3JCdG1_LKiS2H3mG21Rq@V21OdGP1L00188cJ6SE00K
Yj11vOm7gCyof4fG@000028G009SRGOqIqN03TI@0040WgBt8mx4g4uXVxV8QW7I
lF100011u@00004SG000eUQ_v8X_@D0G00K7u6qcj10020cns08002G080040000
2008002000XS0COxE60424002Ge7R38002108G00000001XEoD040G0080WCnDW0
08Gp0FK903400000104DW1n8OGq0CCAI2xdRGjv6W0G08iW7002AYN00uzV3YEYX
EmDeCc4oItWnqJ8q26MKF10100XSm04W0WQZU0040GN0F4QX47joGP5U42H2z@R0
080X8tJ8Pb42TtWWtD074000g3w0Z89Ad42XvXVtD8S46Y00XuOO8PdMAE2c5AIe
Hc42b91JvC0vZmmsdX01000W00GFJFKo830000BQaXo6be@sA0800U9i7R2@mVO6
CkV204000010Sj13pRmG6N6000kcS00GilIyDl1hpRGBLCG00000008500WZZRfd
I3W100002004000080W7aP8zU340W0yay600G00880000Gu3n4skFXzyDuG@4Q@d
1Hz90H7LHJ3OScgALEWHyOKbJ13PuN10uW8000XM500I0bXS3a8seY2J8aCij9gu
4gvWXAdI0Dg2Gs1C0040G00aGk1Kbl5ODL9n5EC00E8600WfN10WKAseZYDYq3cg
AkAVwAges0KZ10P7mG3AL4oX4jTKHtQ1sg2600000074200K8Bs4AlvXWyc971Fg
Eie_tJ82U9gLJ2DP70z@d0E81WFXg8Z49IQfYfgteqO66otWEpbujUCwiNYuOOuf
hA2wG20m1f000B9400C9j4RvdGi0aaJf4z1_mo_IKtk1dLVo9QFqrp3VylXe06Wr
@J07a1mGxF4BWAn6vHa3Z10208086Yl@10m1500Wcr500030CO_V300O00C0m00O
0030mW@bJ0600J809000000u00O0m10m0000W1Qrs00030O0060m00420411O0O0
0aW0U080m10m0030W13db0C0030S00C0W00G0042W194OG806000m84W7W30m003
00304GC@600O08b03I8W1C0GoA500IAmWG7J8MhAgeinIId174000ilnu@dPWp0J
_0Z_@P000qDQ00WeSn8RKdQtrZzk3v5uVm11000ksSbV6Ai6Z4@PeAOLA5Mbfo39
EPLUpD1000i1vmGCdOKI361TiAsP500aGx7KBHfxI4lkAJvQMmSIqMl417OWwN00
000Y000880800G0O000400W0808010G4004W800801000040400010080100H004
X00182X0200W00040100800jdl18X0W00210202W00023100800H00m0410W0800
00G00000al0C000H80GG2X0W00082Iyt00620004400G8WG0WW0Y00088001G000
20W80000H00G0206004000002W1G0400W0042001G4204W00PfQ01008000Ge004
1H01W420206W000802008002000xi200YmK00Gm1C8W008u060H80000G0W10Gm1
DI80842000000K00W00W8000GG4SW1848080204S030uP3Fset8Ly0y000yH7WX3
m60TfJs1C4E_6Br@pEtx1G00Co13Wlh0ColPLaB70O9tq@J00C1uC@yS8t69p0M6
h9000O1O000Uz5WAj4DGs4QpEX5_hWgL1Gk1CSz5Xf@N4M0300iIiz3zpQXgqSaM
H0R00_4v_@J00i1QkIPc_VEO3K00W8F6sZqoNS0w@F1i200Z4bCHP1WO3mEi1l1G
004H1poB80ssF1i3D0ZVzC00OOe000170UW3C4z56tb6RW@600_KPa@400Rm4Idq
O36000OH7jdqf6m0SW5We95QPrJW3i00WdFP7E3omF1G0040W00G080040G00800
004002080040400108002020Gls6004002080040Yl0C000040020G004V1amrt6
iil120W0W0080WqLydO3YEWXqEHQJsD00sm10007Q00m9nc5EW1im00AGEDO120X
3C600GBp300f3mm@zW1RW18T06ws7C0W3G000A050001009du4wad10040F0O000
800G00W000U0mWjtbuG03U0mWcZb00G00W000000FY6000G00W000000W3810WW1
COvL3000Wi@l10010Qpt0200Gd9R00W0WBsD01000400000G0dtR0000mIbD0000
IM160040OzT38000yhl100W0000S0A00mDk2G4pR4PV2b7OGz@90084OG_J2drWb
db01W0mz@CC8F600G02d7300a0dN@mO@F00EZQiV3erf0WIiX000ebojqIbgLQIJ
@IPfraGBqJXqrwBh9H98bZqgbMfvYJ895ff5jJr2bNg5II9zahbbiKhIYJIbIVhj
aMlaIagLQMxhIPf5bIhqIZMdQ9hAHBfdYMApNhKYI997zB1jI@2dIA5INZ1y100i
KBIhM00000W3m10WmAI3u00Wfm3Ws5UOw@AwOl8DmD0z@d0MH0WOANTZUFKfS04R
GEPBSLCw5XU@08iX72ocgZGU8_@h8000C6V2so302xzXybV_6V3007m300ick00G
U6S6qFFWh70YSmxCYJ8PQ6kudjTESIDB3GWloDCoOO1C000NM6uUo0uaapAFXeb3
CkNd000O89008iHZx@F100VOXBBHDbOqmihnpR0M1000m7jXBBDM10WSYP8s0i3R
u@0_55xG3G45I4skn0000pMs0hOC03HXD0O7wybP8ktg3EewCYP8SPfp8sWmbPph
22mPm907O10000Hem9q9K2X2p010GWGXD020Wm@m6ang1008004020010yBW4400
04Ry3FfQGin607O18dO3YEujSYDO_Vmo8cXm1Ie_SgY8F1QN00jadGKmZ10i09AO
p2Gc1O3C0z@360e0gVtJ00u0qim9q@l4800800G0y0W1ZQdGjz90000f8U30200c
Ji175Rmm@IqQi10278p9s0100WX2JoDo6aJy6n6Z10240000040Wg8C004wP2f7O
G4m5zBk1lDdGJwC00808ZO3s5_XEobW000GGo81R8000S6500WKQXMQqwK0G99Q1
zKqIvMQ9IK29veVfiqQNu4IfGwQzbrjeibQHQrIhqQPfbqgqqYsfwpQBrA9faUob
sQ_gK9n9fI9jqqofNI9IrATfeLPiqYIfLIvG@IiaLbebaIHQruhLAHfbqYqrWMfU
XJu0E00GvaDJe@Vmo8cX8aPBZO3YGcXWvI62000xF6WO3mUktdp8sWm6aEz@4Iib
XubDeH8g__7cjpT2W00Ogq68dL0es0cB_d10S9nv4pGWs0dHi1WA80c0FvaRP8mN
cn2O04uBp0O5bZxLYEwP6RW200oNyWzbEr06mA004cQoQtB0YDGYNz7EPP3olsWO
3Oc110GO3RdJS2pV@SMlC4S0uvIRGqN46l@I0WFLQuFXuUh6Rm0GSli5kSTm1M0Y
GcD0ygW@3dG@@64Ay300G0cAs010G0@3RGFf6004002080040Y@XD8dO3YDE1W0G
0HjRmwn64Ri1P4Rmwn64T0R00Ruo9cXm1CBdO6Y2Uim1a8A@b2Gs000WTk700o9c
X9_13s03G0o6a_FO5FR00m1800GJw500W00WK4S20001w@FXiWD0000Kfm60200O
MO3w@@XFZD0800Ohn6qih4j6RG6n60W00010000007G200X2Znfr6G000AZuDcgc
XOZz8ZO3mOB0yRz3H0BK@@C0800ejS3M6_140205TpGdo6CUy319@30uCgdeDWMd
20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBKUfM
89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9AbaS
ql4qAzBSAfK8TD6m700mIj8jQ10WWWPBZO322UcUdbeRqJuz@0aJC3p4dS6nC4RG
NrdULn@O0h508iX7o0iqUAae@@74qJ04sx3v4ND0u0_SYP82yaxgF1k530HEmye_
LaHi1000hP800KD0Obu3cyN6W0V@9kWwYMc4088mHB@VSlb6jinnzkHuo9KJPo04
00mA0000V2DIQfnA00a2B3n6WTO3@7mleO7Q0YeGYQRD6000Oso6O5Z1OwBi10xG
dlC3nzMTm19@v93MlD0o9cXwoUEZO3Cbs04NMQmG00E3E1u0B0000825EXEXI8KO
680024Ai1G004_7sWCMD00010W0G0080WV1aW000WOZVu9L3YDs0u0B0v4RG@@cb
HC300RuwW3C00m8vpbGu09KVELHad0jB0WMoJ8Aun00MW45i1by3Mo0C0RW1e@Vm
005GzxU2007Wc5EX_@b01001002W70CO_v4gjF100085nR0G00mSYDueO36_NYMZ
D0Gu0PEn64Ay9t8RGEnR4Ri74006p8EXSYD82OaUmsWtcJOwO60040aHi1x2@GRs
IG00088PaWD4000EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj_o
wMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgCMQ
HfqAfSeV9MogIqIIf8jQyrAbeqIQHwQGhKlm9S0700eiU00WsND300aBA00WSYPe
nQ3YORC8000yfC0ApBs6Fz8PP3Onh04ddqG000INcX_@heEYS24EasLlAZO3iXz0
CICsP4pGyo6qKfnXL_Ggq68nM08o1o10J06vEmP4R0e22W0V@le6vYMU60S1I5cd
C0MHvuUbeZUcn6e0aJC3XBNDM10WmKJMxU1Gi1Iyg@m9BRGfj64R0pC8002ROxSY
JOizdpwbXW30FNQ3weFvyUD00yfIbl94tBmXBZ100BwmzbEr06W3i0q@VQm1M00m
h2_FS2z@RGemF0001OgO34001yFi1R6R00G0080W00G08_7sWSYD8su402014rk1
h7RGin6aHi1h7RGq194wEO00G000sm100CtQ00Gz@cbVi1im006vFDO120X3CM6n
C4WiPm6O02GUi_@J00u0KEn60100v3z40002Kmv3000WA5s0G000p2RG@@FyPi10
100RDsW3oberO3o8s004008000000u0I008KOF8000bHy6BkpGinUaHi1v4pG4m8
jLw3jbRG1xFW0G0eeR6wKsWnZV88vV00dHz4j1qwK0G9sG000qIvMQfIrADffVfi
qQIe5wfGwQzbrae4aoHQrIhqSn9aaYqqYsfQXoBr29faUoroIMgL9n9fIflrMIhN
I9IrADhzLfiqYIfLQfHhJjaLbebqJHBbvhLAHfaaZ_bWMfVXJ9b2fhn0_000Mg5f
LB0044S21kO6m100JX703zJLZsI0000Wf70GEnCCuRofzoGi1O7sW1LI@Px4Lq@l
4Wk302xzXIi1EUPC0008u300u@x0JkHYwrBIxy0Ga3GMTW7nnQ30O2G00Wm2700Q
_sljy5oMO3GWl76jSKv4pGqoRtB1dnzI200eHC300nzkTuo9KJPo0400mA0000V2
DUUfnA00a2B3n6WTO3@7mleO7Q0YemuM_b0000Oso6OlB0OYUfpaEXybP8ktg1mm
eKH@mz@@0Yv7WSYP8U3cp8E1ht60DzEM@@6es@1uCu4W3i0000W8Ku4w4AXGXPW0
08Gem6010GuVO3oOr0004002010W00_5G22000YD_XdKD8sO3W3i0aJi1z@R60UL
miWPO_Vmo8cXm1Ie_SgY8F1QN00jadGKmZ10i09AOp2Gc1O3C0z@360e0gVtJ00u
0qim9q@l4800800G0y0W1ZQdGjz90000f8U30200cJi175Rmm@IqQi10278p9sWG
XFv6P3o9UZOZn00120000020mlS5002zCXq3C82uY_5tWtcJOwO60040aHi1x2@G
7vIG00088PaWD4000EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj
_owMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgC
MQHfqAfSeV9MogIqIIf8jQyrAbeqIQHwQGhKlm9S0700eiU00WsND300aBA00WSY
PegVm0180aHS2u8F026wvabDm5l1GSUI31008TP6s3NYylhOSwFp8s0V7B0JbXD0
wIdubVefIZ3hyXKfDGYj0Ga3a30c0CmNZ1LG04uBvHBFS4W3tvk10GxxYxLYUYP6
RW2GEnC4kSrO500cCFvCYP8s0i3Ru@8AY5xG3mOxFdrB3170Ukq6qHVo1JR00uJb
kfJ8ktU3NU300MqXxBTg1C07O1e@@qW3i00WN5yVu4w@tWGXV0002mKn68002uVO
3w9r00W00G0010W0GyFi1v4RGin90402e5R3MFsWOZD8ZO3MFsWe3IeFRm00W000
iX300Okr00Ww@DB@O3o9cXeW7BSWno8cX0aD3s03G0oZr@V2007Wo9s08008dzd0
00GW0FPuXR3A5s0G000p2RG@@FyPi10100RDsWz@berO3o8s004008000000u0I0
08KOC6ct0200GP4lnuvC4Ri7P4R06R1Wdqt82ORkEzXsoD8Xz7G0804cF3TARmun
F4ayF0WpecTt0QTA0e4R8000QfSBjKfQbcqqlKMQD9q2zK8Tj_oQIK2Iv8jQfLQk
u4IIHQQHxKjGvbQXaKIFvQP9BrgauaKfqtQBfrBf4fQbcr_gKMQHfqAjqerfMogI
qIwfeboyrAbeKIoH@IGhqlmfaIXqrO0V000BrYqg50022siCYPmKu1mG@W1040f@
V3y1S0auB3j4dSQlC4RWe3aRGh@aeUl18i1LA@_Xpfv4aP2GOlFaJSr0W3up9cXu
b9lwydd_t00m4W000GDD00yuEmP4pGWl9qJVlbtQ0M0300mRnHB@VSlbc8D3nzMT
uo9KJPo0400mA0000V2DUUfnA00aJC3n6WTO3@7mleO7Q0YeewibP8dO62E0yuUb
ENQ3wzAvmbD00t@NEnC42kqm1M02NEXei730_yNdr6W00882P325EXjPDOgu425s
WCYDOgO3W0G0080W8ZL3o8s020W0V1a0020WOZVe@V3YDs01W3i00Wqf800q@lPf
BRGMmCS@FOP4pGu06KV_LHaR00qkWMoJ8Aun2GsWeW7B0P600s0t@FOP4Rmlx6aJ
i1p2RmyoI00200400q307CgT2rsd0000aYuD0800OEn6SKi13@BHhn608SWCdO34
0006AC9t8RGEnR4Ri7400pY5CXSYD82Oa_5tWtcJOwO60040aHi1x2@G7vIG0008
8PaWD4000EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj_owMKsIj
8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgCMQHfqAfS
eV9MogIqIIf8jQyrAbeqIQHwQGhKlm9S0700eiU00W65D3000cz10WSYP8YjqW00
04XyOjX_Moo6elZ08EFfX000akC3XzoSi1I7sh7bz_C010mKfDGYj0Gyoa30c0Co
TWp8sWSYP8mt@ZQWJ0WHIDVdC0Id_uUbeZUcn6e0aJC3XBNDM10WGAJMal2Gi1Ct
@V29BpGi1CB5M18X_42R0Ri3D0Zj@S6nC4S0uvIRG7z97th10WFLQyDXuUh6Rm0G
Sl9qkFpf6m0SW5W8aP30lAu@m9q@l1X2@0004WfYDG004m@m6qJg10010W002001
WuVO3o9sWOZJ0804GBs600088su4o8sWrZD8w0s00smbJC3X3OMEnC45yOX38HBv
B53k1000xSF00aJC3ry36i16W0aDeOTmgFt00W3G00WcqB000100f8u40002q@V2
P1R0000eIXD0400mim6q@@3V6R0G00mMZDePN9QDsWCYD001002000000EW40025
s3200GP4lnWxC4Ri7P4R06R1WttV82OXw@d10100jbRmomFW0G08CV6wKsWnZV88
vV00dHDxk1qwK0G9sG000qIvMQfIrADffVfiqQIe5wfGwQzbrae4aoHQrIhqSn9a
aYqqYsfQXoBr29faUoroIMgL9n9fIflrMIhNI9IrADhzLfiqYIfLQfHhJjaLbebq
JHBbvhLAHfaaZ_bWMfVXJ9b2fhn0_000Mg5fLB0044CRP4RGGmibHC3O510c9Evq
UP8s0i3R0xmUD89R5xWHYubv100qhD00WubLlTvdd_t00m4W000GDD00KvEmP4pG
Wl9KbTl5@R0M0300mRnHB@VSlbc8D3nzMTuo9KJPo0400mA0000V2DUUfnA00auB
3n6WTO3@7mleO7Q0YeewibP8dO62E0yuUbENQ3wzAvOwD00t@NEnC42kqm1M02NE
Xei730_yNx@6W00882P325EXjPDOgu425sWCYDOgO3W0G0080W8ZL3o8s020W0V1
a0020WOZVe@V3YDs01W3i00Wqf800q@lPP4pGEn6S@FOP4pGu06KV_LHaR00qkWM
oJ8Aun2GsWeWD8b@kI6W10WDmz@3600W2G100@kRGEn6CBi1pBB10800G00GF0Sm
yp9KRV2000GAYt0W00Wv4RmHn6Cyl4j6R0Wm1oSYD8KuJkHsWSYt8sOF800CcHS2
v4RG4m8zWj1lDdmqnC00808ZO3s5_XsibW000GGo81R8000S6500WKQXMQqwK0G9
9Q1zKqIvMQ9IK29veVfiqQNu4IfGwQzbrjeibQHQrIhqQPfbqgqqYsfwpQBrA9fa
UobsQ_gK9n9fI9jqqofNI9IrATfeLPiqYIfLIvG@IiaLbebaIHQruhLAHfbqYqrW
MfUXJu0E00GPz000zPR600GHN200v4pGjgcbHi1WqV0w3bP02009BR0EV7WuQZDE
lGW000G7D18wAfn200a9D35PRC00e7r30097mGS3IdS03nDKD0OafmsrbP60Gv@9
WPc1OUUW1Wx15Q0q1DWD00WQu000z@@90yOem2WDOX@3Xu@0B_F8az000q1N00Oi
VNJBm0IX603z7RQ1904000ce00000002084014w@@10G042080w@t000K0WW00w@
@18WW05EQGX06yUu3000nCC00K8W1000YXE00K_lV000kD000q@l1000CXA00Ks@
L0e52Z60j_@J00OZsB@W1006ax00Gu0m5ir@XXzV0Qu100u0y00GTzOZ3u100TfJ
yvFqW_m1eR0008nuUD0W00Ga3UZ90100TfJG@0300WAUm4000i0C00uZVZpCm0Oa
403ydSc1C4r0pO3K0YQWv_@JG_Y3Go1CCRyp000MJE8XYjPEs03uTt04sGr4b50w
6ouGqP0000W634WvmV600mEe10Wm6C83hg10xG30066A00Gm1U7zbq0000080020
0O3C000_K1Wn_V6000ce10Wy_J0C00GT@F30SWDv06Yx7C00mh44000000002001
0W3O1000010W0G0080W00G0eJY4G0040W00G080040G008000040020800402001
0800Y_@D0G00404002080V1a0000200108002_2mW3LD00W00G080040EW500akY
04TmRz@R0iX3W_@130MOGu0mr@V200BGIBiB000W93O0xk7WP@130QDV@@900i1E
aHm000DfN00000000140000E0200000200408333Q@d10G00W00WU0uWl8JeDo40
00Wq@h10100F4mWA1Ce@V9400400800Gu0900W7H300JDc0001000400000W0000
2000008000WWFAP0000KhZ60080Oh33G00001000004000GWy0C0W00080000008
v1O00G0WPBDW00mO4a64wf1W200kYyXo3aeY030a00q@F30020gF_XlCDuk03Yda
Xe2C000Gmb2FSIG2z@p0100Wt0Ie@@4MEm08000nBdG@@600848d196yC1O3100W
pe000bIhqIZMd20A9HBedYMAtIBHYI897zBbbMx2dGA5INhlik5bjKBIhMQbMBBj
aMbcMqELVMRfM99bqJkqMpNbA9E9LAfbcMEzIAHgMfB5jAZbMKAjIA7wNYbig4ja
KAIh6VjI9AjaMakMqAzBS27m1006m700eqVp000J1F008Fc40E004CNQG000o7WX
uyI62000xF6WO3mEitg3RGwy@J8nM6YNcy9Pa8UPZ10eJdJC31_QSEn64CgnujO0
QoEXeb@FQPKZxjQi1A008Vn1001q0Bp0000uJe0a2B3ppdS2iC4R0sXDyV45nYTe
1Oizdp8cXW30FmXmZxDXQwJESP30mz@5kCsfqR0SW5WuuJ3Em200yvl@XJOyV325
_10080J5RW008W@XDedK3002001040020n@m6aJi1n6d0G08WYzDOzO3YDsWCYDO
zO3YEmiCYJ8dO627mCMO001JDM4v60BG000QNGKmi5Wi1ry36i16WSYPe@Vm00E0
100e0K000400aYWJ0008G@@9a5i1000WA5s0G000p2RG@@FyPi10100RDsWcTber
O3o8s004008000000u0I008KOF8000bHy6J0pGinUaHi1v4pG4m8r@F30200QBtW
bXV01W0GRsCqfi1Z7@GGo@00EZwcR3erf0WIiX000ebojqIag5QIJ@IPfraGBqJX
qrwBh9H98bZqgbMfvYJ895ff5jJr2bNg5II9zahbbiKhIYJIbIVhjaMlaIagLQMx
hIPf5bIhqIZMdQ9hAHBfdYMApNhKYI997zB1jIz2dIA5INZow100iKBIh60088u4
g@OiCYDWYN2G4orXL408Oeanvx0i2U2n6OGwo6diC3n6WTOlaNnF3Xzoi4R1WD_J
8Uvj10J06li4jkJR6n6aJS21__VWlb6jCp0WDGZMcv_@J00vBUuoUZL008v03weC
vqvD0h0000ykxm6gETv4AocPi2000en03DNQi3D09PpGm1LdJC317WTqNF7KQ2O3
6000Vg4tBsXBpGAuCdHi197mG@@Wbqh1d1R0SW500004X2dGtj94AC3400125s08
002@3RG6h600W00G080040ml0IG000GinFyag1n6R0SW5WSYD8wWto9sWv@1BZO3
270keWPeXyk2Gs00Otz18pMEn6KiEOQgN000000001CdO3c5EX_@V000GGfm6y0W
1dlRGzxCyPi1F0O004008000F0Smn@FqQi1008S0900Wde18KuJkHEXSYnW000Ki
nUaHC3u0A0Y06f1yJOnu4MTEXZbD01W0mkmF4cl40G002I690WD4v4RGdm600A9X
Med2jAtIMIYIGA7zLgbMp5dGIAINBVjk5AlKBakMQ9TBBPfMb6jqEb_MR9jA9beN
kqisNbIIE9bKfb6jEzIKIgMIF5jKcbMeKjIIEwN2Bjg4QbKAak6VPL9Ar7W1Un9S
0E00m0V088uwYGsWi_D3h80GEnCCuRoO510IybXO3mEiNc3Rew_@D8nM6YNcyTSa
8UPZ100WQQ008dO62yTuSYD8OKZ10l57IV2HB@Vqoe6tRr0WDGp9s010G0fzcC00
000uJefmoGyy9d0B3n6WTO3@7HHi0WTe3RNwCYP8u0m3SmxuUJec_a3Ns000mz_3
002N6R100011RGSyc10SW500uZ@00W@XDO_K325_XghD8KO340G008040020mKf6
CLi1@3R0200WfYD8su4oLAXOZJ020aE510WrZD8wWqo8EXSYP8SWn0W564CrOHaR
00m2400WsA000Y2cj0aD8d@k00s0dJC3nWF6W000K0500010c5sWfSJe@V36tD10
100b2Rmim6q@l4V6R0050WA1OeqN6Q7s0y4D0v4R00000u090P4RGemRaHy6d1RG
indW3e08dO6Y06f_@P0001mfo6iCy30W0GQp_180007BmGGo2bHi108000WMd20A
n64000jAtIMIgMGBDzLgbMZ4jGNAINBVjc4AXKEakMQ9jBE1fKa6jqEbMKU9j89b
eNkMiqIjIIE9bKzjcbQzIKIgMIRjlKgbMKRi1iqgIeLwfGhoybLbeaaoHVbGhKUn
faaYqrGvU000Br2fh1WWWJeLpn080007m100AUPG@KjxH50uUfp9cX_GJ60S__9t
94RG2jBdPRuLayV50mpG3RGYEf7EFQ600Ri4ajqOZ500GFrVgI5RWtBgy7Wu6U8r
0WJzd1000ZO200IEWXwsl50CpC00mC6000rpRSe16mzW08q0e3FXvW6Ok@@4ISXX
eQKFk1c100C3V00e@VWjqE0i_V2e5R02@7L0aXUn58agg2W_@dXgg2Gs0v000CLx
00Gu2F00LLDLWMYBm00KLL16qIS16aDWD0000m2D045HoXBeII4C4k0CvEmGQ4m0
00U0Y00GG564p13vJmJq5cPYU0e9Z425HeYEI30WWMS1I4p1CHHaGL4pGLLLjRWP
000gAM008m59YY0r_@D05O1GT@PY2i000Lsp0@PcJ03HAm90m6p85C8T73000@xV
00e@V3o0810y@@j0mGsE6K5W190GGF0Iegg0e70C00sO200ime00GIEp46qC17O0
YX7WMUIeu06Q3A10y@@z1PG026a9q3f8aGnFIaWW154n06n000aY8n8ECC000zPD
0H6WSf_030YGEa12100tOT008b06YHWmK2O8612n1Y0CShqt@R00m6D00m_E700Y
DbD3wE0nc_VKh@7MUQ000E0F004Rgqz@d00wIdi3OezU32XVuw_P0W00Oa368nM0
8o1o10J0EwFm000M06000gW0Oy_aXHI0aR03J_dCM03WS3O8g1c10RW6QjqO3K00
G_Y7rjqf6m0M10W_@Deo6T1000s@l1ykR0YDGYN@7cei0GH394R0pQCG0wR8Xm6a
k@V3mEq0Cz@p00WXX2004S0u1EmGqN9dTb10WFLQJ910m6CXBADsW1000MqHIATg
1C07O1Oi_qW3i00WN5S7E3G004q@l1W0080010W0G0080W00G000080040G00808
0020G004040020000000002001040020nN06000020010800Yl0IeGF300040020
G004040010akY0000020W4TmR00RuYEmWm1OZ560mKuf1BG08S09ACSf8cC000Od
x10Wq1Oe2TmWDm000jcFngngco00W3G00WcqB000100vUA300000004e@@400G0y
0W100W000100200u103Y@@100W072Om306CHe400200400000uHq000020040000
00S09004CW1040001000000100Gmq66iHf1400WAno000109QO02000800000W0M
A8Xr3D0000IM160040ud038000yxX100W0000S0A000Zj0mpMFq@F333O0400Wo3
Ce@@40042y_@30W00E6h20100r8OG4ZFW0G08NJ6ACmWL1UOiI3MEmW_@V008000
0IWE5U8tW4w@t00mPKldP0jE50KYD4000jKkbMgKjIJQwNABjc4QXUAakMVPD9A1
fSaMjqADNS29f8DjeTgMeyIjGIAfdSjiabQLISIgKwRjbqwbKYKjIpQVLABjeKQb
MQqwKBPL9Q9zKqIP_QbIKA9veV9eLwNuKIfGwQCWF00WbQHQr200000S0E004uIQ
0700C5U0C_VQP3m0MH0WHdJcz73Gi1O7sGuXzQGkuL30EWFdO6YNcysbVkUP300J
02000rq00G1_0dHC31_cGLszMCg1O1C000l57jy@nzMQqoC7tR5XBdGDb93G000h
0000y9quvb6h00GAiC4R0sXDyV0@YYTe18YYgpMcXSYP8u0mZxLwSfDethaZft00
S@Vv4pG8uI37O18Sv4YoUC0upVj@R020WW8aD8Ku4scrWfYJ8KO3o8sWfYD02010
W00YCMD8ZO38002y5G20800YD_X_@D8sO340Em200IdY00G@@cbHC3v4Rmz@WbHC
3X3OGzvN5Hk10Gx2Q9FXeW7B0P3Y2sWK_xAP0600s0t@FO000A0500yxk1v4Rmim
6Cli40W000100z0m1pFdGjz90000f8U30200cJi175Rmm@IqQi10278p9sWGXFv6
P3o9UZOZzW00mO6n9aJi1H0Zq3s6ysS2J7p00W0WCYDONu7QpM2200019Z4iX000
mPK000If5QfHhJ10bae5qJHBbRfb8H9aaZ_boIhTXJ8b2fhrNMtYoMg5fLBjIhbb
MIhIJBQdgFhjKhaaIw9NQhvhIb4daAbqIJBdU9b8LhqbYMbnIBAbM9b3zBnIMLYM
IA5fLZlMf4bMIBIN3Qbw5EX3u000br300qdjP0005T900aJC3Hib64000JX70zXo
C010WabD0dl3GSUI31008TP62xbvO3aEiNFAxzP020WfIRW4R1Wub970C1Oax0dH
i1v4pGWl@7r0d1_oSqoC4tR2TqpCs05WSYP8SvgnA004PEmXKc0lx6WO3aeK@XJM
sWgvD8s0crOW0aGV2XD8TEn9Cs_pP4pGm1WdBj1TqdSSl600_Kfnt4YxjQi130nz
cGx_CdQ03m1M0YGcD0ygW@3dG@@64Ay300G0cAs010G0@3RGFf6004002080040Y
@XD8dO3YDE1W0G0jOR000WWOZJ8ZO3MFsWe3O30O3NEnC4EWPv4pGKmZ5EW4jalK
Cu6000ipz00GEnCKpFOm6O02GsWgND30u0400e9z200G00GA2E100W0z@dGMm600
00gKO30100CBi1z@@mdn60400irO3QsLYMZD8ZO30G00W000000W3810WGXzW000
K6nRCuE3n6xH6n6aJC3H0ZK@@C0800ejS3M6_14020XvpGdo6CUy319@30uCgPtD
WMd20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBK
UfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9A
baSql4qAzBSAfK8TD6m700mIj8jQ10WWWPBZO3C5U0CqVQP3m0MH0WMYJEjN6YD0
xm6mEiN36oEvLuP00S0F00mJw100nBhUxoFFzl10W90100WQQ00unTWp8cX0VJed
_UB_t0i0600WtYZM_@uUBDQPcZxjYmbJecoa1800WL0000_4QyyIZL0085M6YD0x
m6_FWVHnEq04HHrPBpGEnC4S0unzATkq6qxLonqR00k@lSYP84SfX3i04kS2HPF6
0yvls@D010GG4o64AS2RpQmKn94Ai1P4RmKn601W00G00H6h6aHi14001_281040
0n6@G@@64Ri1207O100fJH00e@Vpo8cXSYDu_Vmo8cXm1Ce_yhY8t00eT1jadGKm
Z5Wi1H1RGA@TbC0300RWx@7C0005W200_TtWSYDOMO3cNM20G00W00WU0uWvdJes
_4000WK4l10100p9sWZYDOuV9QDs00X3av4RGemdSZi1v4lHinUG00OCZu4o9sW8
WHw1R3UREXfZP00G0G6n6iBy3jPB1100WWaH2sG000uCA000fq2jqerf0WIIq2wf
ebojqIae4IoH@IPfrkm9aIXqrwBhRHPBrYqgbMfroIBfLff5jJrdrMgLII9zaBjr
yLfIYJIbIQffbJlaIagLwIHhoOf5bIhaoX_bO9hAHB9bYqgnNhKYIBf5fh1jIz2d
m1S00Wow100wpsC00WYk400o9cX8sI3200Wfm3W_GP6W00Goo6Wpt18EFfX000ak
C3LIRC00WHC100n6SIjwI4PGZ00W7T8004omm0mC3YC0vSoQPdz9100CZP00Gi52
mSy9ZPc100k7Ke1GtC1mXim000eHj100b_FpPK6aqoXO0F000N26ulkUSV0oCWXK
SeDYX4KvE04ypjv5mGMH6ij@jf_mGa1pKlaYML802Pm__hi40VcTG6@7z1pXbeRE
SPoPE1e@@4m6B04LjqO100qJz0q@@9qS40w1mZ_@n00ICM@@gq5W7ET60w@VZU0C
000ubr10Wu6Omdx1m1X9080_i303k9i200mdsxxzEBi20040_TkVD700SP8600W@
x1WXE0Ce@@A000lxctlf70FYRm300m@XZkX2m200040ZBMHC0I0W2mA6WA000000
0Q5400Gb09i@w302WM@dsW_@9108HGF0U0000009YUu6gqHHEzKqI75yaNX4OZ50
0mTm6xlq9YmGKA@7tm@1tuQAjjKOhY002NY9w@eK8FCPFwK6f0TN200yl@@@VnWA
00u@@z@@@l0G1L0eGA0K450AX20LG1W6em@@HyVV6@l7o@vfy@TC@Ndp@p1zVSI@
@6r@jPz@QO@dcs@dnzVPU@F6u@X9_@Na@tbv@RX_VMg@V5x@Lv_@Km@7by@FH@VJ
s@l4_@9f@@Hy@Na@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@
V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z
@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@
@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t
@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@
@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V
@@@t@@@z@@9;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V414 = 0;
INTEGER V415 = 0;
INTEGER V416 = 0;
INTEGER V417 = 0;
INTEGER V418 = 0;
INTEGER V419 = 0;
BOOLEAN V209 = 0;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
BOOLEAN V422 = 0;
BOOLEAN V423 = 0;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN V204 = 0;
BOOLEAN V146 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
ENDDATA;
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
PROCEDURE DO_FORCE_SRAM_DOWNLOAD USES TEMP_DATA;
V344 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_ICB USES TEMP_DATA;
V422 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM1 USES TEMP_DATA;
V423 = 1;
ENDPROC;
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L248,
L1188, L1198, L1161, L1164, L1167, L1172, L1177, L1150, L1155, L1152, L1175, L1176, L1189, L1220,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
IF (V42 == 0) THEN CALL L1188;
IF (V42 != 0 || V2 == 0) THEN GOTO L1149;
V91 = 1;
CALL L1220;
IF (V42 != 0) THEN GOTO L1149;
IF ((V422 || V214 || V423 || V210) && (V102 || V103)) THEN CALL L1198;
IF (V214 && V423 && V210) THEN PRINT "Warning: No active flag for MAX 10 devices";
IF (V214 && V423 && V210) THEN GOTO L1149;
IF ((V42 == 0) && V102) THEN CALL L1161;
IF ((V42 == 0) && V100) THEN CALL L248;
V419 = 0;
IF ((V42 == 0) && V103) THEN CALL L1167;
V419 = 4;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V214) THEN CALL L1150;
V419 = 5;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V423) THEN CALL L1150;
V419 = 6;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V210) THEN CALL L1150;
V419 = -1;
IF ((V42 == 0) && V103) THEN CALL L1167;
IF ((V42 == 0) && V103 && !V422 && !V214 && !V423 && !V210) THEN CALL L1177;
V91 = 0;
CALL L1188;
L1149:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
FOR i = 0 TO V1;
IF (A171[i] != 0) THEN V4 = 131072;
NEXT i;
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
IF (V228 || V204) THEN GOTO L1178;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V199 = V199 + A59[i] - 1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V203 = 1;
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L1178;
BOOLEAN V420[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V420[(V199 - 1)..0], CAPTURE V420[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN GOTO L1186;
GOTO L1180;
L1186:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1185;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1182;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1183;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1184;
L1185:
IF (V420[V201 + 1]) THEN V420[V201 + 2] = V420[V201];
V420[V201 + 1] = 0;
V420[V201] = 0;
GOTO L1181;
L1184:
V420[V201] = 0;
V420[V201 + 1] = 1;
V420[V201 + 2] = 0;
GOTO L1181;
L1183:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 0;
GOTO L1181;
L1182:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 1;
GOTO L1181;
L1181:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L1179;
L1180:
V420[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L1179:
NEXT i;
DRSCAN V199, V420[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L1178:
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
IF (V228 == 0) THEN WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
IF (V228 == 1) THEN WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L1175, L1176
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
CALL L1175;
IF (V42 == 0 && V228 && V344) THEN CALL L1176;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L1220 USES DEVICE_DATA, TEMP_DATA, L1223;
FOR i = 0 to V1;
IF ((A17[i] & 131072) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 131072) == 0 ||
(A17[j] & 4) == 0) THEN GOTO L1221;
A17[j] = A17[j] & ~8;
CALL L1223;
A17[j] = A17[j] | 8;
L1221:
IF (V42 != 0) THEN j = V1;
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1188 USES DEVICE_DATA, TEMP_DATA, L107, L101;
CALL L107;
V4 = 131072;
V3 = 0;
CALL L101;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
IF ((A17[i] & 131072) != 0 && A171[i] == 0) THEN A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
PROCEDURE L1189 USES DEVICE_DATA, TEMP_DATA, L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k] = 1;
IF (A171[V414] != 0) THEN A57[k] = 1;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN A57[k] = 0;
k = k + 1;
NEXT V414;
A18[9..0] = $307;
CALL L458;
STATE IDLE;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
IF (V40 == 0) THEN V42 = 10;
ENDPROC;
PROCEDURE L1198 USES DEVICE_DATA, TEMP_DATA, L458, L1188, L1152;
k = 0;
FOR V415 = 1 TO 5;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 && A169[V416 + 2] == 2 && A169[V416 + 1] > 0) THEN k = k + 1;
NEXT V414;
NEXT V415;
IF (k == 0) THEN PRINT "Warning: ignore CFM1 flag";
IF (k == 0 && V214 && V210) THEN V423 = 1;
IF (k == 0 && V214 && V210) THEN GOTO L1169;
IF (k != 0 && V214 && V423 && V210) THEN GOTO L1169;
IF (k == 0) THEN V423 = 0;
IF (!V422 && !V214 && !V423 && !V210) THEN GOTO L1169;
IF (V424 == 0) THEN PRINT "Warning: Bad POF detected. Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V424 == 0) THEN V422 = 0;
IF (V424 == 0) THEN V214 = 0;
IF (V424 == 0) THEN V423 = 0;
IF (V424 == 0) THEN V210 = 0;
IF (V424 == 0) THEN GOTO L1169;
PRINT "Check Max 10 FPGA backup data ...";
CALL L1188;
V415 = 6;
V418 = 2;
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1200;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1199;
L1200:
A57[k] = 0;
k = k + 1;
L1199:
NEXT V414;
FOR i = 0 TO (128 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1201;
V416 = (V414 * 21) + 20;
j = A170[V414] + A169[V416] + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1202;
L1201:
k = k + 1;
L1202:
NEXT V414;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 1 CYCLES, IDLE;
IF (V40 == 0) THEN PRINT "Warning: Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V40 == 0) THEN V422 = 0;
IF (V40 == 0) THEN V214 = 0;
IF (V40 == 0) THEN V423 = 0;
IF (V40 == 0) THEN V210 = 0;
IF (V40 == 0) THEN i = 128;
NEXT i;
L1169:
ENDPROC;
PROCEDURE L1161 USES DEVICE_DATA, TEMP_DATA, L458, L1150, L1188, L1189;
CALL L1188;
IF (V422 == 0 && V214 == 0 && V423 == 0 && V210 == 0) THEN GOTO L1163;
V419 = 10;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 11;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 12;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1162;
L1163:
PRINT "full-chip erasing Max 10 FPGA device(s) ...";
A18[9..0] = $203;
CALL L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN k = k + 1;
IF (A171[V414] != 0 && (A17[V414] & 8) == 0) THEN k = k + 23;
NEXT V414;
DRSCAN k, A29[k-1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
CALL L1189;
IF (V42 != 0 && V228) THEN print "Warning: Real-time ISP background programming is enabled. Ensure Max 10 device(s) is in usermode if you enable this feature";
L1162:
ENDPROC;
PROCEDURE L1164 USES DEVICE_DATA, TEMP_DATA, L458, L850;
IF (V419 == 10) THEN PRINT "erasing Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 11) THEN PRINT "erasing Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 12) THEN PRINT "erasing Max 10 FPGA UFM block at sector ", V415, " ...";
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1166;
i = V415;
CALL L850;
FOR i = 2 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
A31[k+22..k+3] = $FFFFE;
k = k + 20;
GOTO L1165;
L1166:
A31[k] = 0;
k = k + 1;
L1165:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, 350000 USEC, IDLE;
ENDPROC;
PROCEDURE L1167 USES DEVICE_DATA, TEMP_DATA, L1172, L1150, L1188, L1189, L1161;
CALL L1188;
IF (V419 == -1) THEN GOTO L1171;
V419 = 7;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 8;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 9;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1168;
L1171:
IF (V422 || V214 || V423 || V210) THEN GOTO L1168;
PRINT "programming Max 10 FPGA DSM block ...";
V415 = 0;
V418 = 0;
CALL L1172;
CALL L1189;
IF (V42 == 0) THEN GOTO L1168;
CALL L1161;
V42 = 10;
L1168:
ENDPROC;
PROCEDURE L1177 USES DEVICE_DATA, TEMP_DATA, L458, L1152, L1188, L1189, L1161;
CALL L1188;
V415 = 6;
V418 = 0;
L1195:
CALL L1152;
A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k+31..k] = $6C48A50F; 
IF (A171[V414] != 0) THEN k = k + 32;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN k = k + 1;
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
CALL L1189;
IF (V42 != 0 || V418 == 1) THEN GOTO L1196;
V418 = V418 + 1;
GOTO L1195;
L1196:
IF V42 == 0 THEN GOTO L1228;
CALL L1161;
V42 = 10;
L1228:
ENDPROC;
PROCEDURE L1150 USES DEVICE_DATA, TEMP_DATA, L1188, L1164, L1172, L1155;
FOR V415 = 1 TO 5;
CALL L1188;
V417 = 0;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
i = 0;
IF (V419 == 1 || V419 == 4 || V419 == 7 || V419 == 10) THEN i = 1;
IF (V419 == 2 || V419 == 5 || V419 == 8 || V419 == 11) THEN i = 2;
IF (V419 == 3 || V419 == 6 || V419 == 9 || V419 == 12) THEN i = 3;
IF (A171[V414] != 0 &&
A169[V416 + 2] == i &&
A169[V416 + 1] > 0) THEN i = 4;
IF (i != 4 && A171[V414] != 0) THEN A17[V414] = A17[V414] | 8;
IF (i == 4 && A169[V416 + 1] > V417) THEN V417 = A169[V416 + 1];
NEXT V414;
IF (V417 == 0) THEN GOTO L1151;
FOR V418 = 0 TO (V417 - 16384) STEP 16384;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 &&
(A17[V414] & 8) == 0 &&
V418 >= A169[V416 + 1]) THEN A17[V414] = A17[V414] | 8;
NEXT V414;
IF (V419 == 1 || V419 == 2 || V419 == 3 ||
V419 == 4 || V419 == 5 || V419 == 6) THEN CALL L1155;
IF (V419 == 7 || V419 == 8 || V419 == 9) THEN CALL L1172;
IF (V419 == 10 || V419 == 11 || V419 == 12) THEN CALL L1164;
IF (V42 != 0 || V419 == 10 || V419 == 11 || V419 == 12) THEN V418 = V417;
NEXT V418;
L1151:
IF (V42 != 0) THEN V415 = 5;
NEXT V415;
ENDPROC;
PROCEDURE L1152 USES DEVICE_DATA, TEMP_DATA, L458, L850;
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1154;
V416 = (V414 * 21) + (V415 * 3);
IF (V415 == 6 && V418 == 1) THEN i = A169[V416] + A169[V416 + 1];
IF (V415 == 6 && V418 == 2) THEN i = A169[V416 + 2];
IF (V415 == 6 && V418 != 0) THEN GOTO L1194;
i = A169[V416] + V418;
L1194:
i = i >> 5;
CALL L850;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
GOTO L1153;
L1154:
A31[k] = 0;
k = k + 1;
L1153:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
ENDPROC;
PROCEDURE L1172 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 7 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 8 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 9 && V418 == 0) THEN PRINT "programming Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $2F4;
IF (V415 == 0) THEN A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
FOR i = 0 TO (16384 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1173;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1174;
L1173:
A31[k] = 0;
k = k + 1;
L1174:
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
NEXT i;
ENDPROC;
PROCEDURE L1155 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 1 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 2 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 3 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA UFM block at sector ", V415, " ...";
IF (V419 == 4 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 5 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 6 && V418 == 0) THEN PRINT "verifying Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1157;
A31[k+31..k] = $FFFFFFFF;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1156;
L1157:
A31[k] = 0;
A57[k] = 0;
k = k + 1;
L1156:
NEXT V414;
FOR i = 0 TO (16384 - 32) STEP 32;
IF V74 == 1 THEN GOTO L1158;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1159;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1160;
L1159:
k = k + 1;
L1160:
NEXT V414;
L1158:
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 3 CYCLES, IDLE;
IF (V40 == 0 && (V419 == 1 || V419 == 2 || V419 == 3)) THEN V42 = 9;
IF (V40 == 0 && (V419 == 4 || V419 == 5 || V419 == 6)) THEN V42 = 11;
IF (V42 != 0) THEN i = 16384;
NEXT i;
ENDPROC;
PROCEDURE L1175 USES TEMP_DATA, L1188, L458;
CALL L1188;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT IDLE, 1 CYCLES, 100000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L1176 USES TEMP_DATA, L458;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
, L1150
;
V74 = 1;
V419 = 1;
IF ((V4 == 131072) && !V214 && V42 == 0) THEN CALL L1150;
V419 = 2;
IF ((V4 == 131072) && !V423 && V42 == 0) THEN CALL L1150;
V419 = 3;
IF ((V4 == 131072) && !V210 && V42 == 0) THEN CALL L1150;
IF (V103) THEN V74 = 0;
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF (V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
IF (V4 == 131072) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC C40C;
