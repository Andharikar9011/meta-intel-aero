'Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
'Your use of Altera Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Altera Program License 
'Subscription Agreement, the Altera Quartus Prime License Agreement,
'the Altera MegaCore Function License Agreement, or other 
'applicable license agreement, including, without limitation, 
'that your use is for the sole purpose of programming logic 
'devices manufactured by Altera and sold by Altera or its 
'authorized distributors.  Please refer to the applicable 
'agreement for further details.

'Device #1: 10M08SA - aerofc_fpga.pof Thu Sep 29 10:21:11 2016


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 16.0";
NOTE "DATE" "2016/09/29";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "aerofc_fpga.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "USERCODE" "0008545C";
NOTE "CHECKSUM" "02661472";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "67";
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
DO_INIT_CONFIGURATION OPTIONAL,
L27;
ACTION BLANKCHECK = L17,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION VERIFY = L18,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
L27;
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 131076;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A173[1] = $
0;
INTEGER A169[21] = 
950272, 64, 288, 1, 1146880, 1425408, 1, 475136, 950272, 3, 671744, 278528, 3, 131072, 147456, 3, 131072, 16384, 0, 16384, 0;
INTEGER A170[1] = 
0;
INTEGER A171[1] = 
2572288;
BOOLEAN V424 = 1;
BOOLEAN A172[2572288] = @
0WE10u@@@@3q6aDm@0yl@@@VFKAIOx@@xb8S2Eu_@3kHES47EX3kW3y0@@@w@zz@
tB@Flz@xw@hx@Vku@nD@@jw@jT@Vjy@fj@@i_@bz@Vim@3Ry@lA@lhp@tAz@iM@@
gs@hwz@fY@Fgv@Vg_@ck@Vfy@JQ@@Zw@le@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@NQ@@FK_@e@rq@9HuX_dGR8E6m4W_@bp@XR5hioA@@@
@6@@@J0W0@F_@_@@tz@@@Ri@@t@h@V606ui@@t@d@VC06ur@@t@@zl@@@d408m@@
@lJ@@V@@p@_@@9z@@@RZ@@t@7@l@@V2@@@@6u@@z@0@x@@79303y@L@x@@lq@@@l
3_@V@Fo@H0WW@@V5@@@@Uu@@z@M@78W1Mw@@z@SyhR008703w@d1@@F00000I0WW
80G8408220a010AWWk0004a00197O008W0400080020010S2G208FuAG8G4G00X5
mGL0UW0280140000W04G01N0OG606C7m3@0aGK0CSD03V3y00go_W2yeT03Y7WXO
1O8eWY0G00W0200140000801G00rKO028eWh3CG14G02AW04000000GMhm0bMA0n
4aWG9WWO2sGfb2WIBjKbMA000WILQfbU1W1P0OWI10W3COGfKV900eqm0C89W4U2
8X91COMY40Ge04nG2XCmGG1980008O3300f0KKn60eqI1GeXAqG35000WG3DqB0C
83034Qf0KqH2A0000GfW2KG15eW2A005qA0C8m330Ae0qDG8000G00001000Gxj2
800018W0G0280KAI8094G228X000018W02G21061n008FP0000mAh0qdX100WKbA
ge2L0200eYAKHDLeYQgf0OWKJjrW2O000qAKH5LeYAgG50Kd0m0e200000000ge2
WMQ10000000100800e4000Y8034n4Y8W04H4H8Y02G01000000600000000_@V02
00im2B00000WqjW5MO1Bim2M000L0OGO998H0000@@F0ipEsPdT0000OdTsT1W1P
0O0x_7WQJIG20000_tUsRlzitUx1WzsN1W1ndO0xj70@@FW00000W500000GQ00G
u06q0W1im2BOHPv4JG2NfO000uV@7000mRlvD000000XtUxDlzsRUxD00mRlZ0mW
j5I000uF@1uRVxjty6W00WtUpRl@ctU@D00000yzt__R@dN9100I0000@Z4m0U3W
tX2a000000ujt0mV@1000000y2000000500ubNyoBlM0eWA0C8E13000W000yct0
000ioAM1G00004PbLNnAhkoLN100kwANTbLi200gUn00a2000W@zF0MpQhjcr00G
406S1W10mQhPjrVd5H20010000VxwxltzNVjh1W8B300k_wxTzztxwh1ODc4S@z0
uxl1000000i200000I440ObLMT0m0D0O0hioAM100nEaWF@4000W6qG300600eGD
qWUQe1zqJF00WUqJFzeX60CHZ100W00400upF1Wl_w9Fz40W0WdyqJFvhdUoN000
00uBVzrNV2000000000010020800WFzqRUxjdyqJ0ujtUoJFzatU2GS26mR0ybl0
000000Q000000I540QG3Dq8102Y0mWm1C8S23ACm0QeX600400GnQG3TqW6we3T0
00weZEqH3D2o91X0000u@@1moe200y6000Gw36q_W1P0mmeE9K6W1_tRlZTe2U3m
tLBO0D00000Gn010D2A0300m@_7000m4JO200000mk9cO2JCn4cO200m4J41W15_
OGN36uR0ktzNVjh1040Szrk_wxTzrttqW1k@_@d_910W2000W@TzrNxwhlsr0Sz4
06awW10uwh3Tm000m4000000pWqCW1h3OGu0C0W1XhE83w@@7@300000KvC004H4
600W8EAg5WE60d6bGi0UKVq3rdaG9IL0WlGEM0R2Mo3000Nm6002BW40004X5q2a
z4Wm2yBM0i2B8J000A04000000W0W0000000G0aIdOW080mmJR0010uhA30aut10
00W0W0GC69a3G2N1a0000G020004Q0Yc910000W08000002G001002GgN60001er
Y408afv70086Z7005K18000W0e8L01000008WAe0000001K1A028000GKI5G0000
0W2gqja1e2A00000200G5W000010Wa3C002e2bY200000geA0Yy8X74suP39YFmW
akIu1X40myj@WG2XRS5000PE2001ez34ksxG1M20000kj2WG1WAeWns9vXLvK10R
USW2j761300PzwtJ8HVA0traGe0miUZ4000bS2004KGEBw810IwWSTI00GfQtWX0
0eL300S6v10WjUE10Gh600GrsjIepmG00AE100IWR00GyX8nRy08N06_K490WYJv
2mGK1E1Tv1ON8FMXS6gq0013iHpa2ncm08_632CmWn24Q_o7eEV0SXP2GHG0Un49
0WgO00WULF004jfJn2O0Hm0WO1mw5qeWce04M0L00y7J6WXEJZ20eAGo0CqbgGlC
PGi06ux318i0g00txyLGK00L1000ZRN0086Ye8D004MmIVsc0ul7Wa1O8k0gI6WX
7TH20ClSq9900qafdte00Qo000Ws100GylEbA03000O9B004BC60800E7c10uQUn
1810142G00G0204W000yZh1000180000000180000002G000EO3000008W008S0F
_D_100mgb7d00006o10018V20WHE00Gkw4002J_ai0O00GBIpoX0WxND7a423W40
G@5rDd00WMu6d310dLpz8900O4ACI3I5qWbaD00040000G0800xwQ0W00Wn1D0CI
200uCx32V0Y00000000041loQ0048WX2DG0000t36WJfJ04I1000010100000900
00W400OWM30W4000Oa00008z10000d@S42000000V@D0YmvF71YV@E41mtV30cVV
84Xutl30d@U02Xvt72GCy000mv@71000000WHysgL1CY300okjchL9B06Wc20yZT
KGJ1000sxqkTKf2mGS1E5Ae100Tv100R7MJKfKn000G1T100XaNneY64CmF000sC
C004U_L00513COZsJUeUKI4a80a853FjZKQKC4BG5J5inLyR000GaK00GO1yCmA6
MK602UgBe9A01Fvqe_600kdDii400g24BmIvEbGi0O5M0i1FvqRg64Jb1cV90YfA
Me930nKHLQKC4J5L00MPZfo6mAB00Or@JZo00000fHPGSC9080000W0200W04014
9IPGQKCa8b1@It20WHk4fO82gM2dYaa3J0qY000ACqxhL1qY0GAKCacT8WMO023e
5m84000hQJZw1800000G0oBsWJsD8@_4IZo00010W0000Za0a6r3b7dG8O6qOS20
0288500eVS08DA3oDF10100T0O0I0K@TgI00m81000HmvlZ00E@v81upV300__R0
Xu@N304@_Temut710C@_G8mzd700E@z04WHS00WN4T9kAqEQ0owBXmfK9DA32dIb
RpLnvx2G6V94JrjnWILQKC4Rg12000YXpWasB20NXLyeCCaKE3tZ10AOuuHpP6y7
Y7L2QM70Jr@pn0I0Ln000U9RGzX4bwC00WWz9004vJK450042f04Fw@1XgLi0O5M
0OnZ_sR8810qa600Cgn00WcJS2004Az10WuHhhKbVSyd04FA9HWkHye2jc79ObO0
o@DXuHLCIq7Y7DgqeC8HA6Y7b70a80nZ_GUv60W0000x3Lyemu@7X8UqGyH0URQ0
08UK_ZP4Z_@D000iBS10WmKV89fYY7b1Kd10nZMNm0W5FwOl_3JMzC4FARn2WLKg
55FQNPbj4000000x_nZs5008WGJToqb2Gefq2W008MUjicN0q6bJ0000CgW04YlM
0400WcC00WXfBUKN10W000Ob500CE210WuHnM000GqzC4HD6nZo00uppuHV6004G
yeOakl1nZQW0B6WuH3ChU6Y7TlrtD0000WrX1WGyHALW42n@Xa1O84Vg00gE7vFI
000kWD004B0MX506aT4WOp5YL00Gwz9m900eKVaWYJ000lnBw@PU7j200GYPYcGK
1E1Ld18g0RY58aS9O8M0iY7R9w300X5i406yq_@J008fTq@219j10028H@@94Mj1
0004wgEX9VJ8xa40400aHD3LNRW_66W3yI8c03002002800100008008WW040000
W00W002G0000020Wr@D0002m_u6088008W00000as0C8t03CWb0CphGzOR00W0Wm
4C008000002G0010W00000801140020000W004G0jSR0004mRxD0G010W0000008
010GIws0G004009j100GG5008ot4c@BXy4I8jx4oJG20044z@R0GYyl87OeFm46J
mW51yOWXAWas00Wt0000008W0Y_@D028Wmz@6W0288_V38W02qsl128W0MSm0028
83mR0WW0Y0FDG4L1mUv94CH2l4aGC4m000GWM00Gs1CKvFC4_D0s@F18e50z@d34
q2WC1O8YWS00J020er4000ZHa8GWO4P6W9KHC0O8oa0q8Q40GCYE200YC60C4P30
26x6200Gc10W9000000QDdME110087mRG4564yk10W000mI1cyk1640000qQ2000
4820j01W8X00AWb800HO8145uG00G5S4012U40We070uXn2008I832000000Wi6H
gBaek7Wb@J8K0e2AmfWqDBO0m2CGN000qK300g_dXuJIe@@4000nBI0080ftY8eY
_@z000eOcI94raJGNU0YQgY_SI8aLX0GS37ZPK9_p00mou03q2A22GW164ow@1o_
m@v@0006He00Gg@CqZfJ9_R0@R4W9@ZAnV62ETrGMZDsKgIytWK@P8SVaI58104G
0HowKY@C8Kz18aLNJytWqNPe@V6UsVZy@DWk@1G8hE5xV59_d00MDwO_j9ar42Mz
aK@P8aLZJyFXGMbuyV3014I100w7E00G8hj0k@VCaLC0t@F6oQ2yUQ02P5fMJh8n
V3000I54XAncEJ8hO0W018cSUe000GhY08nVL6u4Z_@Vmmr0Gg@CCSTKkvH0YKBP
e880Z_Z40GLiK@P8M0dIzFX2xN2gY100QnmmzfArV62M7900mvW300IzdXMVI8ii
YIyt0mkF0Jp75K50WayP8M0i2Bup4@D821gC@I0yeT2nKrL3QB100000tkNmJT10
qa9u9CYf2fK@Deq@JIrdXu0I0W02180080102G0000004W0008nV3Izt00004W00
0IytWK@J8SWPYWg500ZSf_dmCYaaul1f_dGe@XauF3X1030WMu_@39nV3IzFX4@D
8rV60001awl1zBRmr_600000CI2Gg@600028xx4IaY10008f_R00W0010009_RmV
z602f08nV30G0I00000900GY@6009000m8100uQF00000E@v84000000__R04XpV
E24@_T82Wl@60C@_G82nlV70E@z042plF4WN4100WpVF0GC@m06n18c@MIydXmzV
8ymYWc2000FVP0x4MK490iOknK5Iyw@awF3nhdF0Gsneuh89sPIyF104mQz@xn0j
g000cI900GGkljx@C9_pGg@6KwFI9_pGi0O5MmL005z3z7f4@D8rV6Yk@d0_P8c_
P0080auV2f_RG7@6aul11mRmqF6000288I30000cwl10080Izt0W000028800000
200183O900008004XopGO2@awl1W020Aut08W005yR0280040G094Pmqz68W008n
V308W04lk10220010000G09nV3Yk7f4@D8rV3c_BX16g8nV30G00bul40000IytW
S8Ou@730144C8f1GG01800000080014m0@60001SWV304G0zll1xBP00002G0100
09j100HeA00ub0FYX84W4vVHytO41@aol14_D00086Xi100J020CYC902p8a8GZG
d00W9K960Hs00XP4Q4088R00m4Y630CWcc000x62WacJOoR300W0020000W0m2w6
0100OW23I@t0B58008G0Qwt000HOG2GG80q0WAS400e0BYWe0E088KWZ0GK83204
4qH0WCD00076B0psZ40GMZK@P8K0e2IleW2MAWzAIzdXW10BmWO1jQ04aGBGn900
G2k5B4L18XA000DE000nP757000Qd80J_75r87Wu2w2Ac1GS16SuVH000Qa4004u
V2C100Ay79YQ40n2WLO1W10KDSkVa000WcRO2n2W5000L6000rzZa5m6WO1mAi0O
x@F1eP40pz75qC2008Spnz7Lg0C4NG2V@_Ghry00KD600mej10WmcZYn00Wx@4WO
zXPu@G0Zb000uze@VLy4Z0y_U2WnI0ILDXNLDuzO3W020Ssl18W0042800000W02
03B100lt60paV200WHc1009wd0x00Wg_z000u5T10Wm0W9f@4OB00q@l700W8oBC
Xm0W1000Dh10WeP29QV3000G000WcL00mKU9yol18080gXF1W000000H5A00aul1
000OO300qlV2zwP0800mR@D0000KI@6apl120Sx100pIV00eTL304000H0000G00
00GWK@D0qM0008_A000LeHLbLN5g2Gk8XgQJ5IqLPLdYhakgMegqLOTLfoLfgAhg
HLANN5KTTg0Zv0002fAaVLy6t0itV2WnS0IuVZa@P008WAJ100bcE0Zy75KD500a
0ljQyJzU64Bm3000H4A00CnV5fxVICJOeHH1O8@eIJYXGfQP@092b230mTLn_dpo
0O0W8Q8@96YtV9c000vFnGf@8v@@@t@YQK406a001H0WG80G4406uW000m@@x@@1
yi@VI@VZGE8vDWRI9840u2Gz@d00uWW8_qgM0jo_daS3CmpV1mE3paYGf00mMYSu
10400j60Sa3OOqb0Og2iJgWXGEoFoX@ZLHtAaJO_u7_MtWU0Ues9IcOEXU0m8Q09
I80Z_@P80x4ABeYUiJ000000Q7dcdJ8873QTEXtwg85w7caE18000v08nFqCq9z3
4008w@VZ0lDeI09_jdXU0ye@@7008SW000WFk1000WWRyJ0000KRs600G08vQ301
0G4Si10010o1m04008v0amTu6qmj1000Wg4m0002000010WG0CBk1nYRmms6Kbi1
00012JBXA1a8hS3G004aGW10G00Y6uXo2OeIWA2Ps08CGul@dGqHCq5X7bL8H25O
q@F6XMWHB5CaG09bjdGe5Uaua1MRL02ov@SjK9VhPwotW6zs88W7wrtWhzDOSV36
uBaCkCWmn3G@@ICOl1NhymR96iNo3Bxh20W000001D0OmCdIypP87uR0400alLUO
KU3I9e20u4NnZTEY00WeZs60X9Rs1C4Fss8600qWf0CqdJh2IIMdLaBo3P2A1018
WYTR10SUJs1C41us8400WJw0Ky7jz@J20MXy_@J00SGIVCOiUL5tnOJVC9qQf4Hs
VISCIyQa4XEA1I100oJ00rClHi0sK7B98000Fh_am5s8vVF0mnBs@V20W3oUoMY8
7mW020mo@v02000042GEfI4vGNe0000eJ000C0ODU3000W10m0060W10C0W7vD08
0000m00m0W151a000070030S0060000O00000000O0060m00O0W1210YW0I080mG
80FW30m0030mLz6040010O00C0u00O0020W0218160W1X0O0000WG0U00u00O0m0
0m00HRQG216m10O8XW7aSf0aKW1XE_VHAAczF97v9XnG4WeS3CuWbYoT300mUK10
0MvFaqSTAtWnw@t0_8D0X7VoSaIKPng0WTM100d5N_3TkLH_nGMQ56fr@0sP500K
@20000W800021010020600010040201G00Y00W042001G0000W0W00080001G008
20W84080HG4G000400W0800010GG000W000G21020440408010086200G00410W2
82002G0K_l1V1a02101I420400WG0000200000620004800GGWG00X0Y0008G001
W00020W80000H00G020600800000203G0400W0082002G4204WGMg600100H000W
W0082H02W4204020100G0200G00Y07C0@o0Gm1C0W028u06004X00000206Gm1GY
G4000000G10WW3O0942Km1F000UcX00GvuOZ3u100uZUewO300wYE00Gs1C4Ekq0
0G00800W3u1009sIa3a300OQX7pw@7fXUg0BW1000FvvxJ60OaKk1CCwVo0W5moD
m01080bJSx@u64Ci100WvOB00q@l1000s0A00ahabz@d30O3K00W8U400Ax@P0al
uz@d00O5We_J60YoIi1O7sWt00W0YeWP0aNGPxd00O7wOwbsme0Gm1W7um31VRSy
@6000uZA00Gf@6000O3C00G5zF30sW1000ce10WYzVEr0600EmkjTQ007O100OG0
000W008080WshD00G0080W00G080040W008K7d1010G0G0080W00G08mjs6000G0
080010GWl0C01000W0080010W0G0_28X_@D010G002001W00G0Wqf80000G00800
Gq1CKiFI5rZ1000Rm10043D0gyFDO3700m23w@FD0W58X3O6jc7Wq1OOMVm00s0d
E03H_3600070100e0A000200400ikT90000z0m100W000100200u103sUNY31Cu1
03okN200100200000y8Q00001002000000EW40026mWbND0000o4z60040u2U380
00Ddl10020klt04000G00000014UV2nwR0000ai2C0080mwx6G000OrU30001000
u0K0006R1WE_t8o_4AFmW_@J00G8mWyIigU5XpQmr@IW0G0esU66a7300801@Z10
0IWp_VOi@700dHzdl1qwK0G9sG000qIvMQfIrADffVfiqQIe5wfGwQzbrae4aoHQ
rIhqSn9aaYqqYsfQXoBr29faUoroIMgL9n9fIflrMIhNI9IrADhzLfiqYIfLQfHh
JjaLbebqJHBbvhLAHfaaZ_bWMfVXJ9b2fhn0_000Mg5fLB00000m1u00GO5f1S00
mKu1mq@airUHe260w@F1iY003mdCxF6WO3o9RXhsrl8t640XDyGhjSUUl74000Mn
F1CLC0Xz_G_oF@Zl10W3u100MJN008UPrJqkQ0m4W9JpGa8Pczp3z@BX@73W0VXC
jWG2yz40i0Z1kdC0E9vCVJ8QP3Ig9puUX100yhG10Wm6Dk@@400yX5ki4rKcC010
0i2000mdGZdNQi200v4pGi1O7sm@1yBAsX6W8Aa8iTZ1000cji1MnO0cm2R0mEqv
BpGSlL7SGrP4pGuoIdHi1XBpcN54WpWJ0Em20000YGXJeJe425c120W0X2R0400X
@XD8ZL300G008040020uN0980008su7UIrWOZD0Em2GEn64TmRv4Rmy@WbHC3X3a
GzvK5HU2qk00Q9FXeW730O1IKmc5WC3m6O0w@7C0G1K@kd00m1ePXJe@V9G00G00
W0u1036rEXQxJ0000IHy60400CdO3EAsWX@berO304EGcJi1200035caRaD8duDY
D6304800000800LHO008qp4IFmW8WLfm@4Y0MYVnDujv4gGd10010P4RmkmFqHk4
40002I69O3100mFq100aIBqIZMd20A9HBedYMAtIBHYI897zBbbMx2dGA5INhlik
5bjKBIhMQbMBBjaMbcMqELVMRfM99bqJkqMpNbA9E9LAfbcMEzIAHgMfB5jAZbMK
AjIA7wNYbig4jaKAIh6VjI9AjaMak6qArBS27m100Ah700e@Vpo8cX8abuc19kf4
fCYD0im2GmSI31008dO6AN6rqqJ89wAoZs0nG80t@UIqqecHi1GZT02xLzcAnup1
T1800cAj1mtL0QhMeZqj40iaREnC4vEmP4R0e22WHwJ6691GqoG6r0Iv6mGWl03W
LKEkN9wedPi1A008Vn3sNwK3O0h00GOg9hTl08s09UrVuabDeqM3YDWP6400XDiT
En9C@zpPzoGm1WdBj1TqdSy_600_KfX@4YxjQi130nzoMuor17O182Ps0mh2_FS2
z@RGemF0001OgO34001yFi198c040G00804@3RGEn64RS201W0YQtWrZD8sO3o8s
WrZD8w0s00smbJC3X3OMEnC45yOX38HK_B5Wi1000xSF00aJC3Jy36i16W0aD8zV
mAUs00W3G00WcqB000100f8u4I@CXlMJ0000Kfm60200OMO3U2LY31CerO3QsLYM
ZD8ZO30G00W000000W3810WGXnuqQ38000bHy6JLpGinUaHi1Oi50QATZ8Wjfss7
QBtWbXV01W0GHtCqfi1x2@GGoaaJC319@00uCgdeDWMd20An6200WMAtIBLgMf9D
zBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA9E9LAzjs
IQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8TD6m700m
Ij8jQ10WWWb8o_k0E00aJC3H8p6MH0WPYJEZO6YD0xm6CexgX10008xb18it7o9k
Q0m1yv4pG4u9tLV2SB60YSWvlln00C1800mQ6200L30M9_W9@b18mt@BpkK088mH
BND0O3qebDEktD2NEXQAJ6W000M1000uJeHIBDM10WKOP8s0i3Ru@0_55xG3G45I
KRhn0000pMs0hOC0vNnSW3F000Wt800GbPOZDO08NQ6YxjwmbxDkiAo8s0ht60z@
dMIl6S6i1m1M0000G4AS2T2bGemCG0048KO3W008yFi1PiQ0002001W00G00@281
1000n6@mJg64Ri1m1M0o9sWe3UBdO3c@7iCYP8SW4gFdg8oJWs50GBv945yO00BG
Y2sWI_1BP06WDm0q@FO0W2e_TF10W3Gp2dG@@IW00W0001m306C@S2rsd0000aYu
D0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYD6304800000800@oL008qp4I
FmW8WBw1R3UREXfZP00G0G6n6iBy3jPB1100WWaH2sG000uCA000fq2jqerf0WII
q2wfebojqIae4IoH@IPfrkm9aIXqrwBhRHPBrYqgbMfroIBfLff5jJrdrMgLII9z
aBjryLfIYJIbIQffbJlaIagLwIHhoOf5bIhaoX_bO9hAHB9bYqgnNhKYIBf5fh1j
Iz2dm1S00Wow100QVrC00Gke000o9cX8sI3200Wfm3WURDEsW7SnR04ddqG000IN
cXmUPEs0fJ@FXCYP8UP3QgqumAV8LQ3aOB04v0v0W903yrOG540ZqdS6nC4jy@5c
p90MHvuUbeZUcn6e0aJC3XBNDM10WmKJMxU1Gi1Iyg@m9BRGfj64R0pC8002ROxS
YJOizdpibXW30FNQ3weFv_bD00yfI6p94tRlXBlHEnC4kSrm1M0w@FDu0B00uL1@
7EX_@D8Ku700W0CLi120W0_7sWUID0080040G00804@3RGEn64RS201W0YQtWrZD
8sO3o8sWrZD8wW42T7C008000Ru000cRD00e_VpoFsWSYP8Aun27OiCYP80PpWDm
04WyOz@d00m1eSYD0200oez90004e@@4o2s0000Gb2R0800WPXDe@@7_Cs0W00Wj
6RmD_IqQi1P4R002004000000S09004AC6dMR0100eCYtuXV6YDsZCYD0Zj0mU@R
41iDz@p0W00WsoD8Xz7G080KqD3TARmunF4ayCPlp00kezdeDWMd20An6200WMAt
IBLgMf9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA
9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8
TD6m700mIj8jQ10WWWPBZO3C5U0Cq@L1LBX9n2WSYPebuaJxbXO3_CDyAA_73RaA
0XDyGbqz6nV2K7902xzXXiV_6V3007m300ick00GyogdCTr0W90JccXDtrDZO62y
z@I_v40daScl94jCp0WDGZQWvuUh8Sv4gfCP0200O5000WFX6FlqO500IXbXO3mE
iX@3uNKi3D0HKKTAz6aji1WVL0cm2R0mEqvBpGSlL3WXHfY_Xx@@14pF0v4pm8uF
dHi1XBRGTWcfs@1uCu4W3i0000W8Ku4w4AXGXPW008Gem6010GuVO3oOr0004002
010W00_5G22000YD_XdKD8sO3W3i0aJi1z@R60ULmiWPO_Vmo8cXm1Ie_SgY8F1Q
N00jadGKmZ10i09AOp2Gc1O3C0z@360e0gVtJ00u0qim9q@l4800800G0y0W1ZQd
Gjz90000f8U30200cJi175Rmm@IqQi10278p9sWGXFv6P3o9UZOZn00120000020
mlS5002zCXq3C82uSIDGYtcJOwO60040aHi1x2@G7vIG00088PaWD4000EZ200GA
jGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj_owMKsIj8jQfLQjiqIQLQQHx
KzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgCMQHfqAfSeV9MogIqIIf8jQyr
AbeqIQHwQGhKlm9S0700eiU00WsND300aBA00WSYP8YjqW000OAy08OedJMs0Ny6
0nv9D400WqbPeIQZp8sWO3aEitDQgqumAV8LQ3aOB04lCv0W903yruSYPecUWp8c
XebbE2mXZet00ezTnzAH7zCZDG18dO62NkQi2003xdS6nC4R0sXDyV45nYTe1Oiz
dpwbXW30FNQ3weFvWID00yfINf94tRrO360YxDXszPEr06W3i04XCR0uL1@7EX_@
D8Ku700W0CLi120W0_7sWUID0080040G00804@3RGEn64RS201W0QnsWrZD8sO3o
8sWrZD8wW4wp6C008000Ru000cRD00e_VpoFsWSYP8Aun27OiCYP80PpWDm04WyO
z@d00m1eSYD0200IHm90004e@@4o2s0000Gb2R0800WPXDe@@7_Cs0W00Wj6RGpk
IqQi1P4R002004000000S09004AC63pR0100eCYtOgQ6YDsZCYD0Zj0mlrF41iGz
@p0W00WsoDOPu7G0804cF3TARmunF4ayF0WpecTt0QTA0e4R8000QfSBjKfQbcqq
lKMQD9q2zK8Tj_oQIK2Iv8jQfLQku4IIHQQHxKjGvbQXaKIFvQP9BrgauaKfqtQB
frBf4fQbcr_gKMQHfqAjqerfMogIqIwfeboyrAbeKIoH@IGhqlmfaIXqrO0V000B
rYqg50022cjCYDmKu1mG@fbD03O510Q9EvqUP8s0i3R0xmUD8dug107mdJC3nBJU
rvFFzl10W90100WQQ00unTWp8cX0VJed_UBlr0i0600WtYZM_@uUBDHQ6YxjwmbJ
ecoa1800WL0000_4QyyIZL008dO6YD0xm6_FWVHnEq04HHrPBpGEnC4S0unzATkq
6qxLoXBR00k@lSYP84SfX3i04kS2HPF60yvlEhD010GG4o64AS2RpQmKn94Ai1P4
RmKn601W00G00H6h6aHi14001_2810400n6@G@@64Ri1207O100fJH00e@VpINsW
iWPu_Vmo8cXm1Ce_yhY8t00eT1jadGKmZ5Wi1H1FM0oC00i1k@Vmo8sWVtD8dO3c
5sWvbb00400800e70EOKx4gjF100085nR0G00mSYDueO36_NYMZD0Gu0PEn68000
CKOIkHsWSYt8sOF800c5BO2v4RG4m8zBk1lDdmqnC00808ZO3s5_XEobW000GGo8
1R8000S6500WKQXMQqwK0G99Q1zKqIvMQ9IK29veVfiqQNu4IfGwQzbrjeibQHQr
IhqQPfbqgqqYsfwpQBrA9faUobsQ_gK9n9fI9jqqofNI9IrATfeLPiqYIfLIvG@I
iaLbebaIHQruhLAHfbqYqrWMfUXJu0E00GPz000DAQ6000Cx300v4pG4Rf110082
PsQ3riabDGV71GSUI31008TP62xbvO3aEiNFAxzP020WfIRW4R1Wub970C1Oax0d
Hi1v4pGWl@7r0d00ZaQ_EP0aEznzAH7zCZDG18dO62NkQi200XKci8V5WO3Ok@@4
IMcXO3OMAi2G2z94s0sO7Q06R@vCYP8u0mpbsWEwJEkN300VgquR2nzMDsW1WuUJ
eTVcJDW1u0B0H8p60ULm@XJe@V325_10080J5RW008W@XDedK3002001040020n@
m6aJi1n6d0G08WMiD000GGin9aHi1h7RGq1i10iXBdO627miSYP8Aun27GYMoNA6
S3000svU008dO6gv7CO3C018RGnwWLVk1007W000DfN000200IHm90004e@@4o2s
0000Gb2R0800WPXDe@@7_Cs0W00Wj6RGpkIqQi1P4R002004000000S09004Ai74
00Wo8UZ1tP8sOFo8s0Cs20ll@G4m2r@F30200QBtWbXV01W0GO_Cqfi1Z7@GGo@0
0EZQsT3erf0WIiX000ebojqIbgLQIJ@IPfraGBqJXqrwBh9H98bZqgbMfvYJ895f
f5jJr2bNg5II9zahbbiKhIYJIbIVhjaMlaIagLQMxhIPf5bIhqIZMdQ9hAHBfdYM
ApNhKYI997zB1jI@2dIA5INZ1y100iKBIhM0088Oso8sWWWPBZO6mA20CJSofzoG
i1O7s0sXzQGEnL30EWFdO6YNcysbVUwV300J02000rq00Gbx0dHC31_cGLszMyl1
O1C000l57jy@nzMQYqC4tRrXBdGDb93G000h0000y9quvb6h00GYlC4R0sXDyV0@
YYTe18YYgpMcXSYP8u0mZxLwSfDethaZft00S@Vv4pG8uI37O18Sv4YoUC0upVj@
R020WW8aD8Ku4scrWfYJ8KO3o8sWfYD02010W00YCMD8ZO38002y5G20800YD_X_
@D8sO340Em200IdY00G@@cbHC3v4Rmz@WbHC3X3OGzvN5Hk10Gx2Q9FXeW7B0P3Y
2sWK_xAP0600s0t@FO000A0500yxk1v4Rmim6Cli40W000100z0m1pFdGjz90000
f8U30200cJi175Rmm@IqQi10278p9sWGXFv6P3o9UZOZzW00mO6n9aJi1H0Zq3s6
ysS2J7p00W0WCYDONu7QpM2200019Z4iX000mPK000If5QfHhJ10bae5qJHBbRfb
8H9aaZ_boIhTXJ8b2fhrNMtYoMg5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhvhIb4d
aAbqIJBdU9b8LhqbYMbnIBAbM9b3zBnIMLYMIA5fLZlMf4bMIBIN3Qbw5EX3u000
br300qdjP0005T900aJC3Hib64000JX70zXoC010WabD0dl3GSUI31008TP62gCP
i000n68D00e7r30097mGS3IdS03nDKD0OafmsrbP60Gv@9WPc1OUUW1Wx15Q0q1D
WD00WQu000z@@90yOem2WDOX@3Xu@0B_F8az000q1N00OiVNJBm0IX603z7RQ190
4000ce00000002084014w@@10G042080w@t000K0WW00w@@18WW05EQGX06yUu30
00nCC00K8W1000YXE00K_lV000kD000q@l1000CXA00Ks@L0e52Z60j_@J00OZsB
@W1006ax00Gu0m5ir@XXzV0Qu100u0y00GTzOZ3u100TfJyvFqW_m1eR0008nuUD
0W00Ga3UZ90100TfJG@0300WAUm4000i0C00uZVZpCm0Oa403ydSc1C4r0pO3K0Y
QWv_@JG_Y3Go1C4siq97aGnsC7RW1ykR02ReQYo20T3PS8wC0000GZ12m8wF300O
7q00GO36aXLr0WTe100335008u0lZ_IQ00000400100i16000Vg0mO@F3000Jq00
GU@90600ek@d10EmcS03nz3600uL220000000010W00m1i0000W00G080040G008
0q9H280020G00804002080040000200104002010W00400H@@6080020200104Wl
0I000010W004001V1OmXg600G0080400207m200INH0YEuj_@D0sm1G@@W10BC8S
0uw@F10W58f5s5000ma1CWTt3mi@W10jcl@@400s07o8O00WcqB0000000W02000
07010000010020aXX1j@p00800G00GF0SmNa9q6P2000Gw@r0W00W72OGb06q@l4
2002004008SW400mZe10Wf6J00W0000200000G00001000004000Gm7bC0000grH
30040irX18000W00000020008GU060G0004000000ay0C0080mib6G00OC2I32zq
0G100NH_Gv1IKHW10I00w@d10010r7@mNc6SNW1nJoGK160008uIX7E98X_@PW00
0mR09q@V2B7O0400WubJe@V30042apW43Uc0iX000mPK00WIfLQfHhJ10bae5qJH
BbRfb8H9aaZ_boIhTXJ8b2fhrNMtYoMg5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhv
hIb4daAbqIJBdU9b8LhqbYMbnIBAbM9b3zBnIMLYMIA5fLZlMf4bMIBINBQb_5EX
3u0003u300KwlP00WfW700a7J207002cBD8000v3mGSU93100Wz73Gi1O7sRrXD8
T_@9aOB3nBJ_aCI4lin00qfp9cX0VDEdO326rOyMC0DPdGqo@7jCgnzMDs0500al
u00W0QWbP0000y9K0IXbXvvJE1M6YD0xm6_FYYOnEq0Cs_pP4pGm1W7uGunzcGDz
97ki10u_@2N6xKwD0Em2GSyf17O100_yt@m9C_l1X2@0004WfYDG004m@m6qJg10
010W002001WuVO3o9sWOZJ0804Gn_6iUi1n6RG6n6iUi1H7OM6n9aJC3X3O6BC0W
Wf6BYS3W58000jB8AOs2GsWQ_13s03GEnCq@FO007W000K0A000200IHm90004e@
@4o2s0000Gb2R0800WPXDe@@7_Cs0W00Wj6RGpkIqQi1P4R002004000000S0900
4Ai7400Wo8UZ9WP8sOFo8sWSYP82Oaw@d10100jbRmomFW0G0eDR6wKsWnZV88vV
00dHTpj1qwK0G9sG000qIvMQ9Ir2DffVfiqQIe5wfGwQzbrae4aoHQrIhqSn9aaY
qqYsfQXoBr29faUoroIMgL9n9fIflrMIhNI9IrADhzLfiqYIfLQfHhJjaLbebqJH
BbvhLAHfaaZ_bWMfUXJ9b2fhHPz000Mg5fL30044S2rVCM6n6GnB182vwmA204CK
ouyT0M1FXO3C8TPZJMcXO3mEiNohudXmUPMYj0m6@94lys0W90ZNMYMtfDZO3o9E
X0V@FmtIZMcP0m6eHBpS@@90Wy5FSPlnA00aSW1TKcSwy6WL0000UtTO3LdkS25P
pCM1000qOWXcBDsX6WaiP8uWgp9cXW3mEwhd3AD1i1300WFLYx5xmbP85Scp8sWa
3Oe@VmIwrWpWD0Em20000YGXJexs425c120W0X2R0400X@XD8ZL300G008040020
uN0980008su7UIrWOZD0Em2GEn64TmRv4Rmy@WbHi1X30NKmCqGUN18R00ix_0aP
BdO3AM7CDrB0000000W0cJi1p2dG@@F0008eKO3U0mWptDe_T6_CsW70C0020040
0W70Euu@7QDs0004EW400mJq04Ay9t8dGEnOG000AsOFo8c1S050H0Zq0_9iOS2h
Edmno6W0G0ONu72pN2080019Z40m6YSYDeJO300baGBqJXMbR9B9H98bZ_ArIhvY
J895fhblMt2bNg5INBjakbbiKhIZMQdIVhjaMbaIqBNQMxhI99daIgqIZMdU9A9L
BfdYMApIBKgM997zBXbML2jIA5INZlig4bw3m0lu4E0700OWF044STH8RGM@T108
09Zu4007v51hqO510IybXO3mUFyA_bVimUf20V7R8nOdOB3nBJ_EEI4lin000GDD
00aJC31_ESEn64Cgn0WtY3fFXeb@FQPKZxjQ0m6ev4RW008WqUJ600000y9qKOP8
U_aJWbXO3mEiX@Ze8M0mEqXjBT6nC4S0u1EuTSl9KJVoXBR000uU@100XBZj000W
WWD8EUp00Em200ynV00m@m6CVg1X2@Grr64Ai1208004020010OgK3cAsW@XD010
0mKn64RS2vAbGin9010IdY00mwn64TGQP4dGEnC4EmO0m232cQi8oD00O1200GR5
000H1pM0o6apVN00RWp9cXOm73G000AW200W00p2RmKk94uP2f0dGfm6CBi1z@Bn
dn60G10eI06AzbXsXD0FH3GEn600000EG2G6n64Ay6P4lnPm64Ry9u0A0o9cX8WH
wwq7ELsWbXV0040IRsF0100uO162IMeCYD001000qwK0G9sW000eLvMoIIr2Qffl
IjqQae5wIHwQvhraG9aoXqrIBfTn98bYqebsfqYoBf59f4zorYbMgLIo9faglriK
hNYIIrIQhzbIjqYQZDWbML2jIF5QLclig4baKEwh4QboBEbaKak6At300OfM8TD0
44S2jQE60100u0E00GnBZGkE0mA2zXcC0uyzJkJ8sW4QNUuabP8s0i10Ri4ajqOZ
500GFr7@jqf6mGS3I300O4J00GS3330cP600O6300WwvDEq03uUG04Q0qXdmSG3C
7UovHrGE00WPu300z@3ibs1Wr@J0jO3Gu@e2WCqBk0XKLL0q@@CKLL0o68700WfQ
7002Nu10eggf2qIS160WggAmWMYBmWi1i10000Me1We8IES1LIYWXm5W9t16IZ06
00m3G4002gmWOEO8V2UYkmCJq30DPaGe82LqHQ004qYBGYOEW9AY4gYO6ggggT3C
300GLn2001k8HK4es@l1e0B0gxFJKW500eoU6uFpS2O8I1E10sO6fW1fxO000uV@
300z@RG6090W@@l506osnWg0C8102w1G2LL50z0W10m6J00W56500IoPcmWc9u03
GCy0qoJ257mGRG90W@@lF832GmWCXU85X4A_HY44CeW86m8600WK496nXX100eFh
18o0aBr7O0G4oXCG800u6h300f4mGC24cI03n8G8EG4WXRb__V300se100stv00G
ifiPGt18sq@ZQz@lqJ300m1u10WOJbk@@40GNwaT03jtRG8y3NtF30400ZSm09s2
0HEGE0O2mH@1600m2m000G540J_dCCI2WS3OOo@an2O0aR03HDmC0O3q0@b6RW20
0oNyu_bEr06mA00q@l1LseB000m_@DWtT3Gi1Iyw@m4b50AQ8XO3OMZ12GV394sW
qz@R0sX6Wf@V600CCK00WW30Fm16Y_AvihC00yfIRA900sW9SHfn6C000mYEIIfJ
DW1u0B0Zrd6SW500ygWxmP020WW_@D04001080040200104002000010W0020010
10G0020W0W00G000000000G0080W00G08_2m0000G0080010Gy5G25wP000W00G0
020W0W0080WqL40000G00ae3U30O3Nq164E0Rim00c2FDO120X38HXXB5na1000x
SF00aE03Le36i1600ery9MDMrK600S0200qaU1008008tJP0000000W0z@d0002W
70C000400800G000F0OGy@F0004uG03U0mW92b00G00W000000FY6000G00W0000
00W3810WW1C0W000800000080002csmWDADW000K9M600808H33G00001000004m
I19iUe1000GoAm00W00@4O0100WVFC0004000W3G100Oi50UswX_@POO03W000KU
W1z@d00WGWt@V0040mnOL0800e613YOy14020vQoGX16iAm3ZLQmo16q@@300100
0G2qfm3v6aG@@600EZwzC3erf0WIiX000ebojqIbgLQIJ@IPfraGBqJXqrwBh9H9
8bZqgbMfvYJ895ff5jJr2bNg5II9zahbbiKhIYJIbIVhjaMlaIagLQMxhIPf5bIh
qIZMdQ9hAHBfdYMApNhKYI997zB1jI@2dIA5INZ1y100iKBIhM00000W3m10W0NI
3u00Wfm3Wn@JBR06mA20CwSoi@O0YD0xm62FiN3o5lQ0m1yv4pGyoatkyprBR00O
2G000ec600Am7uCYP8mt4goktYHD0BW100ujueb@FktIZMcvuUh8Sv4gfCP0200O
5000WFX6FlqO500IXbXO3mEiX@3uNKi3D0HKKTsoCaJC3170USlIdBj1zUbSCz60
Wx@BdO621NQu0B0XBdGKsZ10V_hzV3G0044Xi1X2dmsi6CLS2X2RG6n6CLi1G080
040Gang1P4R010GWl0I0010GinFq@l1n6RW0m1M00GwK400w@tiCYP8dO3k@7iCY
P8S03gF@g8oD00QNGBv945yO18RGKm6aoVN93m00m6u_@1300G1e00WVtD8dO3c5
sWvbb00400800e70EO_v4gjF100085nR0G00mSYDueO36_NYMZD0Gu0PEn64Ay9t
8RGEnR4Ri74006p8EXSYD82OaUmsWtcJOwO60040aHi1x2@GRsIG00088PaWD400
0EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8Tj_owMKsIj8jQfLQji
qIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKqgCMQHfqAfSeV9MogIq
IIf8jQyrAbeqIQHwQGhKlm9S0700eiU00W_iD300eeB10WSYP8YjqW000OAy0eFK
c1800aii1uyT0YpJQ8000fBpGOlC7RWqXzwHPlF3G00CLQ3aOB04lCv0W90ZS7uC
YD8dO62yz@e6uCmNcZMcXuUJeZUcn6e0aJC3XBNDM10W8p1Eao4uTt04RW4bwFSo
o6KDl1n6mi634W4wJ8i1fp9EXnsVEZO62E0ySfDeZ_aZxr00mdAD_cGSlLZDO08k
t4QtdvK3O0Em2G4oi1WN5yVu4w@tWGXV0002mKn68002uVO3w9r00W00G0010W0G
yFi1v4RGin90402e5R300044RS2P4Rmwn64T0R00Ruo9cXm1CBdO6Y2Uim1aebyb
Y1t000WTk700o9cXQ_13s03G0o6KzgP007W000DfN000200IHm90004e@@4o2s00
00Gb2R0800WPXDe@@7_Cs0W00Wj6RGpkIqQi1P4R002004000000S09004Ai7400
Wo8UZ1tP8sOFo8sWSYP82Oaw@d10100jbRmomFW0G08CV6wKsWnZV88vV00dHDxk
1qwK0G9sG000qIvMQfIrADffVfiqQIe5wfGwQzbrae4aoHQrIhqSn9aaYqqYsfQX
oBr29faUoroIMgL9n9fIflrMIhNI9IrADhzLfiqYIfLQfHhJjaLbebqJHBbvhLAH
faaZ_bWMfVXJ9b2fhn0_000Mg5fLB0044CRP4RWfm3WX_JBR06mA20qISofzoGi1
O7s0sXzQGEnL30EWFdO6YNcysbVUwV300J02000rq00mZx0dHC31_cGFzzMyl1O1
C000l57jy@nzMQqoC7tR5XBdGDb93G000h0000y9quvb6h00GAiC4R0sXDyV0@YY
Te18YYgpMcXSYP8u0mZxLwSfDethaZft00S@Vv4pG8uI37O18Sv4YoUC0upVj@R0
20WW8aD8Ku4scrWfYJ8KO3o8sWfYD02010W00YCMD8ZO38002y5G20800YD_X_@D
8sO340Em200IdY00G@@cbHC3v4Rmz@WbHC3X3OGzvN5Hk10Gx2Q9FXeW7B0P3Y2s
WK_xAP0600s0t@FO000A0500yxk1v4Rmim6Cli40W000100z0m1pFdGjz90000f8
U30200cJi175Rmm@IqQi10278p9sWGXFv6P3o9UZOZzW00mO6n9aJi1H0Zq3s6ys
S2J7p00W0WCYDONu7QpM2200019Z4iX000mPK000If5QfHhJ10bae5qJHBbRfb8H
9aaZ_boIhTXJ8b2fhrNMtYoMg5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhvhIb4daA
bqIJBdU9b8LhqbYMbnIBAbM9b3zBnIMLYMIA5fLZlMf4bMIBIN3Qbw5EX3u000br
300qdjP0005T900aJC3Hib64000JX70zXoC010WabD0dl3GSUI31008TP6gasO00
0ZO200YDOO0m8J000pI3AX83GEaX@@QFG000pO600YbOuG3O00k7Ke1G7o2p1DOJ
hJFq@VWO0F0008u6ulkUSV0oCWXn_lDY13oCWX86qDh83ss@sSYO8o0a3Pu@O9_F
8Z@Z_u@uLe50inIe@IZDM000zKV@@d00D7f70Fw@7300W46300w@Nbk0s00dEJ@@
Rq3G2yQT0YRW10yvUfjc0002WE0Cu@ACyvUV74G2Rdo000080yxS_TE0_oQ3@F70
RQbG706q@F6U@ctT300q3W7nDuX@17W_@n005Wr9q6SzL57k_GN064606Q520g48
XG4aGhG0G@@d000GAhM9w1u100GYG7002tuaEAofd2Owe8dyAamCin200uEm200r
_@SY8C4bo@nDyVmDk6V8aZyV200eRg100n4zVKAXdoPQRlBnq@vu@@@t@ypU406a
001H0WG80G4408120K0106Wm@@FyV@5@l@n@vdy@zB@NVp@p@yVyH@@_q@jNz@wN
@dUs@dlzVvT@F_t@X7_@tZ@tTv@RV_Vsf@Vzw@Lt_@ql@7Ty@FF@Vpr@lyz@9d@@
nx@NS@@3@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@
@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@
z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@
@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@
t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@
@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@x
D0;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V414 = 0;
INTEGER V415 = 0;
INTEGER V416 = 0;
INTEGER V417 = 0;
INTEGER V418 = 0;
INTEGER V419 = 0;
BOOLEAN V209 = 0;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
BOOLEAN V422 = 0;
BOOLEAN V423 = 0;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN V204 = 0;
BOOLEAN V146 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
ENDDATA;
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
PROCEDURE DO_FORCE_SRAM_DOWNLOAD USES TEMP_DATA;
V344 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_ICB USES TEMP_DATA;
V422 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM1 USES TEMP_DATA;
V423 = 1;
ENDPROC;
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L248,
L1188, L1198, L1161, L1164, L1167, L1172, L1177, L1150, L1155, L1152, L1175, L1176, L1189, L1220,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
IF (V42 == 0) THEN CALL L1188;
IF (V42 != 0 || V2 == 0) THEN GOTO L1149;
V91 = 1;
CALL L1220;
IF (V42 != 0) THEN GOTO L1149;
IF ((V422 || V214 || V423 || V210) && (V102 || V103)) THEN CALL L1198;
IF (V214 && V423 && V210) THEN PRINT "Warning: No active flag for MAX 10 devices";
IF (V214 && V423 && V210) THEN GOTO L1149;
IF ((V42 == 0) && V102) THEN CALL L1161;
IF ((V42 == 0) && V100) THEN CALL L248;
V419 = 0;
IF ((V42 == 0) && V103) THEN CALL L1167;
V419 = 4;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V214) THEN CALL L1150;
V419 = 5;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V423) THEN CALL L1150;
V419 = 6;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V210) THEN CALL L1150;
V419 = -1;
IF ((V42 == 0) && V103) THEN CALL L1167;
IF ((V42 == 0) && V103 && !V422 && !V214 && !V423 && !V210) THEN CALL L1177;
V91 = 0;
CALL L1188;
L1149:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
FOR i = 0 TO V1;
IF (A171[i] != 0) THEN V4 = 131072;
NEXT i;
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
IF (V228 || V204) THEN GOTO L1178;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V199 = V199 + A59[i] - 1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V203 = 1;
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L1178;
BOOLEAN V420[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V420[(V199 - 1)..0], CAPTURE V420[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN GOTO L1186;
GOTO L1180;
L1186:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1185;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1182;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1183;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1184;
L1185:
IF (V420[V201 + 1]) THEN V420[V201 + 2] = V420[V201];
V420[V201 + 1] = 0;
V420[V201] = 0;
GOTO L1181;
L1184:
V420[V201] = 0;
V420[V201 + 1] = 1;
V420[V201 + 2] = 0;
GOTO L1181;
L1183:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 0;
GOTO L1181;
L1182:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 1;
GOTO L1181;
L1181:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L1179;
L1180:
V420[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L1179:
NEXT i;
DRSCAN V199, V420[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L1178:
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
IF (V228 == 0) THEN WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
IF (V228 == 1) THEN WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L1175, L1176
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
CALL L1175;
IF (V42 == 0 && V228 && V344) THEN CALL L1176;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L1220 USES DEVICE_DATA, TEMP_DATA, L1223;
FOR i = 0 to V1;
IF ((A17[i] & 131072) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 131072) == 0 ||
(A17[j] & 4) == 0) THEN GOTO L1221;
A17[j] = A17[j] & ~8;
CALL L1223;
A17[j] = A17[j] | 8;
L1221:
IF (V42 != 0) THEN j = V1;
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1188 USES DEVICE_DATA, TEMP_DATA, L107, L101;
CALL L107;
V4 = 131072;
V3 = 0;
CALL L101;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
IF ((A17[i] & 131072) != 0 && A171[i] == 0) THEN A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
PROCEDURE L1189 USES DEVICE_DATA, TEMP_DATA, L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k] = 1;
IF (A171[V414] != 0) THEN A57[k] = 1;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN A57[k] = 0;
k = k + 1;
NEXT V414;
A18[9..0] = $307;
CALL L458;
STATE IDLE;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
IF (V40 == 0) THEN V42 = 10;
ENDPROC;
PROCEDURE L1198 USES DEVICE_DATA, TEMP_DATA, L458, L1188, L1152;
k = 0;
FOR V415 = 1 TO 5;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 && A169[V416 + 2] == 2 && A169[V416 + 1] > 0) THEN k = k + 1;
NEXT V414;
NEXT V415;
IF (k == 0) THEN PRINT "Warning: ignore CFM1 flag";
IF (k == 0 && V214 && V210) THEN V423 = 1;
IF (k == 0 && V214 && V210) THEN GOTO L1169;
IF (k != 0 && V214 && V423 && V210) THEN GOTO L1169;
IF (k == 0) THEN V423 = 0;
IF (!V422 && !V214 && !V423 && !V210) THEN GOTO L1169;
IF (V424 == 0) THEN PRINT "Warning: Bad POF detected. Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V424 == 0) THEN V422 = 0;
IF (V424 == 0) THEN V214 = 0;
IF (V424 == 0) THEN V423 = 0;
IF (V424 == 0) THEN V210 = 0;
IF (V424 == 0) THEN GOTO L1169;
PRINT "Check Max 10 FPGA backup data ...";
CALL L1188;
V415 = 6;
V418 = 2;
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1200;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1199;
L1200:
A57[k] = 0;
k = k + 1;
L1199:
NEXT V414;
FOR i = 0 TO (128 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1201;
V416 = (V414 * 21) + 20;
j = A170[V414] + A169[V416] + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1202;
L1201:
k = k + 1;
L1202:
NEXT V414;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 1 CYCLES, IDLE;
IF (V40 == 0) THEN PRINT "Warning: Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V40 == 0) THEN V422 = 0;
IF (V40 == 0) THEN V214 = 0;
IF (V40 == 0) THEN V423 = 0;
IF (V40 == 0) THEN V210 = 0;
IF (V40 == 0) THEN i = 128;
NEXT i;
L1169:
ENDPROC;
PROCEDURE L1161 USES DEVICE_DATA, TEMP_DATA, L458, L1150, L1188, L1189;
CALL L1188;
IF (V422 == 0 && V214 == 0 && V423 == 0 && V210 == 0) THEN GOTO L1163;
V419 = 10;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 11;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 12;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1162;
L1163:
PRINT "full-chip erasing Max 10 FPGA device(s) ...";
A18[9..0] = $203;
CALL L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN k = k + 1;
IF (A171[V414] != 0 && (A17[V414] & 8) == 0) THEN k = k + 23;
NEXT V414;
DRSCAN k, A29[k-1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
CALL L1189;
IF (V42 != 0 && V228) THEN print "Warning: Real-time ISP background programming is enabled. Ensure Max 10 device(s) is in usermode if you enable this feature";
L1162:
ENDPROC;
PROCEDURE L1164 USES DEVICE_DATA, TEMP_DATA, L458, L850;
IF (V419 == 10) THEN PRINT "erasing Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 11) THEN PRINT "erasing Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 12) THEN PRINT "erasing Max 10 FPGA UFM block at sector ", V415, " ...";
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1166;
i = V415;
CALL L850;
FOR i = 2 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
A31[k+22..k+3] = $FFFFE;
k = k + 20;
GOTO L1165;
L1166:
A31[k] = 0;
k = k + 1;
L1165:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, 350000 USEC, IDLE;
ENDPROC;
PROCEDURE L1167 USES DEVICE_DATA, TEMP_DATA, L1172, L1150, L1188, L1189, L1161;
CALL L1188;
IF (V419 == -1) THEN GOTO L1171;
V419 = 7;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 8;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 9;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1168;
L1171:
IF (V422 || V214 || V423 || V210) THEN GOTO L1168;
PRINT "programming Max 10 FPGA DSM block ...";
V415 = 0;
V418 = 0;
CALL L1172;
CALL L1189;
IF (V42 == 0) THEN GOTO L1168;
CALL L1161;
V42 = 10;
L1168:
ENDPROC;
PROCEDURE L1177 USES DEVICE_DATA, TEMP_DATA, L458, L1152, L1188, L1189, L1161;
CALL L1188;
V415 = 6;
V418 = 0;
L1195:
CALL L1152;
A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k+31..k] = $6C48A50F; 
IF (A171[V414] != 0) THEN k = k + 32;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN k = k + 1;
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
CALL L1189;
IF (V42 != 0 || V418 == 1) THEN GOTO L1196;
V418 = V418 + 1;
GOTO L1195;
L1196:
IF V42 == 0 THEN GOTO L1228;
CALL L1161;
V42 = 10;
L1228:
ENDPROC;
PROCEDURE L1150 USES DEVICE_DATA, TEMP_DATA, L1188, L1164, L1172, L1155;
FOR V415 = 1 TO 5;
CALL L1188;
V417 = 0;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
i = 0;
IF (V419 == 1 || V419 == 4 || V419 == 7 || V419 == 10) THEN i = 1;
IF (V419 == 2 || V419 == 5 || V419 == 8 || V419 == 11) THEN i = 2;
IF (V419 == 3 || V419 == 6 || V419 == 9 || V419 == 12) THEN i = 3;
IF (A171[V414] != 0 &&
A169[V416 + 2] == i &&
A169[V416 + 1] > 0) THEN i = 4;
IF (i != 4 && A171[V414] != 0) THEN A17[V414] = A17[V414] | 8;
IF (i == 4 && A169[V416 + 1] > V417) THEN V417 = A169[V416 + 1];
NEXT V414;
IF (V417 == 0) THEN GOTO L1151;
FOR V418 = 0 TO (V417 - 16384) STEP 16384;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 &&
(A17[V414] & 8) == 0 &&
V418 >= A169[V416 + 1]) THEN A17[V414] = A17[V414] | 8;
NEXT V414;
IF (V419 == 1 || V419 == 2 || V419 == 3 ||
V419 == 4 || V419 == 5 || V419 == 6) THEN CALL L1155;
IF (V419 == 7 || V419 == 8 || V419 == 9) THEN CALL L1172;
IF (V419 == 10 || V419 == 11 || V419 == 12) THEN CALL L1164;
IF (V42 != 0 || V419 == 10 || V419 == 11 || V419 == 12) THEN V418 = V417;
NEXT V418;
L1151:
IF (V42 != 0) THEN V415 = 5;
NEXT V415;
ENDPROC;
PROCEDURE L1152 USES DEVICE_DATA, TEMP_DATA, L458, L850;
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1154;
V416 = (V414 * 21) + (V415 * 3);
IF (V415 == 6 && V418 == 1) THEN i = A169[V416] + A169[V416 + 1];
IF (V415 == 6 && V418 == 2) THEN i = A169[V416 + 2];
IF (V415 == 6 && V418 != 0) THEN GOTO L1194;
i = A169[V416] + V418;
L1194:
i = i >> 5;
CALL L850;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
GOTO L1153;
L1154:
A31[k] = 0;
k = k + 1;
L1153:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
ENDPROC;
PROCEDURE L1172 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 7 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 8 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 9 && V418 == 0) THEN PRINT "programming Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $2F4;
IF (V415 == 0) THEN A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
FOR i = 0 TO (16384 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1173;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1174;
L1173:
A31[k] = 0;
k = k + 1;
L1174:
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
NEXT i;
ENDPROC;
PROCEDURE L1155 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 1 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 2 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 3 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA UFM block at sector ", V415, " ...";
IF (V419 == 4 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 5 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 6 && V418 == 0) THEN PRINT "verifying Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1157;
A31[k+31..k] = $FFFFFFFF;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1156;
L1157:
A31[k] = 0;
A57[k] = 0;
k = k + 1;
L1156:
NEXT V414;
FOR i = 0 TO (16384 - 32) STEP 32;
IF V74 == 1 THEN GOTO L1158;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1159;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1160;
L1159:
k = k + 1;
L1160:
NEXT V414;
L1158:
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 3 CYCLES, IDLE;
IF (V40 == 0 && (V419 == 1 || V419 == 2 || V419 == 3)) THEN V42 = 9;
IF (V40 == 0 && (V419 == 4 || V419 == 5 || V419 == 6)) THEN V42 = 11;
IF (V42 != 0) THEN i = 16384;
NEXT i;
ENDPROC;
PROCEDURE L1175 USES TEMP_DATA, L1188, L458;
CALL L1188;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT IDLE, 1 CYCLES, 100000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L1176 USES TEMP_DATA, L458;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
, L1150
;
V74 = 1;
V419 = 1;
IF ((V4 == 131072) && !V214 && V42 == 0) THEN CALL L1150;
V419 = 2;
IF ((V4 == 131072) && !V423 && V42 == 0) THEN CALL L1150;
V419 = 3;
IF ((V4 == 131072) && !V210 && V42 == 0) THEN CALL L1150;
IF (V103) THEN V74 = 0;
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF (V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
IF (V4 == 131072) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC 7059;
