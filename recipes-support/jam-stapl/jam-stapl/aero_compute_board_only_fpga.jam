'Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
'Your use of Altera Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Altera Program License 
'Subscription Agreement, the Altera Quartus Prime License Agreement,
'the Altera MegaCore Function License Agreement, or other 
'applicable license agreement, including, without limitation, 
'that your use is for the sole purpose of programming logic 
'devices manufactured by Altera and sold by Altera or its 
'authorized distributors.  Please refer to the applicable 
'agreement for further details.

'Device #1: 10M08SA - aero_compute_board_only_fpga.pof Thu Oct 20 19:18:19 2016


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 16.0";
NOTE "DATE" "2016/10/20";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "aero_compute_board_only_fpga.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "USERCODE" "00083F54";
NOTE "CHECKSUM" "0265F715";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "67";
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
DO_INIT_CONFIGURATION OPTIONAL,
L27;
ACTION BLANKCHECK = L17,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION VERIFY = L18,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
L27;
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 131076;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A173[1] = $
0;
INTEGER A169[21] = 
950272, 64, 288, 1, 1146880, 1425408, 1, 475136, 950272, 3, 671744, 278528, 3, 131072, 147456, 3, 131072, 16384, 0, 16384, 0;
INTEGER A170[1] = 
0;
INTEGER A171[1] = 
2572288;
BOOLEAN V424 = 1;
BOOLEAN A172[2572288] = @
0WE10u@@@@3q6aDm@0yl@@@VFKAIOx@@xb8S2Eu_@3kHES47EX3kW3y0@@@w@zz@
tB@Flz@xw@hx@Vku@nD@@jw@jT@Vjy@fj@@i_@bz@Vim@3Ry@lA@lhp@tAz@iM@@
gs@hwz@fY@Fgv@Vg_@ck@Vfy@JQ@@Zw@le@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@NQ@@FK_@e@rq@9HuX_dGR8E6m4W_@bp@XR5hioA@@@
@M@@@z@u@71W1E@@@z@Q@d2W1U@@@z@P@d2W1Ux@@z@f@x@@lp@@@lV@@V@Vp@X0
OWV@@V@Fv@_@@Dz@@@xe@@t@J_l@@V0@@@@cu@@z@C@d1W1kw@@z@X@x@@F8503y
@5@x@@7n@@@lT_@V@@n@_@@jy@@@RZ@@t@Bzl@@VCNX900u@@z@E@t@@30000E0O
W60C8306Y10Zm0W9O0m2Cm30G0090Gmo16W028000G008004001@0aWyW3Wa22Se
032B8XE3s010G028W04000H0Om506a2G2n7mGG0646W1@0amW06qDG5gxN02AOZz
4COM06A8mWt1U8eWV40044KW108W0MR814K018W02U0m05G01000000800000000
KgI10WL7C0004QC1R000ALf0KgIBjKb200H0Om506a2G2L1m0gl400KQfX1OGI09
y4G2AjK0k3mWL9CGe00G436q0W1tCOGG19eqI3eNZ4GA00KKn6AjK04QeXAqG100
04gG3DqB0C83032A8100G10000KAeW2KG15eW2G4060KG100000000KW2GfT3420
010004000WsrAW0004G02014W0eK8X0IG094W420004G028W4400WIGCWYm1000e
Lj200A000000000KH5geYQ406S1W1f0O0KR5WW2O00jYwG0645030000WAg0ebM0
000000G000200A100W82O0HCH428W84H4H8W02G000000miHY1_@V0100Mm2B000
00Wqjm2MOX5im2B000M41W1ZbO0008H0000_@V0OdTsnEx0000O7xipkB0C8303c
D9100G20000ylzspUxjdzs3G406mUx10000000mUs3m@_7G00000m200000aMp06
aEW1r3OWdA2WO2COAb40m@@B000WtUxD000000YtysRlvjtUpR00e2032L91X000
0u@@R1m00000H1aG606mx@1eA060m@UF9W1H1m00000UxD0ytV0000000l000000
G100UvbN70CG306mBlyYN00GS29u@@1000O5hi200000IrAhObLMnAhi200OL406
CzY100WKYJm0MRjrisQ0000MpQhj_203o0mWHOI000W20000@Vzrk_whTzr0uJ80
00NVT706a6J20uwhR7m000WL00000Gg0qDW1x3OGy094K03qG3D00000WorW6Qe1
DqG3Q000L0OG4D98C0000@@F0yqJUwfd0000ufdUU1W1P0O0F@7Wg0O00@xvG064
5030000ufd0SRZ10G300000eS008S03Q0mWu1C8cWM2T81PcC00mR0wUmWC7C8s1
R2A06JCn4000000xJOY9cm4JCX900WA0Ceh160m@@dqW10000oQW1NVzrk_V0YTe
YK7UmrN3WV@5000000O200000WLW08S03Q0mWm1O0243mM76q@@F000000gEtGq6
0800IAI500mDg100IDoWO1y8_8Om5s04B0MX50Rm2@7216000K08000000010100
0000W08bEn01G0WXds0020mNL608nl30000101WOCI87W40040K9W1000018000G
e1Or73Ayo0G0400000180W00018rB300W0000G8uB308aih700u3032t810G1L02
00080AI5G0000002e2A00000G0LW2W020004bK1400000eWATBP0gW20000W000K
18000G008v030W0gGfe00000WAg2W8FIu1XD698Xu3U8fh4UG810CVxF8aGa7N10
0GcZ00G0Q@00kjAK0e2A0q05_FCYbWiU0yltF000vS2004A0K15S50WIrk1310Gh
600uCo300n4U20WMD00G2S300YCy40WYJX1qoFYXmRy08N06_K490WYJv2mGK1E1
Tv1uzneeGN04CGNi9C0YlnW0363A22mBc810K5300qhw10WeDTAM0382604B0MlW
65q45Wm2e20W@Oo0CqPQK00L1I6WXkK5wb93Y5m0VV80X5G50uUdl2Y20eA000OS
x200nG45f10Wm2Mwps40@z0aC03n5GLo0CyeBI0WvbZE910WcCzy650GJ6000qE0
00Y@rfK1O0000BP10WF@E10kcNS0I0G0X04004W0018000@uQ000G02000000G02
00000W0400W3s000000280027mZVZV000iQvn9000WXS00G0od00Oa300ahE10Wm
aF9B0600qYqiS80u_Lp19Xm0810qVHTp900e5knvG0mPrSFI2006XgXpWJvCO9P3
000100004020mkk608008SE30Za000EpkWE600000H000000000YWNPD0024GGT6
8000Wx13mfq902f0000W0W00000W40000G200CGh10G2000CI0000a_0000WpVE2
100000Wl@60HuydZ0nlV7Y0uxl10plF4YGyxt1WpVF0Xmyx3186U000uy@Z00000
00m8URrg06n100PtMprga503GJ10_nEAef0000xTQtEgK1O8k0d25q00Wky00Wj3
h9gKgO8HA6Q9@XH5D8OWV000iPO008yyh00A26Om6Bcwn9YFKok12I40IaYXdsHA
DA6Y5eYkLRPF_40008IA008i0UUGe20000MK602UgBe9A01Fvqe_600kdDii400g
24BmIvEbGi0O5M0i1FvqRg64Jb1cV90YfAMe930nKHLQKC4J5L00MPZfo6mAB00O
r@JZo00000fHPGSC9080000W0200W040149IPGQKCa8b1@It20WHk4fO82gM2dYa
a3J0qY000ACqxhL1qY0GAKCacT8WMO023e5m84000hQJZw1800000G0oBs0000GP
Td0G00WqeC00G008000m890fHzGvn9yxj1D6d00W02I100w770IZoWjnJ0G00G70
6W40rVdg400CI000G4S_x80WpVEI0_yt00Wl@6G8_@r00nlV7AC_zH00plF42S@v
10WpVF01O4700u5HNYh2jZ6Wi_I8SALIZoWmfKvsSLS_k0anN2nKTRyef53d1vlN
40mouuH@FUKvoRee8VIWe00WH25WuH@F8KjY50hm20BUqXREP900Geq700Y7Tx8G
t8UKXMpZ4iIC0v@cGyeA69w3nZ6LQK6a853nZwKBf60W008DA3Y7j5@@84nZ6YF2
mRJ300nZ_VyemKuJHnZo0gp0WuHhBO0mY7Tif@X9hU6Y7bjO1mAArYY7jhioM200
000WT@uH@FALp0G004FgMGJS0Y7z@uH@FUqb40004TF3HKZHyeC00_yCUqd10014
FA6fxRGye68mY18Uq0pgdXuH9CMUj2nFD0WgpH_Z400WBO300n2WLO1W1P718sSX
O500aUV2S200Ar79eu400mRy2w7fC1O8g0dWgp04LmI9LmGk4C4B0MnZj4z10Wm2
M203UQ@@900aqEwVXWas0001ae@@42hs00002TLdmpi9C_k11MRG6rCKTj1wRO0Y
ksWO2I008008W0040000W00W022G00000200208010000800M@t00080xZR0WW00
W020000GQ3mWS3Cm0M2mS@@aRG200202Jm00W00000801040020000W044G00800
00020G01qoj100G0ljt001400200000W04009fR3010G00aq60001L00Wj5JezW4
oJ8XqkJ8F1900GGq@l109o@YSWXx4IOC13M4mZ16g0IQ300U300000W028w@t08W
02t@R028WWu@DW028GR@68W02On1308WWC0l102282yq0HK50xbdGm49yIG2nG03
0001Q100P7mGb@mGut0O@@4WWM0q@VEGGB0o4WX82o10C180WMJ000C6HY01YHaP
0cG5n0WX8J2GZeH00n8w8008oO0mGaD08OiR8000P600c000000erSQv4400WS0l
1HKOGmx6002000B5Oox6OG0000Gh9000GW80q240Y420e0MY004XX4GKW3100LmH
048uH00Y2S0W76B00W8XC80000000oQ4fkGYwU0M_FXG1WAe0d2IdjW10Bm0Q100
GJD00ewVF0009mD00809_Xky04rK5zvaG8h21Wu6E6peIydXK@D8mWhWYW04OW1X
i_VWiFaw@F9_RGg@C4ogMP_xKY@C4ow@1o2Mu_W5oAL08W0Yarf4@PGew3G8h@7o
gAfbhIY@9awl1nyFJ8h94iw9f_pG8h6duV2XiAnv@6028aAr@42PL5mz@ZXiY1u_
@nGMJWtJ3G8h@7oQ89_NK@@Caul1f_dGqP@7rc7GHG06z790WgOf_pGi0EbwF3n2
WLu_B5M0LfHnGCL9awVH9_dGg@64ERK4000IzdXO1mAiWF10QIdwF3Xul4n10WK@
P8cAN3tNBe930XxFJCLj00ObDqVLIrdXu0C8rV300G0bwl10W02IcrWqSDOBU3Iy
tWK@P8SWPYWg5m870f_RmCYdWFF18rV66zFa4@P8C0O0jm0q@V89_RGg@9aul1f_
p002000080400GoOE1G0009_RGg@60W00ucO3Iaw10020f_R0808W4@D8rV3000G
GA000080Kg@60008Pvv481000690000gF0000mvlZW000000upV3G4S_x8Wu@N3H
0_yt0mut7XG8_@r0mzd7W8C_zH0yY8000S@v1008c@MIytWO_L9nV62tNtOge2gE
3GS1K5lUiGsH0YYVf4@D8rV6YttoWSx20ewSe@8buF3n2WLO1Q15z1OqVa00IQdw
F3HtBK0@C4J@C0104IyFXK@DuJU30010014080U3_at004001HQ0004W3YD0G000
01400008000W0440000W00W0Y1i400002Xo@GO2@G090eZV3_tt08002@xR020W0
040000018002qjk12000040000004W00Ig@6q6W10148e2004T@I009jZkFXZ@DO
WXA2ut000001yRGY@F00008nV3oX8XduD00G0188WWK@DW028mda68W02e@V308W
0cul10280IytWK@D00G0180008fD008YgU98aO829nV6Yudm82_10GhPg@604Z8p
00m40103Hc4WWP494eHqH00O2g43W8R0GmCY6204oC00C1HZ106Gh900mE31009D
dmat60G0W8mJ30010awl120000W0000erCrV34804rql1W8Ca08820Q0e2E200KW
b8GKW30445mH049a11022U40GM300mXY500gj798h10f_pGe0G5aUH15iK0xLawF
3130MW1kcul119eIY@6awF318DF0GpXGrZ20ev000GR9200J_x400GDa300n5e50
005c100n5OGY@510QIg@@400gc4uFI000HP4004B0MX5yG6m5vRS1e@@4WgX0CuF
I00KHY50h_@J00eQGS@8100M88C6Y50hm2S50ePKS@H10qC2008ic10Ww_TAL06Y
B8XYJM200WAZ100A_D0pz75KD600S@dXz750WnoO1Q10Fnuxx900OiCLr4IVtWtZ
D008WmP@6002800X0I@g606B100ltMJlgWHp0Oq@40jT0ixV8yIN0230cz@J0qs2
me@X82y08C0OM@F1GRD0z@72Qo6WrsI0qM1mKU9Cil10W0W00000W018P@48Qe0a
uV2Wn602xFXOMD00G0001WWF@JesV302000W00dz00WPr7WsLD000100G4W5_DW0
000W80000j5000YT500WAQKborL1L1aBaegseY4TfSrfmLfhIBgAjAMNLKTLgKrg
Qegorf2LN7LmOE00WGK100byV20UZxy_J00mOUa@g0LJ18F06cv790Wgf00W4mB0
04B0MJyxKsJ6mXX0OW@eIJYXGfQvTm42bA40mTLn_dpo0O0W8Q8@96YtV9c000vF
nGf@8v@@@t@YQK406a001H0WG80G4406uW000m@@x@@1yk@VsIVZ_DJe@VOI9G80
0WBVIa000WZXGJ8aFjA6Giy@h00SG000uPV10057WTk1C4vW120W0YSeQ00meM20
0YSGzGE_FoX@ZLPrAaJ8Mw4gdE10G00H9dmkHjCnS2t7LnMr64D03800Gw@@X_hJ
O9R6w@FXk0ae7060000O4f0evv4m110qwS2xCvHAq9C9j19SRGE0Iy3D3TIp000G
We1s8mx4g4uXj@P8S16w1eY_@V08SG000GJ31000W00U2F100409NR0G00aciDO6
R3002001002001Gu26a3G2TZRGe19K9W101000W00G80W8MS600404DW1XBOG8v6
K9G50G00I9mW42CW000Hq0FKM03L28HO19OWm1u0z4YEAX08ge516AgWaU5s8q2C
gnWX428fi262jm30m1100WriA004ap@vQfoiNpqbl1jTjHG0FaGl1ZxpGdOX00E8
0008iu10W_@buRU3sKXXZ@DW00WmU9FqilAW0000010q0W1hb9H8nXCXe1V8cmqA
FaIG5SYB0Y7ZS0m1HnZvjma5Wi3O8UCi1074300QWf00mGVB5@79v0YHk8CaJI59
K@mfuXWpR08x06c04R0m1X000SaE00KTOiBHUYL87W_@J07a0GVCLqz@3hNPmTCs
ymL2tHA100CWF@F9E69UwwX_@b00SGA00G_mAVOUz7Y5OcQSgONB9_ruXQSy8S1C
M_t37l80z@d0E83W87KfnXSwDs04200va_mdzg4vmC0W3A000Y0600060Omy@600
m00O0W10m0060W1@Bd0C00cG0I000000m10m0W30W100003qgj10060m00C0W108
40822m0m00811y0G0W30W1060036EB1O0060u00O0010W008403I8mWG0C000WH8
0F070W10600608Wl@D00m0GA16aG03O0WaLA00aKW11h_VHA7MzlD00WzYOtWeSt
BuWkI0c10idAv6KTa36aRG2X7pPb52XTM1004Ln1rI4ak4D13PfLO4SW4gV10000
8200WW0W0001W100G0002W0W0400H00G0Y00W040000G0G000400W0400410G420
4W8428000200G0400W0048000G0008X0W00210202W00023100800H00m0410W08
0000G00000al0C000H80GG2X0W00082Iyt00620004400G8WG0WW0Y00088001G0
0020W80000H00G0206004000002W1G0400W0042001G4204W00PfQ010W8000GW0
041H01W420202W000802008002000xi200udC00Gm1C8W008u060H80000G0W10G
m1DI80842000000qW3U0X01Gm1F0WdDCSyj1F000Vq1OKTi1GNwaT03XZND010m8
7CGYj0Ga3a30c0i@@LhTk2000B03000Uo0CzVom890oDWXI@J6BW100m8900G0fJ
iQcuFyFk113R00cps_@J00i1QS@IZDG100vBUO@IdQ03O500cwFPYo20n6WTO3@7
HXkO7Q0cf@P00mmG1002E0y07O8uxaZ@t00mdAb_d00O3c8wb6Rm0000BwWzbEr0
6W3i0q@VQm1M00mh2k3d18002w@t0G0040W00G080040G0080000400208004040
0108002020mjs6004002080040Yl0C000040020G004V1aGT_600080040W00808
00208T5@9sWe3O8jJm00W000iX300Okr00WB@DBS03OX10q@VQm24027OC00WMc7
00I7WXQz13s03Gw0CCvFO007W000K0A000200IHz9S9F30080U0m000G00W00010
0y0W1RlBnX06y0W1PtB10W000100000U4D000W00010000007G20013Omoh60000
PYU30020S1l1400Wcpt00010ttR02000800000W02lFXOzD0000IM160040OzT38
000iQl100W0000S0A000Zj0G7@R4PV2b7OG@@90084OGU9MLlYmPDuwV9G080KRF
33oZ1004WW@n0009mP@FCs@30Wpe_pt0QTA0e4R8000QfSBjKfQbcqqlKMQD9q2z
K8Tj_oQIK2Iv8jQfLQku4IIHQQHxKjGvbQXaKIFvQP9BrgauaKfqtQBfrBf4fQbc
r_gKMQHfqAjqerfMogIqIwfeboyrAbeKIoH@IGhqlmfaIXqrO0V000BrYqg50000
0u0S008mbq0E00OAy0OYzqo6W1iY003mdCxF6WO3mEiX7QjjtLyJWw81GOlF4lCs
v4pGyoadeTr0W90ZSmOG5401_kTqo@7tRfHDmSSlL4kS2rKcC0100i2000mdGZdN
Qi200v4pGi1O7sm@1yBAsX6W8AaesMZ1000cji1MnO0c_2R0mEqvBpGSlL7SGrP4
pGuoIdHi1XBpcN54WpWJ0Em20000YGXJeJe425c120W0X2R0400X@XD8ZL300G00
8040020uN0980008su7UIrWOZD0Em2GEn64TmRP1Rmy@WbHC3X3aGzvK5HU2qk00
Q9FXeW730O1IKmc5WC3m6O0w@7C0G1K@kd00m1ePXJe@V9G00G00W0u1036rEXQx
J0000IHy60400CdO3EAsWX@berO304EGcJi1200035caRaD8duDYD63048000008
00LHO008qp4IFmW8WBwNS3UREXfZP00G0G6n6iBy3TaB1100WWaH2sG000uCA000
fq2jqerf0WIIq2wfebojqIae4IoH@IPfrkm9aIXqrwBhRHPBrYqgbMfroIBfLff5
jJrdrMgLII9zaBjryLfIYJIbIQffbJlaIagLwIHhoOf5bIhaoX_bO9hAHB9bYqgn
NhKYIBf5fh1jIz2dm1S00Wow10022Mk8aPBZO3YGcjO3OBdO6YD0xmUPEi1f3xTZ
cADEio7Ibs09s20nBJE0O2m0VDEdO62yz@eb@FY_q0mAA7th4TqpCs05WSYP8Svg
nA004cQoQtB0YDGYNz7EPP3AjrWO3Oc110GO3RdJS2Zj@SMlC4S0uvIRG7z97Kg1
0WFLwADXuUh6Rm0GSli5kSTm1M0YGcD0ygW@3dG@@64Ay300G0cAs010G0@3RGFf
6004002080040Y@XD8dO3YDE1W0G0HjRmwn64Ri1P4Rmwn64T0R00Ruo9cXm1CBd
O6Y2Uim1a8A@b2Gs000WTk700o9cX9_13s03G0o6a_FO5FR00m1800GJw500W00W
K4S20001w@FXiWD0000Kfm60200OMO3w@@XFZD0800Ohn6qih4j6RG6n60W00010
000007G200X2Znfr6G000AZuDcgcXOZz8ZO3mOB0yRz3H0BK@@C0800ejS3M6_14
0205TpGdo6CUy319@30uCgdeDWMd20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhli
c4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbM
KAjIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8TD6m700mIj8jQ10WWWPBZO32
2cj8aP0h80mCn9dHC3n6WTO36qQRlHyd0rH2WmUV8dug107mdJC3nBJUoqL30c0C
o1Zp8cX0V@FQv@Zx5le6OEktA2NEXQAJ6W000M1000uJenpBDM10WKOP8s0i3Ru@
0_55xG3G45IKRhn0000pMs0hOC0JVXD0O7wybP8ktg3EewCYP8SPfp8sWmbPBfN3
E3s0u0B0000825EXEXI8KO680024Ai1G004_7sWCMD00010W0G0080WV1aW000WO
ZVu9L3YDs0u0B0v4RGq1lbJi1p@3M6nC4EG2rdJL4v9Gx20eby4Y2UC0W58H1RG9
@WbC03m6O0w@7C0G1K@kd00m1ePXJe@V9G00G00W0u103cVEXQxJ0000IHy60400
CdO3EAsWX@berO304EGcJi1X2VoDo6aJy6n6Z10240000040WVvA004wP2f7OG4m
5zWj1lDdmqnC00808ZO3s5_XsibW000GGo81R8000S6500WKQXMQqwK0G99Q1zKq
IvMQ9IK29veVfiqQNu4IfGwQzbrjeibQHQrIhqQPfbqgqqYsfwpQBrA9faUobsQ_
gK9n9fI9jqqofNI9IrATfeLPiqYIfLIvG@IiaLbebaIHQruhLAHfbqYqrWMfUXJu
0E00GPz000jlQ6008NK000v4pG4Rf1100mKu1GPU67Rm3kuD0YpJQ8000fBpGOlC
7RWqXzkHJb67Mv3fIRW4R1Wub970C1OWl6dJC31__Vqo@7HVQ0O5bZxLYEwP6RW2
GEnC4kSrO5002JDPjx50n68nh_3dii1bsQGi1CpW008iXjp9EXnsVEhN62E0ySfD
eZ_a3Ar00mdATbcGSlLZDO08kNs2NkEu0B0H8p60ULm@XJe@V325_10080J5RW00
8W@XDedK3002001040020n@m6aJi1n6d0G08WesDOzO3YDsWCYDOzO3YE8XGt130
0200m6E00WvM300g@tiyZD8dO6Y2Uim16BZO62GsCO3C018FM@@900S0AdO3W00W
K4S20001w@FXiWD0000Kfm60200OMO3w@@XFZD0800Ohn6qih4j6RG6n60W00010
000007G200X2Znfr6G000AZuDcgcXOZz8ZO3mOB0yRz3H0BK@@C0800ejS3M6_14
0205TpGdo6CUy319@30uCgdeDWMd20An6200WMAtIBLgMf9DzBbbMJ2jGF5INhli
c4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbM
KAjIBDQTgbig4jaUAQfCVjI9AbaSql4qAzBSAfK8TD6m700mIj8jQ10WWWPBZO3C
5U0CqVQP3m0MH0WMYJEjN6YD0xm6CeIwUZuF1gZ40Xz_GEnL30EWFdO6YNcyafh6
0C1Oa36dHC31__Vqo@7tBUHDmSSlL4kS2rKcC0100i2000mdGZdNQi200fmoGi1O
7sm@1yBAsX6W8AgEbU3oMs0mlA0JVXD0O7wybP8ktg1mmeKH@mz@@0Yv7WSYPO4y
dp8sWmbDeEGpKx@0S6S2m1M0000G4AS2T2bGemCG0048KO3W008yFi1PiQ000200
1W00G00@2811000n6@mJg64Ri1m1M0o9sW_@D30lAOMmCC@FOP4pGu09KVELHad0
jB0WMoJ8Aun00MW45iP18p0i16W_@130K0rlx900S0QMu4w@N240040080U0mWHj
Jes_4000WK4l10100p9sWZYDOuV9QDs00X3av4RGemdSZi1v4lHinO0W01000001
0uNk200XUcGw1641SH@YRmRp9CTC30020o8sWTXVeZS980004aCIm62000dH1008
bMeb6jE50KIYMGF5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADje
Tg_isIjIIAfdSfjclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_
QbIKQ9j8TDeLgNu4EW300KMF00Gxhc100o5500GEnC4nMQG000C5U04Cqp9BRWBU
3Wuya6200GwoC4sBpn68TOlRqKfnXL_Ggq68nM08UPo10J06uhnv4pGWl@7jydH0
ES4z600jlBkN9wedPi1A0v4pGuoLZL00OO@ap8cXO3mEiX@Ze8Mi3D0Zj@SMlC4S
0uvIRG7z97Kg10WFLwADXuUh6Rm0GSl9qkFpf6m0SW5W8aP30lAu@m9q@l1X2@00
04WfYDG004m@m6qJg10010W002001WuVO3o9sWOZJ0804GBs6iUi1n6RG6n6iUi1
H7aGVsW100100O3700mSh100r@RM_n6aJC3H1FMu0ZbHC318R6i16W0a7h@@400E
0bJi1G00GA2E100W0z@dGMm60000gKO30100CBi1z@@mdn60400irO3QsLYMZD8Z
O30G00W000000W3810WGXnOOU38000bHy6JLpGinUaHi1Oi50_j_X8W5g@V60400
qMk1B3@0201WmyPeJP36F_XWa@10S6rix6GhJ10bO3100GBbRfbALhqac_boIh9X
Med2fhrNMJYIGA7fLBjIp5dGIAIJBQdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8L
hqisNboIBAbMfb6jErIMLYMIF5jKclMf4bIIEwN2Qb_5EbKAak63u300OfMaMj00
GGmibHi1c2F06wFji1O0h80GBn9dsB3n6WTO3O7sh1v4ND0u0_SYP8UPohE@vf@D
00C18000KJ300Fk3S6nC4uR2zqtRvj6W5m000yMSqo@7tRf9IpGSlL7kS2rKcC01
00i2000mdGZdNQi200v4pGi1O7sm@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIES
P30mz@bJC3XWBDSW5WmbJ8Axn0WF@rPj18002YGsWGXJORM3cAEXGXD8ZO3cAs08
0400208oOrWCYDW008mN090W008su7w@tWOZDG0u0B008TA200z@RMwo6a5C3t@3
M6nC4EW1rdVL4v600jBeby4Y2Ui0aD8Aun2Gc10WDmz@3M6n6yxk1v4Rmim6Cli4
0W000100z0m1ZQdGjz90000f8U30200cJi175Rmm@IqQi10278p9s0100WX2JoDo
6aJy6n6x110miO1J8dO3Y06fVnDujv4cEc10010P4RmkmFqHk440002I69O3100W
pe000aIBqIZMd20A9HBedYMAtIBHYI897zBbbMx2dGA5INhlik5bjKBIhMQbMBBj
aMbcMqELVMRfM99bqJkqMpNbA9E9LAfbcMEzIAHgMfB5jAZbMKAjIA7wNYbig4ja
KAIh6VjI9AjaMak6qArBS27m100Ah700eHHp000WPV008dO6YOBD8000H8pMRecb
ii1wx80YpJQ8000fBpGOlC7RWqXzwHPlF3G00CLQ3aOB04lCv0W90ZS7uCYD8dO6
2yz@e6u40OaKpt93WqfFkN9wedPi1A0v4pGuoLZL008aoa5vh04R0pz@dGooC4R0
pIXL0IeFXm6m6xG3mOxFdHC3170Ukq6qHVonzQ00uJb6VJ8ktgn6C04tR2jxpSg1
C07O182Ps0mh2_FS2z@RGemF0001OgO34001yFi1zaQ00G0080W00G08_7sWSYD8
su40201qYj10002YDEXCYDOzO3YEWD0WDSv4pGu0cbJC3H1FMu0IqI_InWR000mE
t300v4pGD@W1RW180P3AM7iwpD00u0400e9z200G00GA2E100W0z@dGMm60000gK
O30100CBi1z@@mdn60400irO3QsLYMZD8ZO30G00W000000W3810WGXzW000K6nR
CuE3n6xH6n6WnM0uzz7Y0Me_@P0G00GRv6iCy380402pdXEbDOyu72I_70mPKpkR
0jE50KYD4000jKkbMgKjIJQwNABjc4QXUAakMVPD9A1fSaMjqADNS29f8DjeTgMe
yIjGIAfdSjiabQLISIgKwRjbqwbKYKjIpQVLABjeKQbMQqwKBPL9Q9zKqIP_QbIK
A9veV9eLwNuKIfGwQCWF00WbQHQr20011pM6n644CRP4p0MH0WPYJEjN6YD0xm6m
EiN3o9kQ0m1yv4pGyoatkypJ@R00O2G000ec600gS7uCYP8mt4goktY@D0BW100u
jueb@FktIJacXuUhESv4gfCP0200O5000WFX6FlqO500IybXO3mEiX@3uNKi3D0H
KKTsoCaJC3170USlIdBj1zUbSCz60Wx@BdO621NQu0B0XBdGKsZ10V_hzV3G0044
Xi1X2dmsi6CLS2X2RG6n6CLi1G080040Gang1P4R010GWl0I0010GinFq@l1n6RW
0m1M00GwK400w@tiCYP8dO3k@7iCYP8S03gF@g8oD00QNGBv945yO18RGKm6aoVN
93m00m6u_@1300G1e00WVtD8dO3c5sWvbb00400800e70EO_v4gjF100085nR0G0
0mSYDueO36_NYMZD0Gu0PEn64Ay9t8RGEnR4Ri74006p8EXSYD82OaUmsWtcJOwO
60040aHi1x2@GRsIG00088PaWD4000EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSq
lKMQjBS2fK8Tj_owMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQ
vqBf4fQbkKqgCMQHfqAfSeV9MogIqIIf8jQyrAbeqIQHwQGhKlm9S0700eiU00W_
iD300eeB10WSYP8YjqW000OAy0eFKc1800aii1uyT0YpJQ8000fBpGGb9Z5008s0
f100zeU008v06YRGwa3O8kXg10ZC5skkCp00A@F1CpC0pp3C0SFeG3WEe1i100K3
700e@@F1W735M0i1ByV84@7On@1Xi700WEu200ZzxQQ16GAq0Oe@OJB81W000m45
000000G00X08WG@@F002WG001G@@600W20440G@@F0144emH3A4mWt3V0008cX10
W21C000GCq10Wo@z300mj100W_@D000W9K10Wo_l20jGOq0er@V200RqUv7C00mW
S700270kWj_FCi@3G3F0007W700gh7RS0F00eBTYF@X6q7E0T300096th10400YS
mRC1800eBT2w7O000Kn3c000W5W100VyRSc160Za0OW@apCWXe6O6RW2GK3Ct@V2
oNS0IEWXmcbEvW4AscvO3CWtT3GO3LJKM0eR8Z3Hd10000QCG06H@P000xW6002R
mWCig60i3D00OOe00017uTqNI30000W00800WDm000uJ506x@P000OY600oxF1m0
00rz@C0m1sa3O8kVm000lIG00000000800400EW500004002010W002001WE9I01
0G002001W00G0010W0000G0080W00G080040W008w@t0010G0G0080W0y5G20008
0040W008uB03EKr0002001W00G0u0M00GwA2Gq1lr@l1m6E0w@7C0OX1X30N@@90
0i09jmk0000cCW1ixU0cz7C0eryz@d00m6uG61300qaU100000004G0000u08000
00800G0WCCCezV600100200w1W3_YCXs8J0000I@l60400yG03g4mW_@bG00G00W
000X3a000U4D00CrO2004000G0000002000800000W00002_ea1000GjEQ00W0Wj
EC01000400000G00001o3m00200W000000Wa7W10010cjq0200ZHGQGed60A00uA
o7AFGYA2C0G20G@@C0080e_u7_oqWx2C8UI6YAm00001NAym919q@F34000U38X_
@JOv03W0004lS2z@R00WGWS6aOmp4WD4000EZ200KAjIBDQTA0ea4jWUAQfSBj49
AXaSqlKMQjBS2fK8Tj_owMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaK
faMQQvqBf4fQbkKqgCMQHfqAfSeV9MogIqIIf8jQyrAbeqIQHwQHhqlm9S0700O0
V00WI@D300C5y00WyOI0u00GmSf11008V06YpBP8000i@O0YD0xmUhEi1fp@FX4R
P8UPodaHYubD60WETEnC4uhnv4RGme6ZtY1e9x4YM_@ebHDktgn6e00Wy57004G3
iC3000WFX2GAiCCFVo9moGi1O7sm@HK4BsX6WnsVEZO62E0y072Fkt4gfFvmbD00
t@NuoOdIl1m1M0YZFDu0B00md@_7EXn@D8Ku700W0CLi120W0_7sWUID0080040G
00804@3RGEn64RS201W0AstWrZD8sO3o8sWrZD8w0po8EXSYP8S0pOX104CrOHaR
0i0100eT1H1pM0o6KpFOm6O0o9cX_@130u0400W2G100G00GA2E100W0z@dGMm60
000gKO30100CBi1z@@mdn60400irO3QsLYMZD8ZO30G00W000000W3810WGXzW00
0K6nRC1C3n6xH6n6aJC3H0ZK@@C0800ejS3M6_14020jPpGdo6CUy319@30uCgRk
DWMd20An6200WMAtIBHgMe9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELB
KUfM89bqJkMMoIjA9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9
AbaSql4qArBSAfK8TDAh700mIj8jQ00WWWJe_Zno8s0AU90H8N7MH0WWXI6dl3mA
u94RW1fBRSooC4R0sXzIU5@C4sBpIi50suFXubt60C1OyoIqwEjP4RGEn94ux@1_
MQqoC30s0DQPcx@F10aluXBxDM10Wa3CeZoaJdt0i2000mxk3RewqbJe8RcnA000
W63CqSfnEq0aaD317KTEnC4S0sHVzSGf9WDO000yfISlO7kC3fWpS6n6aS03z@3M
Il6S6i1m1M0000G4AS2TtcGemCG0048KO3W008yFi1PiQ0002001W00G00@28110
00n6@mJg64Ri1m1M0o9sWe3UBdO3c@7iCYD8S0uY2cX6oxA0P30WTt7WCRv4RGnw
WffU100000004mSYDOMu4w@@10001b2Rm306S_k1rlpmdn6y0W10G00W000y0m17
@@Ghn600Wm1a000UY6WGXFv6v4o963200Gn6xH6nCW3e082Oa6mFX5ZJOrv4EMs0
4020x2@GO_I001088Pa00sGaJi1T2R00ea4QXUAqgSBP99A1fSqNfMQDNS29f8Tj
yrwMeyIjGwQfbqjiabQLQqIxKwRjbqgaKYUvIpQVLA9vaKIbMQqwqBH9fQ9zKqIP
MQXIrA9veV9iqgIeLIfGwQybLbeKV06u5dm1u0003y1WWWhB2P3owtCiY00v4pmW
l9ZL408nN6YD0xmUPEiXgx@tW4RP8UPotnHYubD6000gf10WSYP8mtXp9sWWHD60
yMS8z94jy@HBZQSlL30s0DdO34001asRo00000WFXc2B3npdS2iC4R0sXDyV45n2
0sXEiTfp8cXW30Fm1lZxDXQwJESP3000txF008SPi500044i1nnR60m1M00WF_30
0_7sWvJD8Ku7gksWGXDG0010W0G00800JbQmKn6yFi18000cAsWOZJ8Nf4YDE180
GwK400MFsWe3IBZu4o9cXm1630MOGmKZ5Hk100BG000Qh0008AOs2GsWS_x20O3S
EnC43_O0200G1K00040OMO3coDX_@DOSt40400KAi1p2RG@@IyPi10K00g4WXIVP
eTO3mJq0aJi10000W3a0aHi1X2lH6nRS6i1n6V2EW2WSYP82Oaw@d10040dARmom
F0020fDx7W000Si0319BK6n60W0000QTA0e4RG000qgSBP9fQ1jqqNfMQDIq2Tf8
TjyrQIe4IvGwQfbqku4aIHQqIxKQHvbqYaKYUvQnIBrA9vaKIrtQMgrBH9fQ9jr_
IfMQHjn6mIhAXMfd2jApNMLYIIA7zL2jIv5dIIAIN3bx100iKBak6022EXMD73W0
00S0700eubH8N70O5X_GJ60S__9t94RG2jBFSooC4R0s0WDM2oMQin200edwZ@Mw
K3O8k1f100CY9008kXX10pC300CZ100Gzy67QW1SF802D0wmJOEe1c3FvyeQ8700
mCy10W_@1sIx0mw@9WMi18yVK1G6w5NWGggA0w@V6ggA0P3a300mKj300XBy00KL
rK1Q9k030GLL5OGBn5OGs0s00000Bq0GK497kWA9HmGu2max03fH0300u182001L
OGC7CaF1FHNOc9w1WcCI8K4XAw8D002Qn58HC7m45H2LHC3LLLrk1c100egO10W0
Na8A2Kx@t0KW50rzd9Am200KPF3ydPE1C4f0d00RCZKmWqTC000yl@10W_@D83W4
0m@@t203PxOGL06a001z08Xgg2WU0m00OZ900m2Z2009vCJOGp4SW186U0Qv9XY3
OeDe40m@@t7a118OGcGFaYG25@8H226KG43O4300GAY4Zumm000qdr04P0obw3C0
82vG68400SZr10WK2O8612J9WXO484782mmjIV@l100Rq000xxS008sKsCex04Rw
@Hj_@Nwf100u0y00GifIt@V20eBToEWXsxD84_Xhxd1020WHEOW4R1W87870C1ue
@0300O1O000e22W9@J6691Gk1CCvVoO1C0oDWXe6O60i1QW@IZDG100vBUS@IdQ0
3O500w@tWARq5000O@@6mxk18s09UzVOYo205DaGi1Chn01elX42RGw_@D0xG3mq
@F30066A00Gm1W7u03HVbSsL600_KfDb400Rm4keqO36000OH79fqf6m0SW5WnwJ
3Em200ULmTuC010GG@@6020W004002010W002001000W00G0010W0W0080010G0G
00800000000080040G00804V1O000080040W008_28X2zC000G0080010G0G0040
GwA20000800Iq1l10iXBw0327WDMO00JXd6i01Wm1aemmbYOo000WTk700I7WXAq
13s0300qQ_4h6hQA300E0100QIl000400axfC0000000GW_@J0001m3060002004
00800W70C8_@70002S8W1F0Om4XI00800G00000W7H3000800G000000m1a00Gm0
60G000400000040001JROm6b6G000g4B30040aeX18000W0000002OfW4MFq0000
8P5O00G0WV2CW000ml760002000m1e000Cs20FRzG@@CCCW1G000AFmW_@J00G8m
x@F0020uOiA0400KZW1HC_0201WSDPem03M5uXnADOv03w@@10W000081wKuXS3I
e@V300dHzUc1qwK0G9sG000qIvMQfIrADffVfiqQIe5wfGwQzbrae4aoHQrIhqSn
9aaYqqYsfQXoBr29faUoroIMgL9n9fIflrMIhNI9IrADhzLfiqYIfLQfHhJjaLbe
bqJHBbvhLAHfaaZ_bWMfVXJ9b2fhn0_000Mg5fLB00000m1u00GWBf1S00mKu1mu
@fbD03O5106TEPsVC0n6WTO3X7sh1vYND0u0_SYP8UPoRN_vwbD00C18000KJ300
5u3S6nC4uR2LPtRne6W5m000yMSqo@7tRfHBpSSlL4kS2rKcC0100i2000mdGZdN
Qi200fmoGi1O7sm@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIEcU30mz@bJC3XWB
DSW5WmbJ8Axn0WF@r_l18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrWCY
DW008mN090W008su7w@tWOZDG0u0B008TA200z@RM6nCaJi1t@3M6nC4EW1rdVL4
v600jBeby4Y2Ui0aD8AO3Ivlha1O00O3S@@W100e0K00mlx6aJi1p2RmyoI00200
400q307C@S2rsd0000aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYDs3
200ZP4dGEn641CIFORmRp9CTC30020o8sWTXVeDR980004aCIm62000dH1008bMe
b6jE50KIYMGF5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_
isIjIIAfdSfjclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbI
KQ9j8TDeLgNu4EW300KMF00GVsc100Kqb00GEnC4nMQG000C5U0q7Ap0400IMs0S
_E0nv9D400WqbP8iNcZDGwmUzeitd1800cAj1Ii50YNcS0m4WHk3S6n6aJC31__V
K3S6uBpHBpGSl9qHFpO3K0o9cXmbh6h00Gav07IP2ykR0YDGYIz7EPP3gctWO3OM
Z12G2z94sWqv4dmOxFdHC3170Ukq6qHVonzQ00uJb6VJ8ktgn6C04tR2jxpSg1C0
7O182Ps0mh2_FS2z@RGemF0001OgO34001yFi1zaQ00G0080W00G08_7sWSYD8su
40201qYj10002YDEXCYDOzO3YEWD0WDSv4pGu0cbJC3H1FMu0IqI_InWR000mEt3
00v4pGD@W1RW180P3gUrC0W3G00WcqB000100f8u40002q@V2P1R0000eIXD0400
mim6q@@3V6R0G00mMZDePN9QDsWCYD001002000000EW40025s3200GP4lnWxC4R
i7P4RGEnC41CIz@p0W00WsoDOPu7G0804cF3TARmunF4ayF0WpecTt0QTA0e4R80
00QfSBjKfQbcqqlKMQD9q2zK8Tj_oQIK2Iv8jQfLQku4IIHQQHxKjGvbQXaKIFvQ
P9BrgauaKfqtQBfrBf4fQbcr_gKMQHfqAjqerfMogIqIwfeboyrAbeKIoH@IGhql
mfaIXqrO0V000BrYqg50022cjCYDmKu1mG@fbD03O510Q9EvqUP8s0i3R0xmUD8d
ug107mdJC3nBJUxoFFzl10W90100WQQ00unTWp8cX0VJed_UB_t0i0600WtYZM_@
uUBDQPcZxjYmbJecoa1800WL0000_4QyyIZL0085M6YD0xm6_FWVHnEq04HHrPBp
GEnC4S0unzATkq6qxLonqR00k@lSYP84SfX3i04kS2HPF60yvls@D010GG4o64AS
2RpQmKn94Ai1P4RmKn601W00G00H6h6aHi14001_2810400n6@G@@64Ri1207O10
0fJH00e@Vpo8cXSYDu_Vmo8cXm1Ce_yhY8t00eT1jadGKmZ5Wi1H1RGA@TbC0300
RWx@7C0005W200_TtWSYDOMO3cNM20G00W00WU0uWvdJes_4000WK4l10100p9sW
ZYDOuV9QDs00X3av4RGemdSZi1v4lHinUG00OCZu4o9sW8WHw1R3UREXfZP00G0G
6n6iBy3jPB1100WWaH2sG000uCA000fq2jqerf0WIIq2wfebojqIae4IoH@IPfrk
m9aIXqrwBhRHPBrYqgbMfroIBfLff5jJrdrMgLII9zaBjryLfIYJIbIQffbJlaIa
gLwIHhoOf5bIhaoX_bO9hAHB9bYqgnNhKYIBf5fh1jIz2dm1S00Wow100wpsC00W
Yk400o9cX8sI3200Wfm3W_GP6W00Goo6Wpt18EFfX000akC3LIRC00WHC100n6CC
0Oa900WPf1bGa187om@Vj7800WPC300nICSe1C00t3Aq0e3PXvW6C63u1G8Bzwnz
18p06YOetC3O8Y1TpAoWjzlDd86YC0vG6_FMY@3ou@eF_FU5Q10Ri4wlqOZ500GF
rt@@90GpHw1mZ_@n0008Xn00W_@LfBWD0mfpq@@6z0a0lM7Wu6O00VkNQh900W0e
303w_dXLJPmdxzTG09iTA3000W0mlpvtv08CW7w@d1@F70T2aG706q@F6U@ctT30
0q3W7nDuX@17W_@n005Wr9q6K@l4n08HN064606Q520g48XG4aGhG0G@@d000GAh
M9w1u100GYG7002tuaEAofd2Owe8dyAamCin200uEm200r_@SY8C4bo@nDyVS3@7
kn@XRyVKAtkzk4J@dZ@@@V@pnSH0OG2044102X00HG0W480G140O02@@@m@zNy@_
7@dVo@tlyVzD@F@p@n7z@xJ@tUr@hVzVwP@V_s@btz@uV@7Uu@VF_Vtb@lzv@Pd_
@rh@NTx@J@_Vqn@@yy@DN@@ot@dS_@7l@Vnz@Fy@@z@@V@@@t@@@z@@V@@@t@@@z
@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@
@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t
@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@
@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V
@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@@V@@@t@@@z@
@V@@@t@@@z@@V@@@t@@@z@@V@@@t@lt0;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V414 = 0;
INTEGER V415 = 0;
INTEGER V416 = 0;
INTEGER V417 = 0;
INTEGER V418 = 0;
INTEGER V419 = 0;
BOOLEAN V209 = 0;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
BOOLEAN V422 = 0;
BOOLEAN V423 = 0;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN V204 = 0;
BOOLEAN V146 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
ENDDATA;
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
PROCEDURE DO_FORCE_SRAM_DOWNLOAD USES TEMP_DATA;
V344 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_ICB USES TEMP_DATA;
V422 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM1 USES TEMP_DATA;
V423 = 1;
ENDPROC;
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L248,
L1188, L1198, L1161, L1164, L1167, L1172, L1177, L1150, L1155, L1152, L1175, L1176, L1189, L1220,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
IF (V42 == 0) THEN CALL L1188;
IF (V42 != 0 || V2 == 0) THEN GOTO L1149;
V91 = 1;
CALL L1220;
IF (V42 != 0) THEN GOTO L1149;
IF ((V422 || V214 || V423 || V210) && (V102 || V103)) THEN CALL L1198;
IF (V214 && V423 && V210) THEN PRINT "Warning: No active flag for MAX 10 devices";
IF (V214 && V423 && V210) THEN GOTO L1149;
IF ((V42 == 0) && V102) THEN CALL L1161;
IF ((V42 == 0) && V100) THEN CALL L248;
V419 = 0;
IF ((V42 == 0) && V103) THEN CALL L1167;
V419 = 4;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V214) THEN CALL L1150;
V419 = 5;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V423) THEN CALL L1150;
V419 = 6;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V210) THEN CALL L1150;
V419 = -1;
IF ((V42 == 0) && V103) THEN CALL L1167;
IF ((V42 == 0) && V103 && !V422 && !V214 && !V423 && !V210) THEN CALL L1177;
V91 = 0;
CALL L1188;
L1149:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
FOR i = 0 TO V1;
IF (A171[i] != 0) THEN V4 = 131072;
NEXT i;
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
IF (V228 || V204) THEN GOTO L1178;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V199 = V199 + A59[i] - 1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V203 = 1;
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L1178;
BOOLEAN V420[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V420[(V199 - 1)..0], CAPTURE V420[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN GOTO L1186;
GOTO L1180;
L1186:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1185;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1182;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1183;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1184;
L1185:
IF (V420[V201 + 1]) THEN V420[V201 + 2] = V420[V201];
V420[V201 + 1] = 0;
V420[V201] = 0;
GOTO L1181;
L1184:
V420[V201] = 0;
V420[V201 + 1] = 1;
V420[V201 + 2] = 0;
GOTO L1181;
L1183:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 0;
GOTO L1181;
L1182:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 1;
GOTO L1181;
L1181:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L1179;
L1180:
V420[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L1179:
NEXT i;
DRSCAN V199, V420[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L1178:
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
IF (V228 == 0) THEN WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
IF (V228 == 1) THEN WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L1175, L1176
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
CALL L1175;
IF (V42 == 0 && V228 && V344) THEN CALL L1176;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L1220 USES DEVICE_DATA, TEMP_DATA, L1223;
FOR i = 0 to V1;
IF ((A17[i] & 131072) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 131072) == 0 ||
(A17[j] & 4) == 0) THEN GOTO L1221;
A17[j] = A17[j] & ~8;
CALL L1223;
A17[j] = A17[j] | 8;
L1221:
IF (V42 != 0) THEN j = V1;
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1188 USES DEVICE_DATA, TEMP_DATA, L107, L101;
CALL L107;
V4 = 131072;
V3 = 0;
CALL L101;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
IF ((A17[i] & 131072) != 0 && A171[i] == 0) THEN A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
PROCEDURE L1189 USES DEVICE_DATA, TEMP_DATA, L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k] = 1;
IF (A171[V414] != 0) THEN A57[k] = 1;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN A57[k] = 0;
k = k + 1;
NEXT V414;
A18[9..0] = $307;
CALL L458;
STATE IDLE;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
IF (V40 == 0) THEN V42 = 10;
ENDPROC;
PROCEDURE L1198 USES DEVICE_DATA, TEMP_DATA, L458, L1188, L1152;
k = 0;
FOR V415 = 1 TO 5;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 && A169[V416 + 2] == 2 && A169[V416 + 1] > 0) THEN k = k + 1;
NEXT V414;
NEXT V415;
IF (k == 0) THEN PRINT "Warning: ignore CFM1 flag";
IF (k == 0 && V214 && V210) THEN V423 = 1;
IF (k == 0 && V214 && V210) THEN GOTO L1169;
IF (k != 0 && V214 && V423 && V210) THEN GOTO L1169;
IF (k == 0) THEN V423 = 0;
IF (!V422 && !V214 && !V423 && !V210) THEN GOTO L1169;
IF (V424 == 0) THEN PRINT "Warning: Bad POF detected. Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V424 == 0) THEN V422 = 0;
IF (V424 == 0) THEN V214 = 0;
IF (V424 == 0) THEN V423 = 0;
IF (V424 == 0) THEN V210 = 0;
IF (V424 == 0) THEN GOTO L1169;
PRINT "Check Max 10 FPGA backup data ...";
CALL L1188;
V415 = 6;
V418 = 2;
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1200;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1199;
L1200:
A57[k] = 0;
k = k + 1;
L1199:
NEXT V414;
FOR i = 0 TO (128 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1201;
V416 = (V414 * 21) + 20;
j = A170[V414] + A169[V416] + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1202;
L1201:
k = k + 1;
L1202:
NEXT V414;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 1 CYCLES, IDLE;
IF (V40 == 0) THEN PRINT "Warning: Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V40 == 0) THEN V422 = 0;
IF (V40 == 0) THEN V214 = 0;
IF (V40 == 0) THEN V423 = 0;
IF (V40 == 0) THEN V210 = 0;
IF (V40 == 0) THEN i = 128;
NEXT i;
L1169:
ENDPROC;
PROCEDURE L1161 USES DEVICE_DATA, TEMP_DATA, L458, L1150, L1188, L1189;
CALL L1188;
IF (V422 == 0 && V214 == 0 && V423 == 0 && V210 == 0) THEN GOTO L1163;
V419 = 10;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 11;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 12;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1162;
L1163:
PRINT "full-chip erasing Max 10 FPGA device(s) ...";
A18[9..0] = $203;
CALL L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN k = k + 1;
IF (A171[V414] != 0 && (A17[V414] & 8) == 0) THEN k = k + 23;
NEXT V414;
DRSCAN k, A29[k-1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
CALL L1189;
IF (V42 != 0 && V228) THEN print "Warning: Real-time ISP background programming is enabled. Ensure Max 10 device(s) is in usermode if you enable this feature";
L1162:
ENDPROC;
PROCEDURE L1164 USES DEVICE_DATA, TEMP_DATA, L458, L850;
IF (V419 == 10) THEN PRINT "erasing Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 11) THEN PRINT "erasing Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 12) THEN PRINT "erasing Max 10 FPGA UFM block at sector ", V415, " ...";
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1166;
i = V415;
CALL L850;
FOR i = 2 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
A31[k+22..k+3] = $FFFFE;
k = k + 20;
GOTO L1165;
L1166:
A31[k] = 0;
k = k + 1;
L1165:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, 350000 USEC, IDLE;
ENDPROC;
PROCEDURE L1167 USES DEVICE_DATA, TEMP_DATA, L1172, L1150, L1188, L1189, L1161;
CALL L1188;
IF (V419 == -1) THEN GOTO L1171;
V419 = 7;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 8;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 9;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1168;
L1171:
IF (V422 || V214 || V423 || V210) THEN GOTO L1168;
PRINT "programming Max 10 FPGA DSM block ...";
V415 = 0;
V418 = 0;
CALL L1172;
CALL L1189;
IF (V42 == 0) THEN GOTO L1168;
CALL L1161;
V42 = 10;
L1168:
ENDPROC;
PROCEDURE L1177 USES DEVICE_DATA, TEMP_DATA, L458, L1152, L1188, L1189, L1161;
CALL L1188;
V415 = 6;
V418 = 0;
L1195:
CALL L1152;
A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k+31..k] = $6C48A50F; 
IF (A171[V414] != 0) THEN k = k + 32;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN k = k + 1;
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
CALL L1189;
IF (V42 != 0 || V418 == 1) THEN GOTO L1196;
V418 = V418 + 1;
GOTO L1195;
L1196:
IF V42 == 0 THEN GOTO L1228;
CALL L1161;
V42 = 10;
L1228:
ENDPROC;
PROCEDURE L1150 USES DEVICE_DATA, TEMP_DATA, L1188, L1164, L1172, L1155;
FOR V415 = 1 TO 5;
CALL L1188;
V417 = 0;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
i = 0;
IF (V419 == 1 || V419 == 4 || V419 == 7 || V419 == 10) THEN i = 1;
IF (V419 == 2 || V419 == 5 || V419 == 8 || V419 == 11) THEN i = 2;
IF (V419 == 3 || V419 == 6 || V419 == 9 || V419 == 12) THEN i = 3;
IF (A171[V414] != 0 &&
A169[V416 + 2] == i &&
A169[V416 + 1] > 0) THEN i = 4;
IF (i != 4 && A171[V414] != 0) THEN A17[V414] = A17[V414] | 8;
IF (i == 4 && A169[V416 + 1] > V417) THEN V417 = A169[V416 + 1];
NEXT V414;
IF (V417 == 0) THEN GOTO L1151;
FOR V418 = 0 TO (V417 - 16384) STEP 16384;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 &&
(A17[V414] & 8) == 0 &&
V418 >= A169[V416 + 1]) THEN A17[V414] = A17[V414] | 8;
NEXT V414;
IF (V419 == 1 || V419 == 2 || V419 == 3 ||
V419 == 4 || V419 == 5 || V419 == 6) THEN CALL L1155;
IF (V419 == 7 || V419 == 8 || V419 == 9) THEN CALL L1172;
IF (V419 == 10 || V419 == 11 || V419 == 12) THEN CALL L1164;
IF (V42 != 0 || V419 == 10 || V419 == 11 || V419 == 12) THEN V418 = V417;
NEXT V418;
L1151:
IF (V42 != 0) THEN V415 = 5;
NEXT V415;
ENDPROC;
PROCEDURE L1152 USES DEVICE_DATA, TEMP_DATA, L458, L850;
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1154;
V416 = (V414 * 21) + (V415 * 3);
IF (V415 == 6 && V418 == 1) THEN i = A169[V416] + A169[V416 + 1];
IF (V415 == 6 && V418 == 2) THEN i = A169[V416 + 2];
IF (V415 == 6 && V418 != 0) THEN GOTO L1194;
i = A169[V416] + V418;
L1194:
i = i >> 5;
CALL L850;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
GOTO L1153;
L1154:
A31[k] = 0;
k = k + 1;
L1153:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
ENDPROC;
PROCEDURE L1172 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 7 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 8 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 9 && V418 == 0) THEN PRINT "programming Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $2F4;
IF (V415 == 0) THEN A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
FOR i = 0 TO (16384 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1173;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1174;
L1173:
A31[k] = 0;
k = k + 1;
L1174:
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
NEXT i;
ENDPROC;
PROCEDURE L1155 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 1 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 2 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 3 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA UFM block at sector ", V415, " ...";
IF (V419 == 4 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 5 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 6 && V418 == 0) THEN PRINT "verifying Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1157;
A31[k+31..k] = $FFFFFFFF;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1156;
L1157:
A31[k] = 0;
A57[k] = 0;
k = k + 1;
L1156:
NEXT V414;
FOR i = 0 TO (16384 - 32) STEP 32;
IF V74 == 1 THEN GOTO L1158;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1159;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1160;
L1159:
k = k + 1;
L1160:
NEXT V414;
L1158:
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 3 CYCLES, IDLE;
IF (V40 == 0 && (V419 == 1 || V419 == 2 || V419 == 3)) THEN V42 = 9;
IF (V40 == 0 && (V419 == 4 || V419 == 5 || V419 == 6)) THEN V42 = 11;
IF (V42 != 0) THEN i = 16384;
NEXT i;
ENDPROC;
PROCEDURE L1175 USES TEMP_DATA, L1188, L458;
CALL L1188;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT IDLE, 1 CYCLES, 100000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L1176 USES TEMP_DATA, L458;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
, L1150
;
V74 = 1;
V419 = 1;
IF ((V4 == 131072) && !V214 && V42 == 0) THEN CALL L1150;
V419 = 2;
IF ((V4 == 131072) && !V423 && V42 == 0) THEN CALL L1150;
V419 = 3;
IF ((V4 == 131072) && !V210 && V42 == 0) THEN CALL L1150;
IF (V103) THEN V74 = 0;
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF (V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
IF (V4 == 131072) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC B131;
