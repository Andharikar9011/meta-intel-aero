'Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
'Your use of Altera Corporation's design tools, logic functions 
'and other software and tools, and its AMPP partner logic 
'functions, and any output files from any of the foregoing 
'(including device programming or simulation files), and any 
'associated documentation or information are expressly subject 
'to the terms and conditions of the Altera Program License 
'Subscription Agreement, the Altera Quartus Prime License Agreement,
'the Altera MegaCore Function License Agreement, or other 
'applicable license agreement, including, without limitation, 
'that your use is for the sole purpose of programming logic 
'devices manufactured by Altera and sold by Altera or its 
'authorized distributors.  Please refer to the applicable 
'agreement for further details.

'Device #1: 10M08SA - C:/Project/aeroboard_fpga/INTCUPB/output_files/CR_FPGA.pof Thu Jul 21 20:11:10 2016


NOTE "CREATOR" "QUARTUS PRIME JAM COMPOSER 16.0";
NOTE "DATE" "2016/08/15";
NOTE "DEVICE" "10M08SA";
NOTE "NEED_FREQUENCY_CONTROL" "0";
NOTE "FILE" "CR_FPGA.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "031820DD";
NOTE "CHECKSUM" "02661611";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A92, A94, A95, A105, A109, A111";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "67";
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
DO_INIT_CONFIGURATION OPTIONAL,
L27;
ACTION BLANKCHECK = L17,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION VERIFY = L18,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
DO_READ_USERCODE OPTIONAL,
L27;
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
DO_DISABLE_ISP_CLAMP OPTIONAL,
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL, DO_FORCE_SRAM_DOWNLOAD OPTIONAL,
DO_BYPASS_ICB OPTIONAL, DO_BYPASS_CFM1 OPTIONAL,
L27;
ACTION READ_USERCODE = L25, L27;
ACTION CHECK_IDCODE = L966, L27;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
BOOLEAN V185 = 0;
BOOLEAN V193 = 0;
INTEGER A12[1] = 12;
INTEGER A105[1] = 0;
INTEGER A59[1] = 756;
INTEGER A60[1] = 13;
INTEGER A61[2] = 51912925, 1;
INTEGER A13[1] = 131076;
INTEGER A147[1] = 0;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
INTEGER A109[1] = 0;
INTEGER A111[1] = 0;
INTEGER A125[1] = 0;
INTEGER A186[1] = 120;
BOOLEAN A96[1];
INTEGER A97 = 1;
BOOLEAN A173[1] = $
0;
INTEGER A169[21] = 
950272, 64, 288, 1, 1146880, 1425408, 1, 475136, 950272, 3, 671744, 278528, 3, 131072, 147456, 3, 131072, 16384, 0, 16384, 0;
INTEGER A170[1] = 
0;
INTEGER A171[1] = 
2572288;
BOOLEAN V424 = 1;
BOOLEAN A172[2572288] = @
0WE10u@@@@3q6aDm@0yl@@@VFKAIOx@@xb8S2Eu_@3kHES47EX3kW3y0@@@w@zz@
tB@Flz@xw@hx@Vku@nD@@jw@jT@Vjy@fj@@i_@bz@Vim@3Ry@lA@lhp@tAz@iM@@
gs@hwz@fY@Fgv@Vg_@ck@Vfy@JQ@@Zw@le@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@
x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@
@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@
@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@
_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@
@@_@@l@@@x@@@_@@l@@@x@NQ@@FK_@e@rq@9HuX_dGR8E6m4W_@bp@XR5hioA@@@
@6@@@z@u@x@@Nt@@@lp@@V@l_@f0OWt@@V@@_@f0OWt@@V@Vw@_@@xz@@@xt@@t@
@_V806ut@@t@J_l@@VJ@@@@k_@@z@a@x@@7C102y@@@Rq@@t@J_VC06um@@t@N_V
A0641W1_@@Tz@@@xn@@t@R@VW06Ox@@t@pRkl100@@@@Mz@@x@d1@@F00000I0WW
80G8408220a010AWWk0004a00197O008W0400080020010S2G208FuAG8G4G00X5
mGL0UW0280140000W04G01N0OG606C7m3@0aGK0CSD03V3y00go_W2yeT03Y7WXO
1O8eWY0G00W0200140000801G00rKO028eWh3CG14G02AW04000000GMhm0bMA0n
4aWG9WWO2sGfb2WIBjKbMA000WILQfbU1W1P0OWI10W3COGfKV900eqm0C89W4U2
8X91COMY40Ge04nG2XCmGG1980008O3300f0KKn60eqI1GeXAqG35000WG3DqB0C
83034Qf0KqH2A0000GfW2KG15eW2A005qA0C8m330Ae0qDG8000G00001000Gxj2
800018W0G0280KAI8094G228X000018W02G21061n008FP0000mAh0qdX100WKbA
ge2L0200eYAKHDLeYQgf0OWKJjrW2O000qAKH5LeYAgG50Kd0m0e200000000ge2
WMQ10000000100800e4000Y8034n4Y8W04H4H8Y02G01000000600000000_@V02
00im2B00000WqjW5MO1Bim2M000L0OGO998H0000@@F0ipEsPdT0000OdTsT1W1P
0O0x_7WQJIG20000_tUsRlzitUx1WzsN1W1ndO0xj70@@FW00000W500000GQ00G
u06q0W1im2BOHPv4JG2NfO000uV@7000mRlvD000000XtUxDlzsRUxD00mRlZ0mW
ILC00X0000uV@3Wtx0OGF06i6W10mRlvjt@FlI2L1OGa06mR0yEKW4g2m00ul@00
00000U100000W200yoBUvbNB0KG5064dW1000G000VxR0000MP5h00000GYioAhO
bLMnAh000MPL406KzY10850000@xV0icrMRDh10W80Cu2030WrMpQh@EBY400200
00_srtVlxl_QN3mgU600SzrtxwxltrN3mQC9u_x1uG630WL00000Gg00Gy06q0W1
14OGi39u@@1000e1Dq000000AN3DeX6QG3Dq000eH406CHZ100W00400upF1Wl_w
9Fz40W0WdyqJFvhdUoN00000uBVzrNV2000000000010020800WFzqRUxjdyqJ0u
jtUoJFzatU2GS2FG300000Gk00GZn1Cu1W3M8mWm9C8E13eX6Q00G0005h1DqH3Q
eZEq100eZEwG7Dq8qX700r2100yEq13oS8XO7cXt0yTr26G300000KCG0GZW2m00
0yhV1000Cn4c00W000iQY9co4JCbfc200CrKcQg9C100KuZ10050000@xV0ksrNV
jh10W80Cu2030mrNxwh@Vwd4g2mWW0Cmr0STK09K5W1T3O000O200000WLW0m4JO
Y9cO1W2g0mWmWC0004cg10WjECe@VU28o0ewC0F4jX800WbYK10WEMfH94BW7p7r
200WBO300n2WLO1a000WugfMiiZ04XGrnDm9K04000000W0WgknWdYCeVA30W08C
yq60001Yuo040auk3000W0W4O13v0OmL0C0G010002zgF9000000G04000002800
000FzoW90C8q7300WGgCu1u3W42tm00005e28000W0GHL01000008WAG1000001e
2A02G000WKI5W00000W2x0O00e2gR1C0g020004Wa3C00080LKAA00000eYgYy8X
74yOa03YFuXakIu1X4040phT00u113YyGB8x80@drIzK9icM2000Ugr9XG1cPVD9
00tM5A0K15CsE9d4eW400WzSC004eG_q3002ux704zfBVaGe05HkJ08eWb000nv0
00eX43000GHL008SGF000GJD00mPo3mBXUq8I2X1O0Lz6W73F100W2d0009u60LV
CJLYL00fv8N06Q4nce2m8N06YQy70uDULFc00GN_s7Z20AqLm0T10R2Bu632COC0
WYWjOY4000LY100wjU0UsCAeA600G4CY50hMGZ20e9QO1K1000tZ00Go0C4jGK40
00I6WXmK5Q9A3Wg000WlFCi0g000SR700uh0dYGm0ZlB0Vn65qa6Wm2SQqM300yt
dC03n5GLo0CqeBI000cjC004vb1000q83004nHKa1000z10y_RKf2m0Ob5WNXn00
04GvmC000SLU00GS0F000144G00W02WMGDu7N38W00000008W000000G0100uWD0
0000W028SWG6E_1h_F0d7d0Oa3W@ZF9B03aRd0yby9P1m0000QY000HBx100uUh2
00vjPGO0a000et500GQI9GO008oPF000df600u6E3000mG800e6E3I5qWXaDG000
001GWTTD0001muW600Oa400mfi10W32P0082G2d6Khi101014000000W001000SF
uIfJ00G85000080400000810000I08kJ3000I000WX40000r70000SytH8000000
yzd1827@T48y@xG80V@P0O_vZG42@@E0u_x1G4cV_80nW7000k@VCk138E004Nz9
006n100PhD008wwJo2W10Wc2zO750GJ1000sXd4Lg0C4NWJX2QGQK6Ox31uByhIf
oW4fO8cS6MZmWW142R33mtvNb6b116WHx9IiPM5Nip002Ia4fOefTaIZYXO1gOgW
DgYt38A50X5yp32L0W5b9ufk00QY6yaJHEcWP10WGED8HA3Ys7fSdO8M0i2BmrWd
SAGL3Yfo0pl40nK5Bqa1WOgeADA6YfYA00hinKP3Ob500iw@fHP0000WqeC8Ec40
40000G0100G02W0Y4fC8DA6IaoWVfR10m8NYKC41LBXJHIoX90QH00056wzrg0QH
085A6IpE4GBC0X1q2O4200WLjfHz040000080v5Rm9x6i7V2fHP00W00G000WHI0
IZwXoZJ84C3QCE10014a200qFE0a6b1VVc0W00WE0C090g@EL900Oa000W8uytH0
0d@Sa0yvl100V@DWGy@h10YV@EKOyxZ00cVV84u_p300d@U02m8E00mBYk4N5Q7D
0PAdGuKga6b1XJfojvguyT1usv4YfwsuHJB6E3oVl80WbnnZ_VyeobtGHH_a0H10
0Z4A0nZ_VGeQ5B0MX50Mye3tSoI00WGfF004FwsHWkHye2jc79ObO0o@DXuHLCIq
7Y7DgqeC8HA6Y7rfMID0010GQK64FQB_@H8Y7D4V4Wtc600Y7jzwxFf@V3000spI
008Cr7AyfeuHP0rP0Gyer5C0OnZEsq@maLF3nZoMi0O5bQHnZsLMPB100000mkVy
e@7bgP0800YbNBhv50XuxA0100e9300OOwY7rL008000MP100ZZG008UKi50004T
F3HKZHyeC00_yCUqd10014FA6fxRGye68mY18Uq0pgdXuHtRzT30000OTO084VaI
58XGyV8P062ndA0WgpH_Z400WBO300n2WLO1W1P718sSXO500aUV2S200Ar79eu4
00mRyY_VcFYDe@@70009wJ008g0gWgp04LWDn24Ik4C4B0MnZj4z10Wm2M203UQ@
@900aqEwVXWas0001ae@@42hs00002TLdmpi9aTI20200oecXghDGV33Gqr64JG2
00100140W000004004GG020000G00G00180000010mw@60001OVS3044004G0000
0IR06aRW16mI0cx@dS3I00G0GO2600400000180W00G000004WW020010000G002
8WMkD0002ujz608W00G0000004W0089TR080020Was0008e200ijO2j7aGU29asT
2v981002Y_@D08H_Na3CSdG2Z9OmY0UCmG5GIR00mR0000004G0H@@6014Gu_V3G
0144@l14G01Qxt014G0BEO0014a1uD0GG0HWd68Yg0Oly42c8XN2I862O0008GB0
08x06gy762@60x@d04q2W_@p12Q1Gc0C4HGE0W9010qQ200Wn8I48GCYC3m4g860
C4PI0Q4D2086H7100H6306Yi101ZT31008p00m4000000jcJBdW000a3uD8Y232U
t00G000Of0JUt0320000QD1000241WMW0GaG005mI40W8Ca0Y2S800e2E2W01F20
GKW30ymO10049a11000000GMZ8r5IKt3mo@94A0K15uKGwi5C0O16GB000Qg100L
@x10081k10018rO@@Laf43HDv4qb7WecgeFd42PL804tmnO6LY@Cawl116S5K44W
03C8ar@3azXK@@9nV3IzdXGMrApVdIydXGM@FGMm2t7iGMf2014GaiEbuF32LV02
Prr4@D8rV6w@dXdzt8@V3exV04ogJn_NHY@90WLZEcVR2PDXWLF9rV62Pru4@J8a
L9E@t0G0XKf_dG8hg0k@VCaLC0t@F6oQ2yUQ02P5fMJh8nV3000I54XAncEJ8hO0
W018cSUe000GhY08n@GQIaXk@9HRu2Gg@C434Iz@dWRU4W8r89RzSm1l04rM5xjZ
4cI2WK@POqVXEAt00WgO000Vr0004MQK4300IzFX2xN2gY100Qnmi9P8SVa000TZ
C00u3YYw@F100mvW300IzdXMVIuzgVIyd1d800Jp75K50WK@P8M0i2Bup4@D8rV3
_cp9qUC0FQdGCLq6yqL00DP2U2ZOgGArV3Az@aKzP8EW408WG02002G0W0400000
018000IytWK@D00001800W4@D8r@427Oc8eQ10m8Ng@9CZ899_RGg@94wV89_dW0
00Wm0810NJOg@Cq@V89_RGg@9aul1f_p0008WK@DeVP3kst00000WHI0Izt000G0
PVdGYKC00009rV3004080008nV3_ht0G8509_R000O200008100Iyt0081000690
00_wL0000mvF7X000000mtV3W8S_pHWutl3H0yzt0Wvt72H8_zx0mvl7WGO_zX0y
Y8000S_x10Yv76m8E0nytIY@C4k@FnKXHE_C4J5Rnh@JS1K5lUi00P7ZYt9eu40f
_pGyiP6ahMf_RGf@8buF3n2WLO1N10KqFqVaIytWK@P8w_V2udXOwd10W0GY@9aw
l1TyRGY@640l1J@O0008WW8D0000Og@600W08rV3020008WW000008004WCWb000
0W00G4AF3X9yJg@60280eWV3W020Kml18W00G001aGa1JtRW020W4@D0W02Gyw60
88004000001a4@D8wUaIytWK@DOwl46OeY4@D0010qFWLaul1vGmm@F60288OGI3
WW02G000000G0028W1_D0002u0@608W0wVV3sNo00004W02000IQ300YGL00mB1U
43H809o@Yuln82_9bV38yR000GC2P300c040O4PI04cH8HW6XE100JeIC0Yi102p
8q80GGs00W94D60O0DD100sD409Ddmat6000104000001WXFD0200m056a_l1MAG
00GW0qql100YmW4WWG0e10Lu800G1M41H1S0GGe071WeG64088eZ00PQ000ECM0c
j790Wi6f_pGe0G5aUH15iK0xLawF3130MW1n2Qr088XMWYJ0awF318DF000DE000
Xg757000Qd80J_75r87Wu2w2Ac1GS16SuVH000QYTD1000gC100Ay79YQ40n2WLO
1IqqhG0uRSx@F10WgX1_Z4000qS3J8M0i000eo000ekVai0s04B0MX50R@@90DZ0
Ok@eWcH000XREk@eI5WXu2Ieuab00g6300Kqt00GOpHnO00mzV2mO@H16B18MWMy
4Z0y_U2WnI0ILDXNLDuzO3W020Ssl18W0042800000W0203B100lt60dXV200WHc
1009wd0x00Wg_z000u5T10Wm0W9f@4OB00q@l700W8YHCXm0W1000Dh10WeP29QV
3000G000WEqH3EMrWN_D0101GDy904000008gG10W4@D00003R00W_zJeNF30100
Uxl1000WIwtWS_DG0WRF00OMw300jhQ0W000820000200002awl1Ws2000nN100e
2DggiwgGL0o59KLRgGYkAhwKSbqLr2Lbk2hhALkALLPLDgIvwgWghJ5OC700G8LX
yhYtu6Wz_J0Cc3ma@d004Gbf000Zv2WH_Z2gc200IWtO1mw8VCItdaOcm000qOKv
9qlFIf9nGeKmyEe1XIH2kh2W@_jPPWD4H30a@43JvZ40GraydO8WVa000@x@@@de
6100_@V@@@@B0KG50Aa205H1yW@vWW41CeNU3YxFdq@zON0RU3mcF@VWB01G@@9W
320OYFjk5Ohk@9174000U_hT6cv4XI1000g5008o160001qQmmHEK106TfeAmEf2
62vW@87_FMbRhGEXvZVuUQ3w1uXTZ8PYv4w10Ze1a8XWDw@FX0iJeiWAwnE10000
00WsX300KYj11vOmbKC4rf4fG@maq900408CQ9wBWXEfV0020mPLR4uT2L2yG@@9
4k03z0WH@@C0000174000ynD00008002w@F1010GTWRGRs60080O6R3W008a3W10
W00o1WXknD8SS30404q_G2400Xg@sWOnJ040GGLo9G004ePW7g4W120000W00Y6m
WO4C8Q06UDtWPpDeIWA2Ps00Wm02700EGtWeZOeB2FAheY4AmeNXA2j0ZMAO8X0I
ARFXGBy8n930mQh6ap@vQfI_Msqbl1dWXHG0I0G00uQV36ttWnl81740004E__@b
uRU3kMvXtICOl49Us@a@xD0100nD8FiMm3hzln4Y6yXO2JhyGA1I000SANm4Y7pR
SG40H7jD008Co200P7mGyOOZ3Y100DOwGVE5@79v0MHk8FaJI5BYpG9rX000uqD0
0Gs1CK18suWG000Ef7T8j5KI200ObmtJ000m1I00W_OgOzgAkZnc_OIe@V90O004
wF9FwomJNOq@l4uWK00Wy4iif7n2CJTia0020uNZ7gnnZm5mev@D0007RH008cp4
G600yA@3HEW104GWa@p10G0000WmSIb8xWMYS06SG1000Gd000O0030e_V3060W1
0C0060OG90600G0000W10W1WG0Ce@V3W30m007003000060000000060030C0060
m00CG80Gqkj1004021u10m10m0W1I681W0060030S0060W00G000I80600308403
I8mWG0O8X03O00C4jP2W10O0W30aGm308vIJAmWG7@l855l_@aBSV00ZXOKk16Sm
IHvwXzK1Wuu39DNdoDmC00000m7f3F_av8heo2K100iZL00mPY2GdRXaVyabMXHm
1F000gt20000G4000X0010010300W00040101800Y00G04100180000G0W000800
01800820G84040H82G000200G0800W0088000G000811010420204W0004310080
0Y00W141001eo@DuBW404X0019210200W80000100000520004400G8G80WG0Y00
0880W0G00020G40000H0080203004000001W180400W004100184202W000iAW10
W8000GG004XG01G220202W000801008002000xi200uNcW3O0304Gm1F84000080
e000YW3Q404Y0000000A017mW08XmW3amp62muuO30EW700WFq10WIrnMNw0Gs1C
4Ekq000010W000EW700aOkw94vWtO2G0w@VrQdh00i06000S9300ttRC00039100
v6mmf@67rW1m8900G00MEXkW00026E1pPB0z@d0s05Wv_VEr03alu0Cs@pf6m000
Wrd_J6008AM00WO3mEiX@ZeuM000xW600gf@P0CCA170UW3F4yjnn@d0_K1WI@J0
Rm0GSFI36000OH3mm_FdQ03000S0B00q@lPP3OWN54000800402Qls000040020G
0040400108004000020W004002010W002001010GW_@D020W004002010W002001
000W00G0010W0ml0IeEV30010W002001W00G00fh80@4RGq1CKiFO0400WDS000p
NRo@q00sm100iOuv4w@7C000M010027OC0eryf3mGa2Z1O008T06gy7Cu0400W2e
000800G0ee_4kad10100F0O002004004F0SG@@IG00G00W00050WA1OOPU6g4m0y
4D0L2O00000u09013O0004WfsD0800020000002NmR0040001000400000GSVl10
W00kct01000XtRGi_904000G000000XHxD0020mgz9800007G100OibE_z8oU3AF
mWVyPOM@7sotWTyb0001GgSCq@V20W0Ggj@X1vh80R32_l2000Gx_@080WWk@P00
0mfe00004000GhJ10bO3200WMbR9BBLBfbc_ArIhHYMeB5fhblMJ2bGA7INBjas5
dWKAIZMQdIBAlaMaaIqBNBMQfM99daIg_MpIjU9A9LBfjsNArIBKgMf9DjEbbML2
jIF5QLclig4baKEwh4QbsBEbaKak66u300OfM8Tj000000EW3mCwf17m100JXN4x
fbD030WL42WFP0O@nn6WTO3FqQBmhuR00K7fmUV8Uvjp9cXub3@Gxgp8sW87660G
5KWlU7jy@nzMQK3C7th4XBdGDb9300100i2000m7X200rp@C0O5WSYP8s0i3Ru@@
z550i3T45Iaz5mvso0sX600iYnHVXTcq6alC3nzATm1LdHC3XBNDSW5WmbP30lAu
Pm94Xi1X2dmsi6CLS2X2RG6n6CLi1G080040Gang1P4R010GWl0I0010GinFq@l1
n6RW0m1M00GwK400YEujiWJu_Vmo8cXm1Ce_yhY8t00eT1jadGKmZ5Wi1H1FM0oC
00i1k@Vmo8sWVtD8dO3c5sWvbb00400800e70EOKx4gjF100085nR0G00mSYDueO
36_NYMZD0Gu0PEn68000CKOIkHsWSYt8sOC0GW00000W00K5X10WGFJ8z03Y0keV
nDujv4cEc10010P4RmkmFqHk440002I69O3100Wpe000aIBqIZMd20A9HBedYMAt
IBHYI897zBbbMx2dGA5INhlik5bjKBIhMQbMBBjaMbcMqELVMRfM99bqJkqMpNbA
9E9LAfbcMEzIAHgMfB5jAZbMKAjIA7wNYbig4jaKAIh6VjI9AjaMak6qArBS27m1
00Ah70088OvYGcjCYD82PsYDWjSYP8s0i3xbvm6aEitDQgqumAV8LQ3aOB04lCv0
W903yruSYP8mt@ZM_@8wJ30heSSlIqHFpO3K0o9cXmbh6h00GOg9hTl08s09UrVu
abDeqM3YDWP6400XDiTEn9Cs_pPzoGm1WdBj1TqdSGf600_Kfhq4YxjQi130nzoM
uor17O182Ps0mh2_FS2z@RGemF0001OgO34001yFi1zaQ00G0080W00G08_7sWSY
D8su402014rk1h7RGin6aHi1h7RGq1i10iXBdO627miSYP8Aun27GYeyNA0P3000
svU008dO6cu7CO3C018RGw@WLyi1007W000DfN000200IHm90004e@@4o2s0000G
b2R0800WPXDe@@7_Cs0W00Wj6RGpkIqQi1P4R002004000000S09004AC6dMR010
0eCYtOgQ6YDsZCYD0Zj0mlrF41iGz@p0W00WsoDOPu7G080KqD3TARmunF4ayF0W
peUYs0QTA0e4R8000QfSBjKfQbcqqlKMQD9q2zK8Tj_oQIK2Iv8jQfLQku4IIHQQ
HxKjGvbQXaKIFvQP9BrgauaKfqtQBfrBf4fQbcr_gKMQHfqAjqerfMogIqIwfebo
yrAbeKIoH@IGhqlmfaIXqrO0V000BrYqg50022cjCYD88OgkuMY0wD0xG1Glw9WL
40Ocuap8cXO3mEi13on@XqrPOJy4_ueYWARajb3GOlFaJSr0W3up9cXub9FPwg10
J06vWnP4pGWl@7jy@nzYNK3C7tR5XBdGDb93G000h0000y9quvb6h00GAiC4R0sX
DyV0@YYTe18Y29gjrO000WPBRWLC6Wflm60i3T_oC4tRr17KT6nC4kiqP4RGuoib
qh1d1R0SW500004X2dGdG94AC3400125s08002@3RG6h600W00G080040ml0IG00
0GinFyag1n6R0SW5WSYD8wWto9sWv@1BZO6278XwpfAYy4eT10qIU2H1F60m2aeW
DeaVmI6W1O3C0z@360e0gVtJ00u0qim9q@l4800800G0y0W1pFdGjz90000f8U30
200cJi175Rmm@IqQi10278p9sWGXFv6P3o9UZOZn00120000020mlS5002zCXq3C
82uYUmsWtcJOwO60040aHi1x2@GRsIG00088PaWD4000EZ200GAjGBDQTA0ea4jW
UAQfSBj49AXaSqlKMQjBS2fK8Tj_owMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvI
RDVLgauaKfaMQQvqBf4fQbkKqgCMQHfqAfSeV9MogIqIIf8jQyrAbeqIQHwQGhKl
m9S0700eiU00WAvC300aBA00WSYP8YjqW000OAy0eCFZZDu1Ny60nv9D400WqbP8
iNcZDGwmUtefIZ3hyXKfDGYj0Gyoa30c0CmNZp9cX0V@FQv@ZeFD0iYonzAH7zCZ
DG18dO62NkQi200Xfcisz2WO3auL@XJMsWIRD8s0cPG004smsv4dmOxFdrB3170U
kq6qHVo1bQ00uJbkIJ8ktgn6C04tBRXBN7SW5W8aP30lAu@m9q@l1X2@0004WfYD
G004m@m6qJg10010W002001WuVO3o9sWOZJ0804GKx6iUi1n6RG6n6iUi1H7aGex
W100100O3700mSh100r@RM_n6aJC3H1FMu0ZbHC318R6i16W0a7h@@400E0bJi1G
00GA2E100W0z@dGMm60000gKO30100CBi1z@@mdn60400irO3QsLYMZD8ZO30G00
W000000W3810WGXnuqQ38000bHy6JLpGinUaHi1Oi50_j_X8W5g@V60400qMk1B3
@0201WYkPeJP36F_XWad91P60m5j@4j1qwK0G9sG000qIvMQfIrADffVfiqQIe5w
fGwQzbrae4aoHQrIhqSn9aaYqqYsfQXoBr29faUoroIMgL9n9fIflrMIhNI9IrAD
hzLfiqYIfLQfHhJjaLbebqJHBbvhLAHfaaZ_bWMfVXJ9b2fhn0_000Mg5fLB0044
CRP4RWfm3WX_lAeQ9C9M0aJC3j4dSQlC4RmdfXNHn@OOZK18iX7gakt8_JWw81GO
lFCazptuR00u0U00Wrq500YNMzafh60C1OoqCivkkP4pGWl@NoFd0uaapyDXebP6
0i1QK3C7tR5XBdGDb93G000h0000y9quvb6h00GAiC4R0sXDyV0@YYTe18YYgJft
WibD0yh2m4MO30sXEVP6YxjQ0CCALqFS@@FWO_18dO661@vCYD8SP3g3qCr_F0d1
d0SW500004X2dGdG94AC3400125s08002@3RG6h600W00G080040ml0IG000GinF
yag1n6R0SW5WSYDe@Vp0mh2c5C3p@3M6nC4EG2rdJL4v9Gx20eby4Y2UC0W58H1R
M0oC0RW1e@Vm005GzxU2007Wc5EX_@b01001002W70COKx4gjF100085nR0G00mS
YDueO36_NYMZD0Gu0PEn64Ay9t8RGEnR4RC608G00000G00_bh00Ged9aUW1H0dJ
g1IysS2J7p00W0WCYDONu7w8N2200019Z4iX000mPK000If5QfHhJ10bae5qJHBb
Rfb8H9aaZ_boIhTXJ8b2fhrNMtYoMg5fLBjIhbbMIhIJBQdgFhjKhaaIw9NQhvhI
b4daAbqIJBdU9b8LhqbYMbnIBAbM9b3zBnIMLYMIA5fLZlMf4bMIBIN3Qbw5EX3u
000br300q_gP00WSH100aJC3Hib64000JX7013zSoo6uYt08EFfX000akC3LIRS6
n64RWqXzkHJb67Mv3fIRW4R1Wub970C1OWl6dJC3rq3S6nC4jiqH0ES4z600jlBk
N9wedPi1A0v4pGuoLZL00OO@ap8cXO3mEiX@Ze8Mi3D0Zj@SMlC4S0uvIRG7z97K
g10WFLwADXuUh6Rm0GSl9qkFpf6m0SW5W8aP30lAu@m9q@l1X2@0004WfYDG004m
@m6qJg10010W002001WuVO3o9sWOZJ0804GBs6iUi1n6RG6n6iUi1H7aGVsW1001
00O3700mSh100r@RM_n6aJC3H1FMu0ZbHC318R6i16W0a7h@@400E0bJi1G00GA2
E100W0z@dGMm60000gKO30100CBi1z@@mdn60400irO3QsLYMZD8ZO30G00W0000
00W3810WGXnOOU38000bHy6JLpGinUaHi1Oi50_j_X8W5g@V60400qMk1B3@0201
WmyPeJP36F_XWa@10S6rix6GhJ10bO3100GBbRfbALhqac_boIh9XMed2fhrNMJY
IGA7fLBjIp5dGIAIJBQdg5AlKBaaIw9NBBPfMb4daAb_MR9jU9b8LhqisNboIBAb
Mfb6jErIMLYMIF5jKclMf4bIIEwN2Qb_5EbKAak63u300OfMaMj00GGmibHi1c2F
06wFji1O0h80GBn9dsB3n6WTO3O7sh1v4ND0u0_SYP8UPohE@vf@D00C18000KJ3
00Fk3S6nC4uR2zqtRvj6W5m000yMSqo@7tRf9IpGSlL7kS2rKcC0100i2000mdGZ
dNQi200v4pGi1O7sm@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIESP30mz@bJC3X
WBDSW5WmbJ8Axn0WF@rPj18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrW
CYDW008mN090W008su7w@tWOZDG0u0B008TA200z@RMwo6a5C3t@3M6nC4EW1rdV
L4v600jBeby4Y2Ui0aD8Aun2Gc10WDmz@3M6n6yxk1v4Rmim6Cli40W000100z0m
1ZQdGjz90000f8U30200cJi175Rmm@IqQi10278p9s0100WX2JoDo6aJy6n6x110
miO1J8dO3Y06fVnDujv4cEc10010P4RmkmFqHk440002I69O3100Wpe000aIBqIZ
Md20A9HBedYMAtIBHYI897zBbbMx2dGA5INhlik5bjKBIhMQbMBBjaMbcMqELVMR
fM99bqJkqMpNbA9E9LAfbcMEzIAHgMfB5jAZbMKAjIA7wNYbig4jaKAIh6VjI9Aj
aMak6qArBS27m100Ah700eHHp000WPV008dO6YOBD8000H8pMRecbii1wx80YpJQ
8000fBpGOlC7RWqXzwHPlF3G00CLQ3aOB04lCv0W90ZS7uCYD8dO62yz@e6u40Oa
Kpt93WqfFkN9wedPi1A0v4pGuoLZL008aoa5vh04R0pz@dGooC4R0pIXL0IeFXm6
m6xG3mOxFdHC3170Ukq6qHVonzQ00uJb6VJ8ktgn6C04tR2jxpSg1C07O182Ps0m
h2_FS2z@RGemF0001OgO34001yFi1zaQ00G0080W00G08_7sWSYD8su40201qYj1
0002YDEXCYDOzO3YEWD0WDSv4pGu0cbJC3H1FMu0IqI_InWR000mEt300v4pGD@W
1RW180P3AM7iwpD00u0400e9z200G00GA2E100W0z@dGMm60000gKO30100CBi1z
@@mdn60400irO3QsLYMZD8ZO30G00W000000W3810WGXzW000K6nRCuE3n6xH6n6
WnM0uzz7Y0Me_@P0G00GRv6iCy380402pdXEbDOyu72I_70mPKpkR0jE50KYD400
0jKkbMgKjIJQwNABjc4QXUAakMVPD9A1fSaMjqADNS29f8DjeTgMeyIjGIAfdSji
abQLISIgKwRjbqwbKYKjIpQVLABjeKQbMQqwKBPL9Q9zKqIP_QbIKA9veV9eLwNu
KIfGwQCWF00WbQHQr20011pM6n644CRP4p0MH0WPYJEjN6YD0xm6mEiN3o9kQ0m1
yv4pGyoatkypJ@R00O2G000ec600gS7uCYP8mt4goktY@D0BW100ujueb@FktIJa
cXuUhESv4gfCP0200O5000WFX6FlqO500IybXO3mEiX@3uNKi3D0HKKTsoCaJC31
70USlIdBj1zUbSCz60Wx@BdO621NQu0B0XBdGKsZ10V_hzV3G0044Xi1X2dmsi6C
LS2X2RG6n6CLi1G080040Gang1P4R010GWl0I0010GinFq@l1n6RW0m1M00GwK40
0w@tiCYP8dO3k@7iCYP8S03gF@g8oD00QNGBv945yO18RGKm6aoVN93m00m6u_@1
300G1e00WVtD8dO3c5sWvbb00400800e70EO_v4gjF100085nR0G00mSYDueO36_
NYMZD0Gu0PEn64Ay9t8RGEnR4Ri74006p8EXSYD82OaUmsWtcJOwO60040aHi1x2
@GRsIG00088PaWD4000EZ200GAjGBDQTA0ea4jWUAQfSBj49AXaSqlKMQjBS2fK8
Tj_owMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4fQbkKq
gCMQHfqAfSeV9MogIqIIf8jQyrAbeqIQHwQGhKlm9S0700eiU00W_iD300eeB10W
SYP8YjqW000OAy0eFKc1800aii1uyT0YpJQ8000fBpGGb9Z5008s0f100zeU008v
06YRGwa3O8kXg10ZC5skkCp00A@F1CpC0pp3C0SFeG3WEe1i100K3700e@@F1W73
5M0i1ByV84@7On@1Xi700WEu200ZzxQQ16GAq0Oe@OJB81W000m45000000G00X0
8WG@@F002WG001G@@600W20440G@@F0144emH3A4mWt3V0008cX10W21C000GCq1
0Wo@z300mj100W_@D000W9K10Wo_l20jGOq0er@V200RqUv7C00mWS700270kWj_
FCi@3G3F0007W700gh7RS0F00eBTYF@X6q7E0T300096th10400YSmRC1800eBT2
w7O000Kn3c000W5W100VyRSc160Za0OW@apCWXe6O6RW2GK3Ct@V2oNS0IEWXmcb
EvW4AscvO3CWtT3GO3LJKM0eR8Z3Hd10000QCG06H@P000xW6002RmWCig60i3D0
0OOe00017uTqNI30000W00800WDm000uJ506x@P000OY600oxF1m000rz@C0m1sa
3O8kVm000lIG00000000800400EW500004002010W002001WE9I010G002001W00
G0010W0000G0080W00G080040W008w@t0010G0G0080W0y5G200080040W008uB0
3EKr0002001W00G0u0M00GwA2Gq1lr@l1m6E0w@7C0OX1X30N@@900i09jmk0000
cCW1ixU0cz7C0eryz@d00m6uG61300qaU100000004G0000u0800000800G0WCCC
ezV600100200w1W3_YCXs8J0000I@l60400yG03g4mW_@bG00G00W000X3a000U4
D00CrO2004000G0000002000800000W00002_ea1000GjEQ00W0WjEC010004000
00G00001o3m00200W000000Wa7W10010cjq0200ZHGQGed60A00uAo7AFGYA2C0G
20G@@C0080e_u7_oqWx2C8UI6YAm00001NAym919q@F34000U38X_@JOv03W0004
lS2z@R00WGWS6aOmp4WD4000EZ200KAjIBDQTA0ea4jWUAQfSBj49AXaSqlKMQjB
S2fK8Tj_owMKsIj8jQfLQjiqIQLQQHxKzPjbQbaKIFvIRDVLgauaKfaMQQvqBf4f
QbkKqgCMQHfqAfSeV9MogIqIIf8jQyrAbeqIQHwQHhqlm9S0700O0V00WI@D300C
5y00WyOI0u00GmSf11008V06YpBP8000i@O0YD0xmUhEi1fp@FX4RP8UPodaHYub
D60WETEnC4uhnv4RGme6ZtY1e9x4YM_@ebHDktgn6e00Wy57004G3iC3000WFX2G
AiCCFVo9moGi1O7sm@HK4BsX6WnsVEZO62E0y072Fkt4gfFvmbD00t@NuoOdIl1m
1M0YZFDu0B00md@_7EXn@D8Ku700W0CLi120W0_7sWUID0080040G00804@3RGEn
64RS201W0AstWrZD8sO3o8sWrZD8w0po8EXSYP8S0pOX104CrOHaR0i0100eT1H1
pM0o6KpFOm6O0o9cX_@130u0400W2G100G00GA2E100W0z@dGMm60000gKO30100
CBi1z@@mdn60400irO3QsLYMZD8ZO30G00W000000W3810WGXzW000K6nRC1C3n6
xH6n6aJC3H0ZK@@C0800ejS3M6_14020jPpGdo6CUy319@30uCgRkDWMd20An620
0WMAtIBHgMe9DzBbbMJ2jGF5INhlic4bWKEIhMQbcBEXaKacMqELBKUfM89bqJkM
MoIjA9E9LAzjsIQzIAHgMfPjlAbbMKAjIBDQTgbig4jaUAQfCVjI9AbaSql4qArB
SAfK8TDAh700mIj8jQ00WWWJe_Zno8s0AU90H8N7MH0WWXI6dl3mAu94RW1fBRSo
oC4R0sXzIU5@C4sBpIi50suFXubt60C1OyoIqwEjP4RGEn94ux@1_MQqoC30s0DQ
Pcx@F10aluXBxDM10Wa3CeZoaJdt0i2000mxk3RewqbJe8RcnA000W63CqSfnEq0
aaD317KTEnC4S0sHVzSGf9WDO000yfISlO7kC3fWpS6n6aS03z@3MIl6S6i1m1M0
000G4AS2TtcGemCG0048KO3W008yFi1PiQ0002001W00G00@2811000n6@mJg64R
i1m1M0o9sWe3UBdO3c@7iCYD8S0uY2cX6oxA0P30WTt7WCRv4RGnwWffU1000000
04mSYDOMu4w@@10001b2Rm306S_k1rlpmdn6y0W10G00W000y0m17@@Ghn600Wm1
a000UY6WGXFv6v4o963200Gn6xH6nCW3e082Oa6mFX5ZJOrv4EMs04020x2@GO_I
001088Pa00sGaJi1T2R00ea4QXUAqgSBP99A1fSqNfMQDNS29f8TjyrwMeyIjGwQ
fbqjiabQLQqIxKwRjbqgaKYUvIpQVLA9vaKIbMQqwqBH9fQ9zKqIPMQXIrA9veV9
iqgIeLIfGwQybLbeKV06u5dm1u0003y1WWWhB2P3owtCiY00v4pmWl9ZL408nN6Y
D0xmUPEiXgx@tW4RP8UPotnHYubD6000gf10WSYP8mtXp9sWWHD60yMS8z94jy@H
BZQSlL30s0DdO34001asRo00000WFXc2B3npdS2iC4R0sXDyV45n20sXEiTfp8cX
W30Fm1lZxDXQwJESP3000txF008SPi500044i1nnR60m1M00WF_300_7sWvJD8Ku
7gksWGXDG0010W0G00800JbQmKn6yFi18000cAsWOZJ8Nf4YDE180GwK400MFsWe
3IBZu4o9cXm1630MOGmKZ5Hk100BG000Qh0008AOs2GsWS_x20O3SEnC43_O0200
G1K00040OMO3coDX_@DOSt40400KAi1p2RG@@IyPi10K00g4WXIVPeTO3mJq0aJi
10000W3a0aHi1X2lH6nRS6i1n6V2EW2WSYP82Oaw@d10040dARmomF0020fDx7W0
00Si0319BK6n60W0000QTA0e4RG000qgSBP9fQ1jqqNfMQDIq2Tf8TjyrQIe4IvG
wQfbqku4aIHQqIxKQHvbqYaKYUvQnIBrA9vaKIrtQMgrBH9fQ9jr_IfMQHjn6mIh
AXMfd2jApNMLYIIA7zL2jIv5dIIAIN3bx100iKBak6022EXMD73W000S0700eubH
8N70O5X_GJ60S__9t94RG2jBFSooC4R0s0WDM2oMQin200edwZ@MwK3O8k1f100C
Y9008kXX10pC300CZ100Gzy67QW1SF802D0wmJOEe1c3FvyeQ8700mCy10W_@1sI
x0mw@9WMi18yVK1G6w5NWGggA0w@V6ggA0P3a300mKj300XBy00KLrK1Q9k030GL
L5OGBn5OGs0s00000Bq0GK497kWA9HmGu2max03fH0300u182001LOGC7CaF1FHN
Oc9w1WcCI8K4XAw8D002Qn58HC7m45H2LHC3LLLrk1c100egO10W0Na8A2Kx@t0K
W50rzd9Am200KPF3ydPE1C4f0d00RCZKmWqTC000yl@10W_@D83W40m@@t203PxO
GL06a001z08Xgg2WU0m00OZ900m2Z2009vCJOGp4SW186U0Qv9XY3OeDe40m@@t7
a118OGcGFaYG25@8H226KG43O4300GAY4Zumm000qdr04P0obw3C082vG68400SZ
r10WK2O8612J9WXO484782mmjIV@l100Rq000xxS008sKsCex04Rw@Hj_@Nwf100
u0y00GifIt@V20eBToEWXsxD84_Xhxd1020WHEOW4R1W87870C1ue@0300O1O000
e22W9@J6691Gk1CCvVoO1C0oDWXe6O60i1QW@IZDG100vBUS@IdQ03O500w@tWAR
q5000O@@6mxk18s09UzVOYo205DaGi1Chn01elX42RGw_@D0xG3mq@F30066A00G
m1W7u03HVbSsL600_KfDb400Rm4keqO36000OH79fqf6m0SW5WnwJ3Em200ULmTu
C010GG@@6020W004002010W002001000W00G0010W0W0080010G0G00800000000
080040G00804V1O000080040W008_28X2zC000G0080010G0G0040GwA20000800
Iq1l10iXBw0327WDMO00JXd6i01Wm1aemmbYOo000WTk700I7WXAq13s0300qQ_4
h6hQA300E0100QIl000400axfC0000000GW_@J0001m306000200400800W70C8_
@70002S8W1F0Om4XI00800G00000W7H3000800G000000m1a00Gm060G00040000
0040001JROm6b6G000g4B30040aeX18000W0000002OfW4MFq00008P5O00G0WV2
CW000ml760002000m1e000Cs20FRzG@@CCCW1G000AFmW_@J00G8mx@F0020uOiA
0400KZW1HC_0201WSDPem03M5uXnADOv03w@@10W000081wKuXS3Ie@V300dHzUc
1qwK0G9sG000qIvMQfIrADffVfiqQIe5wfGwQzbrae4aoHQrIhqSn9aaYqqYsfQX
oBr29faUoroIMgL9n9fIflrMIhNI9IrADhzLfiqYIfLQfHhJjaLbebqJHBbvhLAH
faaZ_bWMfVXJ9b2fhn0_000Mg5fLB00000m1u00GWBf1S00mKu1mu@fbD03O5106
TEPsVC0n6WTO3X7sh1vYND0u0_SYP8UPoRN_vwbD00C18000KJ3005u3S6nC4uR2
LPtRne6W5m000yMSqo@7tRfHBpSSlL4kS2rKcC0100i2000mdGZdNQi200fmoGi1
O7sm@1yBAsX6W8AgERP6o9cXW30FkNfpbsWUlIEcU30mz@bJC3XWBDSW5WmbJ8Ax
n0WF@r_l18002YGsWGXJORM3cAEXGXD8ZO3cAs080400208oOrWCYDW008mN090W
008su7w@tWOZDG0u0B008TA200z@RM6nCaJi1t@3M6nC4EW1rdVL4v600jBeby4Y
2Ui0aD8AO3Ivlha1O00O3S@@W100e0K00mlx6aJi1p2RmyoI00200400q307C@S2
rsd0000aYuD0800OEn6SKi13@BHhn608SWCdO325_aRaD8duDYDs3200ZP4dGEn6
41CIFORmRp9CTC30020o8sWTXVeDR980004aCIm62000dH1008bMeb6jE50KIYMG
F5jKkbMY4bGIEwNABjs5EXKAakMVPTBARfMaMjqAjMMQ9jADjeTg_isIjIIAfdSf
jclALISIgKIBDjSwbKYKjINAQL6BjeKQbKEql4BPL9Q9fKaMD_QbIKQ9j8TDeLgN
u4EW300KMF00GVsc100Kqb00GEnC4nMQG000C5U0q7Ap0400IMs0S_E0nv9D400W
qbP8iNcZDGwmUzeitd1800cAj1Ii50YNcS0m4WHk3S6n6aJC31__VK3S6uBpHBpG
Sl9qHFpO3K0o9cXmbh6h00Gav07IP2ykR0YDGYIz7EPP3gctWO3OMZ12G2z94sWq
v4dmOxFdHC3170Ukq6qHVonzQ00uJb6VJ8ktgn6C04tR2jxpSg1C07O182Ps0mh2
_FS2z@RGemF0001OgO34001yFi1zaQ00G0080W00G08_7sWSYD8su40201qYj100
02YDEXCYDOzO3YEWD0WDSv4pGu0cbJC3H1FMu0IqI_InWR000mEt300v4pGD@W1R
W180P3gUrC0W3G00WcqB000100f8u40002q@V2P1R0000eIXD0400mim6q@@3V6R
0G00mMZDePN9QDsWCYD001002000000EW40025s3200GP4lnWxC4Ri7P4RGEnC41
CIz@p0W00WsoDOPu7G0804cF3TARmunF4ayF0WpecTt0QTA0e4R8000QfSBjKfQb
cqqlKMQD9q2zK8Tj_oQIK2Iv8jQfLQku4IIHQQHxKjGvbQXaKIFvQP9BrgauaKfq
tQBfrBf4fQbcr_gKMQHfqAjqerfMogIqIwfeboyrAbeKIoH@IGhqlmfaIXqrO0V0
00BrYqg50022cjCYDmKu1mG@fbD03O510Q9EvqUP8s0i3R0xmUD8dug107mdJC3n
BJUxoFFzl10W90100WQQ00unTWp8cX0VJed_UB_t0i0600WtYZM_@uUBDQPcZxjY
mbJecoa1800WL0000_4QyyIZL0085M6YD0xm6_FWVHnEq04HHrPBpGEnC4S0unzA
Tkq6qxLonqR00k@lSYP84SfX3i04kS2HPF60yvls@D010GG4o64AS2RpQmKn94Ai
1P4RmKn601W00G00H6h6aHi14001_2810400n6@G@@64Ri1207O100fJH00e@Vpo
8cXSYDu_Vmo8cXm1Ce_yhY8t00eT1jadGKmZ5Wi1H1RGA@TbC0300RWx@7C0005W
200_TtWSYDOMO3cNM20G00W00WU0uWvdJes_4000WK4l10100p9sWZYDOuV9QDs0
0X3av4RGemdSZi1v4lHinUG00OCZu4o9sW8WHw1R3UREXfZP00G0G6n6iBy3jPB1
100WWaH2sG000uCA000fq2jqerf0WIIq2wfebojqIae4IoH@IPfrkm9aIXqrwBhR
HPBrYqgbMfroIBfLff5jJrdrMgLII9zaBjryLfIYJIbIQffbJlaIagLwIHhoOf5b
IhaoX_bO9hAHB9bYqgnNhKYIBf5fh1jIz2dm1S00Wow100wpsC00WYk400o9cX8s
I3200Wfm3W_GP6W00Goo6Wpt18EFfX000akC3LIRC00WHC100n6CC0Oa900WPf1b
Ga187om@Vj7800WPC300nICSe1C00t3Aq0e3PXvW6I8gf7I_tLCW700O_13yNNFk
F0P6mG43zcP03HCeRMH6ij@jv4nGa187om@nIyVG6@7zn@nhGB0OZbG@b6Ri000w
f__@F10QEIF0Uq@F60009C600q@lAT1i10ETc_@te7W4urw04t030upzIRD10040
T0OGt@CiQA3_Sll328XjJP000040_TE@E70xQjX@d3WxjIe303w@73lVpxk100w1
mZu6ym@W3G@@O0W2mw4Q3g@NYO0aeB032303j210L2aG82IeL80e@@J0008bLh4z
0y0008He300XRSI75vqJ1CTKaJU5IO6sO100S7O10WQ@VEH46YIv@u6_Fu6NRIyM
00GtK300Y9w@eK2lmpqsUNYf@pn@@@l@vdz80C8102Y00XG0W880G240e020C0X@
@Vu@_B_V@Z@pFv@xN_l_c@d@v@uZ_@zf@Rlw@rl_Fzi@FVx@ox_Vyl@3Fy@l7@lx
o@t_y@iJ@@wr@hkz@fV@Fwu@VU_@ch@Vvx@JE@@Zt@lu_@7_@@_@@l@@@x@@@_@@
l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_
@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@
@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x
@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@
@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l
@@@x@@@_@@l@@@x@@@_@@l@@@x@@@_@@l@@@x@tR;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[46] =
2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[46] =
-1, 524288, 262144, 131072, 65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[46] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[6 * 3 * 45] =
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  33,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  32,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  25,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  24,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  22,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  21,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  20,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  18,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  16,
0, 0,  0, 0, 0, 0, 3, 1536,12337, 3, 1280,12337, 0, 0, 0, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 3, 1280,12337, 1, 256, 13360, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 3, 1024,12337, 3, 768, 12337, 2, 0, 14128, 1, 0,  13360,
3, 768, 12337, 3, 512, 12337, 3, 256, 12337, 3, 0, 12337, 2, 0, 14128, 1, 0,  13360,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0,  98,
0, 0,  0, 0, 0, 0, 0, 0, 0, (39<<16)+0, 187, 32, (39<<16)+0, 145, 137, (39<<16)+0, 233, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (23<<16)+0, 187, 32, (23<<16)+0, 145, 137, (23<<16)+0, 237, 176,
0, 0,  0, 0, 0, 0, 0, 0, 0, (15<<16)+0, 187, 32, (15<<16)+0, 145, 137, (7 <<16)+6, 113, 137,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0,  1025, 4, 0, 1, 1, 0, 1025, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0,  99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,  99, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0,  0, 0, 0, 0, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 2, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0,  0, 129, 10, 98, 1, 0, 98, 2, 1,  96, 1, 0, 97, 0, 0, 96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,
0, 0,  0, 0, 0, 0, 1, 1, 97, 1, 0,  97, 0, 2, 96, 0, 1,  96,
0, 0,  0, 0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0,  98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[15];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
INTEGER A113[1];
INTEGER A153[1];
BOOLEAN A18[21];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[1];
BOOLEAN A31[50];
BOOLEAN A57[50];
BOOLEAN A29[756];
BOOLEAN A45[756];
BOOLEAN A30[756];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
INTEGER V414 = 0;
INTEGER V415 = 0;
INTEGER V416 = 0;
INTEGER V417 = 0;
INTEGER V418 = 0;
INTEGER V419 = 0;
BOOLEAN V209 = 0;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
BOOLEAN V422 = 0;
BOOLEAN V423 = 0;
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V398 = 0;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V392 = 1;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
BOOLEAN V308 = 1;
BOOLEAN V310 = 0;
BOOLEAN V336 = 0;
BOOLEAN V337 = 0;
BOOLEAN V340 = 0;
BOOLEAN V370 = 0;
BOOLEAN V362 = 0;
BOOLEAN V421 = 0;
BOOLEAN A175 = 0;
BOOLEAN V204 = 0;
BOOLEAN V146 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
INTEGER V203 = 0;
BOOLEAN V228 = 0;
BOOLEAN V344 = 0;
BOOLEAN V431 = 1;
ENDDATA;
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
PROCEDURE DO_FORCE_SRAM_DOWNLOAD USES TEMP_DATA;
V344 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_ICB USES TEMP_DATA;
V422 = 1;
ENDPROC;
PROCEDURE DO_BYPASS_CFM1 USES TEMP_DATA;
V423 = 1;
ENDPROC;
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
PROCEDURE L966 USES TEMP_DATA;
V340 = 1;
ENDPROC;
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101, L107,
L248,
L1188, L1198, L1161, L1164, L1167, L1172, L1177, L1150, L1155, L1152, L1175, L1176, L1189, L1220,
L1223,
L124, L113, L108, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L38;
IF ((V42 == 0) && V340) THEN CALL L108;
IF ((V42 == 0) && V340) THEN GOTO L38;
IF (V42 == 0) THEN CALL L1188;
IF (V42 != 0 || V2 == 0) THEN GOTO L1149;
V91 = 1;
CALL L1220;
IF (V42 != 0) THEN GOTO L1149;
IF ((V422 || V214 || V423 || V210) && (V102 || V103)) THEN CALL L1198;
IF (V214 && V423 && V210) THEN PRINT "Warning: No active flag for MAX 10 devices";
IF (V214 && V423 && V210) THEN GOTO L1149;
IF ((V42 == 0) && V102) THEN CALL L1161;
IF ((V42 == 0) && V100) THEN CALL L248;
V419 = 0;
IF ((V42 == 0) && V103) THEN CALL L1167;
V419 = 4;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V214) THEN CALL L1150;
V419 = 5;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V423) THEN CALL L1150;
V419 = 6;
IF ((V42 == 0) && (V108 || (V103 && !V421)) && !V210) THEN CALL L1150;
V419 = -1;
IF ((V42 == 0) && V103) THEN CALL L1167;
IF ((V42 == 0) && V103 && !V422 && !V214 && !V423 && !V210) THEN CALL L1177;
V91 = 0;
CALL L1188;
L1149:
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
L106, L458, L108, L107;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
;
V224 = 0
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
FOR i = 0 TO 200;
WAIT IDLE, 512 CYCLES, 512 USEC, IDLE;
NEXT i;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
(((A17[i] & 64) == 0) ||
(((A147[i] & 1) != 0) && !V231 && !V259))) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
FOR i = 0 TO V1;
IF (A171[i] != 0) THEN V4 = 131072;
NEXT i;
IF (V101 || V231 || V259 || V4 == 131072) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L1187;
L1187:
V203 = 0;
CALL L107;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
NEXT i;
V4 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 131072) != 0) THEN V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L84;
IF (V228 || V204) THEN GOTO L1178;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V199 = V199 + A59[i] - 1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN V203 = 1;
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L1178;
BOOLEAN V420[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V420[(V199 - 1)..0], CAPTURE V420[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0 && (A17[i] & 131072) != 0) THEN GOTO L1186;
GOTO L1180;
L1186:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1185;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 1)) THEN
GOTO L1182;
IF((A173[V202] == 0) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1183;
IF((A173[V202] == 1) &&
(A173[V202 + 1] == 0)) THEN
GOTO L1184;
L1185:
IF (V420[V201 + 1]) THEN V420[V201 + 2] = V420[V201];
V420[V201 + 1] = 0;
V420[V201] = 0;
GOTO L1181;
L1184:
V420[V201] = 0;
V420[V201 + 1] = 1;
V420[V201 + 2] = 0;
GOTO L1181;
L1183:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 0;
GOTO L1181;
L1182:
V420[V201] = 0;
V420[V201 + 1] = 0;
V420[V201 + 2] = 1;
GOTO L1181;
L1181:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L1179;
L1180:
V420[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L1179:
NEXT i;
DRSCAN V199, V420[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L1178:
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
IF (V228 == 0) THEN WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
IF (V228 == 1) THEN WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
V203 = 0;
L84:
ENDPROC;
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
, L1175, L1176
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L96a;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L96a:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L97;
A18[9..0] = $04A;
WAIT 10000 USEC;
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
FOR i = 0 TO V1;
IF (((A17[i] & 131072) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 131072;
NEXT i;
IF (V4 != 131072) THEN GOTO L1193;
CALL L1175;
IF (V42 == 0 && V228 && V344) THEN CALL L1176;
L1193:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
IF (!V421 && !A175) THEN CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
IF (V42 == 15) THEN
PRINT "Unable to erase the protected sector(s) of the ASC device";
IF (V42 == 18) THEN
PRINT "Reserved block start address mismatch - operation aborted";
IF (V42 == 19) THEN
PRINT "Unexpected problem has occurred during NAND flash bad block management.";
IF (V42 == 20) THEN
PRINT "Device is write-protected";
IF (V42 == 21) THEN
PRINT "Programming file size is larger than flash density";
IF (V42 == 22) THEN
PRINT "Programming file format is not aligned with flash type";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
;
CALL L107;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384 | 131072)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384 | 131072 | 262144)) != 0) THEN
A18[9..0] = $006;
IF ((A17[i] & 65536) != 0) THEN
A18[3..0] = $E;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
k = 0;
push l;
FOR i = 0 TO V1;
IF (A61[k] != 0) THEN GOTO L111;
IF (A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
k = k + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF (A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
l = 6;
FOR j = 0 TO (A61[k] - 1);
IF (V145 == A61[k+j+1]) THEN l = 0;
IF (l == 0) THEN j = A61[k];
NEXT j;
V27 = V27 + 32;
k = k + A61[k] + 1;
IF (l == 6) THEN
V42 = 6;
NEXT i;
L112:
pop l;
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0) &&
((A17[V1 - V84] & 131072) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (((A17[V1 - V84] & 131072) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 131072;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
IF (V4 == 131072) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L1220 USES DEVICE_DATA, TEMP_DATA, L1223;
FOR i = 0 to V1;
IF ((A17[i] & 131072) != 0 && (A17[i] & 4) != 0) THEN A17[i] = A17[i] | 8;
NEXT i;
FOR j = 0 to V1;
IF ((A17[j] & 131072) == 0 ||
(A17[j] & 4) == 0) THEN GOTO L1221;
A17[j] = A17[j] & ~8;
CALL L1223;
A17[j] = A17[j] | 8;
L1221:
IF (V42 != 0) THEN j = V1;
NEXT j;
FOR i = 0 to V1;
A17[i] = A17[i] & ~8;
NEXT i;
ENDPROC;
PROCEDURE L1223 USES DEVICE_DATA, TEMP_DATA, L458, L849;
PUSH j;
PUSH m;
PUSH n;
PUSH i;
A31[22+V1..0] = A29[22+V1..0];
IF ((A186[j] & 512) == 0) THEN A31[j+22..j] = $500008;
IF ((A186[j] & 512) != 0) THEN A31[j+22..j] = $480008;
A18[9..0] = $203;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (23 + V1), A31[22+V1..0];
STATE IDLE;
A18[9..0] = $205;
CALL L458;
WAIT IDLE, 16 CYCLES, IDLE;
DRSCAN (32 + V1), A29[31+V1..0], CAPTURE A31[31+V1..0];
WAIT IDLE, 3 CYCLES, IDLE;
ba[31..0] = A31[j+31..j];
Call L849;
IF (i == 0) THEN GOTO L1224;
i = i >> 23;
m = 0;
FOR n = 0 TO 8;
IF ((i & (1 << n)) != 0) THEN m = m + (1 << (8 - n));
NEXT n;
IF (m != 120 && m != 124 && m != 126) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Detected invalid Max 10 feature ID for device ", V0 - j;
IF (V42 != 0) THEN GOTO L1224;
IF (m > (A186[j] & 511)) THEN V42 = 6;
IF (V42 != 0) THEN PRINT "Incompatible feature ID for device ", V0 - j, ". Expected feature ID is ", (A186[j] & 511), " but fouL742 ", m;
L1224:
POP i;
POP n;
POP m;
POP j;
ENDPROC;
PROCEDURE L1188 USES DEVICE_DATA, TEMP_DATA, L107, L101;
CALL L107;
V4 = 131072;
V3 = 0;
CALL L101;
FOR i = 0 TO V1;
A17[i] = A17[i] & ~8;
IF ((A17[i] & 131072) != 0 && A171[i] == 0) THEN A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
PROCEDURE L1189 USES DEVICE_DATA, TEMP_DATA, L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k] = 1;
IF (A171[V414] != 0) THEN A57[k] = 1;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN A57[k] = 0;
k = k + 1;
NEXT V414;
A18[9..0] = $307;
CALL L458;
STATE IDLE;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
IF (V40 == 0) THEN V42 = 10;
ENDPROC;
PROCEDURE L1198 USES DEVICE_DATA, TEMP_DATA, L458, L1188, L1152;
k = 0;
FOR V415 = 1 TO 5;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 && A169[V416 + 2] == 2 && A169[V416 + 1] > 0) THEN k = k + 1;
NEXT V414;
NEXT V415;
IF (k == 0) THEN PRINT "Warning: ignore CFM1 flag";
IF (k == 0 && V214 && V210) THEN V423 = 1;
IF (k == 0 && V214 && V210) THEN GOTO L1169;
IF (k != 0 && V214 && V423 && V210) THEN GOTO L1169;
IF (k == 0) THEN V423 = 0;
IF (!V422 && !V214 && !V423 && !V210) THEN GOTO L1169;
IF (V424 == 0) THEN PRINT "Warning: Bad POF detected. Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V424 == 0) THEN V422 = 0;
IF (V424 == 0) THEN V214 = 0;
IF (V424 == 0) THEN V423 = 0;
IF (V424 == 0) THEN V210 = 0;
IF (V424 == 0) THEN GOTO L1169;
PRINT "Check Max 10 FPGA backup data ...";
CALL L1188;
V415 = 6;
V418 = 2;
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1200;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1199;
L1200:
A57[k] = 0;
k = k + 1;
L1199:
NEXT V414;
FOR i = 0 TO (128 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1201;
V416 = (V414 * 21) + 20;
j = A170[V414] + A169[V416] + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1202;
L1201:
k = k + 1;
L1202:
NEXT V414;
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 1 CYCLES, IDLE;
IF (V40 == 0) THEN PRINT "Warning: Perform fullchip erase and program on MAX 10 FPGA device(s)";
IF (V40 == 0) THEN V422 = 0;
IF (V40 == 0) THEN V214 = 0;
IF (V40 == 0) THEN V423 = 0;
IF (V40 == 0) THEN V210 = 0;
IF (V40 == 0) THEN i = 128;
NEXT i;
L1169:
ENDPROC;
PROCEDURE L1161 USES DEVICE_DATA, TEMP_DATA, L458, L1150, L1188, L1189;
CALL L1188;
IF (V422 == 0 && V214 == 0 && V423 == 0 && V210 == 0) THEN GOTO L1163;
V419 = 10;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 11;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 12;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1162;
L1163:
PRINT "full-chip erasing Max 10 FPGA device(s) ...";
A18[9..0] = $203;
CALL L458;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN k = k + 1;
IF (A171[V414] != 0 && (A17[V414] & 8) == 0) THEN k = k + 23;
NEXT V414;
DRSCAN k, A29[k-1..0];
A18[9..0] = $3F2;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
CALL L1189;
IF (V42 != 0 && V228) THEN print "Warning: Real-time ISP background programming is enabled. Ensure Max 10 device(s) is in usermode if you enable this feature";
L1162:
ENDPROC;
PROCEDURE L1164 USES DEVICE_DATA, TEMP_DATA, L458, L850;
IF (V419 == 10) THEN PRINT "erasing Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 11) THEN PRINT "erasing Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 12) THEN PRINT "erasing Max 10 FPGA UFM block at sector ", V415, " ...";
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1166;
i = V415;
CALL L850;
FOR i = 2 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
A31[k+22..k+3] = $FFFFE;
k = k + 20;
GOTO L1165;
L1166:
A31[k] = 0;
k = k + 1;
L1165:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, 350000 USEC, IDLE;
ENDPROC;
PROCEDURE L1167 USES DEVICE_DATA, TEMP_DATA, L1172, L1150, L1188, L1189, L1161;
CALL L1188;
IF (V419 == -1) THEN GOTO L1171;
V419 = 7;
IF (V214 == 0 && V42 == 0) THEN CALL L1150;
V419 = 8;
IF (V423 == 0 && V42 == 0) THEN CALL L1150;
V419 = 9;
IF (V210 == 0 && V42 == 0) THEN CALL L1150;
GOTO L1168;
L1171:
IF (V422 || V214 || V423 || V210) THEN GOTO L1168;
PRINT "programming Max 10 FPGA DSM block ...";
V415 = 0;
V418 = 0;
CALL L1172;
CALL L1189;
IF (V42 == 0) THEN GOTO L1168;
CALL L1161;
V42 = 10;
L1168:
ENDPROC;
PROCEDURE L1177 USES DEVICE_DATA, TEMP_DATA, L458, L1152, L1188, L1189, L1161;
CALL L1188;
V415 = 6;
V418 = 0;
L1195:
CALL L1152;
A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] != 0) THEN A31[k+31..k] = $6C48A50F; 
IF (A171[V414] != 0) THEN k = k + 32;
IF (A171[V414] == 0) THEN A31[k] = 0;
IF (A171[V414] == 0) THEN k = k + 1;
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
CALL L1189;
IF (V42 != 0 || V418 == 1) THEN GOTO L1196;
V418 = V418 + 1;
GOTO L1195;
L1196:
IF V42 == 0 THEN GOTO L1228;
CALL L1161;
V42 = 10;
L1228:
ENDPROC;
PROCEDURE L1150 USES DEVICE_DATA, TEMP_DATA, L1188, L1164, L1172, L1155;
FOR V415 = 1 TO 5;
CALL L1188;
V417 = 0;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
i = 0;
IF (V419 == 1 || V419 == 4 || V419 == 7 || V419 == 10) THEN i = 1;
IF (V419 == 2 || V419 == 5 || V419 == 8 || V419 == 11) THEN i = 2;
IF (V419 == 3 || V419 == 6 || V419 == 9 || V419 == 12) THEN i = 3;
IF (A171[V414] != 0 &&
A169[V416 + 2] == i &&
A169[V416 + 1] > 0) THEN i = 4;
IF (i != 4 && A171[V414] != 0) THEN A17[V414] = A17[V414] | 8;
IF (i == 4 && A169[V416 + 1] > V417) THEN V417 = A169[V416 + 1];
NEXT V414;
IF (V417 == 0) THEN GOTO L1151;
FOR V418 = 0 TO (V417 - 16384) STEP 16384;
FOR V414 = 0 TO V1;
V416 = (V414 * 21) + (V415 * 3);
IF (A171[V414] != 0 &&
(A17[V414] & 8) == 0 &&
V418 >= A169[V416 + 1]) THEN A17[V414] = A17[V414] | 8;
NEXT V414;
IF (V419 == 1 || V419 == 2 || V419 == 3 ||
V419 == 4 || V419 == 5 || V419 == 6) THEN CALL L1155;
IF (V419 == 7 || V419 == 8 || V419 == 9) THEN CALL L1172;
IF (V419 == 10 || V419 == 11 || V419 == 12) THEN CALL L1164;
IF (V42 != 0 || V419 == 10 || V419 == 11 || V419 == 12) THEN V418 = V417;
NEXT V418;
L1151:
IF (V42 != 0) THEN V415 = 5;
NEXT V415;
ENDPROC;
PROCEDURE L1152 USES DEVICE_DATA, TEMP_DATA, L458, L850;
A18[9..0] = $203;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1154;
V416 = (V414 * 21) + (V415 * 3);
IF (V415 == 6 && V418 == 1) THEN i = A169[V416] + A169[V416 + 1];
IF (V415 == 6 && V418 == 2) THEN i = A169[V416 + 2];
IF (V415 == 6 && V418 != 0) THEN GOTO L1194;
i = A169[V416] + V418;
L1194:
i = i >> 5;
CALL L850;
FOR i = 22 TO 0 STEP -1;
A31[k] = ba[i];
k = k + 1;
NEXT i;
GOTO L1153;
L1154:
A31[k] = 0;
k = k + 1;
L1153:
NEXT V414;
DRSCAN k, A31[k-1..0];
STATE IDLE;
ENDPROC;
PROCEDURE L1172 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 7 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 8 && V418 == 0) THEN PRINT "programming Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 9 && V418 == 0) THEN PRINT "programming Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $2F4;
IF (V415 == 0) THEN A18[9..0] = $3F4;
CALL L458;
STATE IDLE;
FOR i = 0 TO (16384 - 32) STEP 32;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1173;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1174;
L1173:
A31[k] = 0;
k = k + 1;
L1174:
NEXT V414;
DRSCAN k, A31[k-1..0];
WAIT IDLE, 3 CYCLES, 320 USEC, IDLE;
NEXT i;
ENDPROC;
PROCEDURE L1155 USES DEVICE_DATA, TEMP_DATA, L458, L1152;
IF (V419 == 1 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 2 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 3 && V418 == 0) THEN PRINT "blank checking Max 10 FPGA UFM block at sector ", V415, " ...";
IF (V419 == 4 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM0 block at sector ", V415, " ...";
IF (V419 == 5 && V418 == 0) THEN PRINT "verifying Max 10 FPGA CFM1 block at sector ", V415, " ...";
IF (V419 == 6 && V418 == 0) THEN PRINT "verifying Max 10 FPGA UFM block at sector ", V415, " ...";
CALL L1152;
A18[9..0] = $205;
CALL L458;
STATE IDLE;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1157;
A31[k+31..k] = $FFFFFFFF;
A57[k+31..k] = $FFFFFFFF;
k = k + 32;
GOTO L1156;
L1157:
A31[k] = 0;
A57[k] = 0;
k = k + 1;
L1156:
NEXT V414;
FOR i = 0 TO (16384 - 32) STEP 32;
IF V74 == 1 THEN GOTO L1158;
k = 0;
FOR V414 = 0 TO V1;
IF (A171[V414] == 0 || (A17[V414] & 8) != 0) THEN GOTO L1159;
V416 = (V414 * 21) + (V415 * 3);
j = A170[V414] + A169[V416] + V418 + i;
A31[k+31..k] = A172[j+31..j];
k = k + 32;
GOTO L1160;
L1159:
k = k + 1;
L1160:
NEXT V414;
L1158:
DRSCAN k, A29[k-1..0], COMPARE A31[k-1..0], A57[k-1..0], V40;
WAIT IDLE, 3 CYCLES, IDLE;
IF (V40 == 0 && (V419 == 1 || V419 == 2 || V419 == 3)) THEN V42 = 9;
IF (V40 == 0 && (V419 == 4 || V419 == 5 || V419 == 6)) THEN V42 = 11;
IF (V42 != 0) THEN i = 16384;
NEXT i;
ENDPROC;
PROCEDURE L1175 USES TEMP_DATA, L1188, L458;
CALL L1188;
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT IDLE, 1 CYCLES, 100000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L1176 USES TEMP_DATA, L458;
A18[9..0] = $2CC;
CALL L458;
WAIT IDLE, 16 CYCLES, 10000 USEC, IDLE;
A18[9..0] = $201;
CALL L458;
WAIT IDLE, 16 CYCLES, 350000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
STATE RESET;
ENDPROC;
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
, L1150
;
V74 = 1;
V419 = 1;
IF ((V4 == 131072) && !V214 && V42 == 0) THEN CALL L1150;
V419 = 2;
IF ((V4 == 131072) && !V423 && V42 == 0) THEN CALL L1150;
V419 = 3;
IF ((V4 == 131072) && !V210 && V42 == 0) THEN CALL L1150;
IF (V103) THEN V74 = 0;
ENDPROC;
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
PUSH l;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF (V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
IF (V4 == 131072) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP l;
POP j;
POP i;
ENDPROC;
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
CRC 8303;
